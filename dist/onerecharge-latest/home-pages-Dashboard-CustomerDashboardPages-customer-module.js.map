{"version":3,"sources":["./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-dashboard/buy-data/buy-data.component.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-dashboard/buy-data/buy-data.component.html","./src/app/core/guards/auth-guard/auth.guard.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/services/services.component.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/services/services.component.html","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-dashboard/buy-airtime/buy-airtime.component.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-dashboard/buy-airtime/buy-airtime.component.html","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-routing.module.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer.module.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-settings/customer-settings.component.ts","./src/app/home/pages/Dashboard/CustomerDashboardPages/customer-settings/customer-settings.component.html"],"names":[],"mappings":"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","file":"home-pages-Dashboard-CustomerDashboardPages-customer-module.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AnonymousService} from '../../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../../core/services/shared-service/shared.service';\r\nimport {ErrorService} from '../../../../../../core/services/error_service/error.service';\r\nimport {ToastService} from '../../../../../../shared/services/toast-service/toast.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../../../../../shared/Constants';\r\nimport {FormBuilder, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\r\nimport {MobileNetworks} from '../../../../../../shared/mobile-networks';\r\nimport {AuthService} from '../../../../../../core/authentication/auth-service.service';\r\nimport {FlutterWaveResponse} from '../../../../../../core/mocks/flutterwaveResponse.model';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n\r\ndeclare var window: any;\r\n\r\n@Component({\r\n  selector: 'app-buy-data',\r\n  templateUrl: './buy-data.component.html',\r\n  styleUrls: ['./buy-data.component.scss']\r\n})\r\nexport class BuyDataComponent implements OnInit {\r\n\r\n  public dataForm: FormGroup;\r\n\r\n  mobnumPattern = '^((\\\\+91-?)|0)?[0-9]{7,14}$';\r\n  @ViewChild(FormGroupDirective) dataFormVC;\r\n\r\n  public networksDataWithId = [];\r\n  public networkDataPackages = [];\r\n  public networksLogoPath: any = [];\r\n  public setId = null;\r\n  public isVerifyDetails: boolean;\r\n  public networks: any;\r\n  public isloading: boolean;\r\n  public isLoadingNetworks: boolean;\r\n  public errorResponse: any;\r\n  public userType: string;\r\n  public isRecharging: boolean;\r\n  public switchState: string;\r\n  public userEmail: string;\r\n\r\n  getpaidSetup: any;\r\n  ravePay: any;\r\n  transactionID: string;\r\n\r\n  public selectedNetwork: string;\r\n  public productDetails: any;\r\n  public productName: string;\r\n  public mobile: number;\r\n  public network: any;\r\n  public product: any;\r\n  public amount: number;\r\n\r\n\r\n  public dataObj: any = {\r\n    cardLast4Digit: '',\r\n    networkId: 0,\r\n    paymentId: 0,\r\n    productId: 0,\r\n    receiverMsisdn: '',\r\n    status: 'string',\r\n    transactionId: '',\r\n    transactionRef: ''\r\n  };\r\n\r\n  constructor(public sharedService: SharedService,\r\n              public anonymousService: AnonymousService,\r\n              public snackBar: MatSnackBar, public error: ErrorService, public authService: AuthService, public fb: FormBuilder, public errorService: ErrorService,\r\n              public toast: ToastService, public router: Router) {\r\n    this.isLoadingNetworks = false;\r\n    this.isVerifyDetails = false;\r\n\r\n    this.switchState = 'data';\r\n\r\n    this.networks = [];\r\n    this.networksLogoPath = MobileNetworks.networksLogoPath;\r\n    this.isloading = false;\r\n    this.createForm();\r\n\r\n  }\r\n\r\n  createForm(): void {\r\n    this.dataForm = this.fb.group({\r\n      mobile: ['', [Validators.required, Validators.pattern(this.mobnumPattern)]],\r\n      networkId: ['', [Validators.required]],\r\n      product: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  //// Sort data ////////////////////\r\n  getNetworksDataWithId(): void {\r\n    this.networksDataWithId = [];\r\n\r\n    this.networks.sort((a, b) => {\r\n      return -(a.id - b.id || a.networkName.localeCompare(b.networkName));\r\n    });\r\n\r\n    for (let i = 0; i < this.networks.length; i++) {\r\n      const sortedNetworks: any = {id: 0, logoPath: '', data: {}};\r\n      sortedNetworks.id = i + 1;\r\n      sortedNetworks.logoPath = this.networksLogoPath[this.networks[i].networkCodeName];\r\n      sortedNetworks.data = this.networks[i];\r\n      this.networksDataWithId.push(sortedNetworks);\r\n      this.isLoadingNetworks = false;\r\n    }\r\n    // console.log('************ Networks with id ****************');\r\n    // console.log(this.networksDataWithId);\r\n    localStorage.setItem('networks', JSON.stringify(this.networksDataWithId));\r\n  }\r\n\r\n  //\r\n  setNetwork(networkId: any): void {\r\n    const productObj = this.networksDataWithId.filter((network) => network.data.id === networkId);\r\n    const networkName = productObj[0].data.networkName;\r\n    this.amount = null;\r\n    // console.log('product name', networkName);\r\n\r\n    // console.log('product object', productObj);\r\n\r\n    // console.log(' product', productObj[0].data.products);\r\n\r\n    this.selectedNetwork = networkName;\r\n    // console.log('selectedNetwork', this.selectedNetwork);\r\n    this.networkDataPackages = productObj[0].data.products;\r\n    // console.log(networkName);\r\n  }\r\n\r\n  setPackage(packageId: any): void {\r\n    this.productDetails = this.networkDataPackages.filter((packageData) => packageData.id === packageId)[0];\r\n    // console.log(this.productDetails);\r\n    this.amount = this.productDetails.amount;\r\n    this.productName = this.productDetails.name;\r\n  }\r\n\r\n  getNetworkName(id: any): void {\r\n    return this.networksDataWithId.filter((network) => network.data.id === id)[0].data.networkName;\r\n  }\r\n\r\n  // ////////////////// get all networks info ////////////////////////////////////////////////////\r\n  private getAllDataNetworks = () => {\r\n    this.isLoadingNetworks = true;\r\n    this.anonymousService.getDataNetworks().subscribe(\r\n      response => {\r\n        // console.log('************ Data Network list ****************');\r\n        // console.log(response.data);\r\n        this.networks = response.data;\r\n        this.getNetworksDataWithId();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getAllDataNetworks, err);\r\n        this.isLoadingNetworks = false;\r\n        console.log(this.errorResponse);\r\n\r\n      }\r\n    );\r\n  };\r\n\r\n  generateTransaction = () => {\r\n    this.isRecharging = true;\r\n    this.anonymousService.generateTransactionId().subscribe(\r\n      response => {\r\n        console.log('************ generateTransactionId ****************');\r\n        console.log(response.data[0].transactionId);\r\n        this.transactionID = response.data[0].transactionId;\r\n        this.payWithRave();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.error.errorHandlerWithText(this.generateTransaction, err);\r\n\r\n      }\r\n    );\r\n  };\r\n\r\n  checkNum(): void {\r\n    if (this.dataForm.value.mobile && this.dataForm.value.mobile.length  !==  11) {\r\n      this.dataForm.controls.mobile.setErrors({numberValid: true});\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.selectedNetwork = null;\r\n    this.dataFormVC.resetForm();\r\n    this.dataFormVC.form.markAsPristine();\r\n    this.dataFormVC.form.markAsUntouched();\r\n    this.dataFormVC.form.updateValueAndValidity();\r\n  }\r\n\r\n  //\r\n  backToStart(): void {\r\n    this.isVerifyDetails = false;\r\n  }\r\n\r\n  //\r\n\r\n  // Submit data form\r\n  onSubmit(): void {\r\n    this.isloading = true;\r\n    this.dataObj.networkId = this.network;\r\n    this.dataObj.productId = this.product;\r\n    this.dataObj.receiverMsisdn = this.mobile;\r\n    this.dataObj.amount = this.productDetails.amount;\r\n    this.dataObj.networkName = this.getNetworkName(this.network);\r\n\r\n    localStorage.setItem(Constants.CUSTOMER_USERTYPE + 'data', JSON.stringify(this.dataObj));\r\n\r\n    // this.generateTransactionId();\r\n    this.switchState = 'data-verify';\r\n    console.log('data Request', this.dataFormVC.value);\r\n    console.log('data dataObj', this.dataObj);\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.userEmail = JSON.parse(localStorage.getItem(Constants.PROFILE)).email;\r\n    this.getAllDataNetworks();\r\n  }\r\n\r\n  goToPage(): void {\r\n    this.switchState = 'data';\r\n  }\r\n\r\n  //\r\n  public payWithRave(): void {\r\n    this.isRecharging = false;\r\n\r\n    console.log('paying');\r\n\r\n    const ravePay = window.getpaidSetup({\r\n      PBFPubKey: Constants.CUSTOMER_GUEST_PAYMENT_KEY,\r\n      // customer_email: this.userEmail,\r\n      customer_email: Constants.SUPPORT_EMAIL,\r\n      amount: this.dataObj.amount,\r\n      customer_phone: this.dataObj.receiverMsisdn,\r\n      currency: 'NGN',\r\n      payment_method: 'both',\r\n      txref: this.transactionID,\r\n      meta: [{\r\n        metaname: 'flightID',\r\n        metavalue: 'AP1234'\r\n      }],\r\n      onclose(): void {\r\n      },\r\n      callback(response): void {\r\n        const txref = response.tx.txRef; // collect flwRef returned and pass to a \t\t\t\t\tserver page to complete status check.\r\n        console.log('txref ', txref);\r\n        console.log('This is the response returned after a charge', response);\r\n        const flutterResponse = new FlutterWaveResponse(response.data, response.name, response.success, response.tx);\r\n        if (response.tx.chargeResponseCode === '00' || response.tx.chargeResponseCode === '0') {\r\n          // redirect to a success page\r\n\r\n          const customerDataObj = {\r\n            cardLast4Digit: '',\r\n            networkId: 0,\r\n            paymentId: 0,\r\n            productId: 0,\r\n            receiverMsisdn: '',\r\n            status: 'string',\r\n            transactionId: '',\r\n            transactionRef: ''\r\n          };\r\n\r\n          const previousDataObj: any = JSON.parse(localStorage.getItem(Constants.CUSTOMER_USERTYPE + 'data'));\r\n          localStorage.removeItem(Constants.CUSTOMER_USERTYPE + 'data');\r\n\r\n          customerDataObj.receiverMsisdn = previousDataObj.receiverMsisdn;\r\n          customerDataObj.networkId = previousDataObj.networkId;\r\n          customerDataObj.productId = previousDataObj.productId;\r\n          customerDataObj.paymentId = flutterResponse.tx.paymentId;\r\n          customerDataObj.transactionId = flutterResponse.tx.txRef;\r\n          customerDataObj.status = flutterResponse.tx.status;\r\n\r\n          const paymentObj = {\r\n            payload: customerDataObj,\r\n            type: 'data',\r\n            homeUrl: 'customer/',\r\n            packageTransactionUrl: 'customer/',\r\n            repeatTransactionUrl: 'customer/data'\r\n          };\r\n\r\n          console.log('paymentObj', paymentObj);\r\n\r\n          localStorage.setItem(Constants.CUSTOMER_KEY + 'paymentObjKey', JSON.stringify(paymentObj));\r\n\r\n          window.location.href = '#/customer/payment-status';\r\n\r\n          ravePay.close();\r\n\r\n        } else {\r\n          // redirect to a failure page.\r\n        }\r\n\r\n        // this.ravePay.close(); // use this to close the modal immediately after payment.\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<div class=\"package-card\">\r\n  <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n  <header style=\"font-weight:700;\">\r\n    <a *ngIf=\"switchState === 'data'\" routerLink=\"/customer\" class=\"back-btn\"><i class=\"fa fa-arrow-left\"></i><span>back to Home</span></a>\r\n    <a *ngIf=\"switchState !== 'data'\" (click)=\"goToPage()\" class=\"back-btn\"><i class=\"fa fa-arrow-left\"></i><span>back</span></a>\r\n    Buy Data\r\n  </header>\r\n  <div>\r\n    <mat-progress-bar *ngIf=\"false\" mode=\"indeterminate\"></mat-progress-bar>\r\n  </div>\r\n  <div class=\"content-area\">\r\n    <div class=\"container\">\r\n      <div class=\"row mt-5 mb-5\">\r\n        <div class=\"col-xl-2\">\r\n\r\n        </div>\r\n        <div class=\"col-xl-8 col-xs-12\">\r\n          <div class=\"widget-content\" [ngSwitch]=\"'data'\">\r\n\r\n            <!--data block -->\r\n            <div class=\"widget-content-block data\"  [class.visible]=\"switchState === 'data'\">\r\n              <form [formGroup]=\"dataForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n                <div class=\"mb-5\">\r\n                  <span *ngIf=\"isLoadingNetworks\" style=\"color:#777;\"><i class=\"fa fa-spinner fa-spin\"></i> Loading Network Providers  . . .</span>\r\n                  <mat-select *ngIf=\"!isLoadingNetworks\"  placeholder=\"Choose a network providers\" required formControlName=\"networkId\" [(ngModel)]=\"network\" (change)=\"setNetwork(network)\"  style=\"width:100%;\">\r\n                    <ng-template ngFor let-network [ngForOf]=\"networksDataWithId\">\r\n                      <mat-option [value]=\"network.data.id\" *ngIf=\"network.data.isDataActive\">\r\n                        <img width=\"20\" height=\"20\" [src]=\"network.logoPath\"/>  {{network.data.networkName}}\r\n                      </mat-option>\r\n                    </ng-template>\r\n                  </mat-select>\r\n                  <div *ngIf=\"dataForm.get('networkId').invalid && (dataForm.get('networkId').dirty || dataForm.get('networkId').touched)\">\r\n                    <div class=\"errorText\" >\r\n                      Network Provider is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-5\">\r\n                  <mat-select *ngIf=\"selectedNetwork\"  placeholder=\"Select a data bundle\" required formControlName=\"product\" [(ngModel)]=\"product\" (change)=\"setPackage(product)\"  style=\"width:100%;\">\r\n                    <mat-option [value]=\"product.id\"   *ngFor=\"let product of networkDataPackages\">\r\n                      {{product.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"dataForm.get('product').invalid && (dataForm.get('product').dirty || dataForm.get('product').touched)\">\r\n                    <div class=\"errorText\" >\r\n                      Data bundle is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <mat-form-field class=\"mb-5\">\r\n                  <label class=\"sr-only\" for=\"phone\">Mobile phone</label>\r\n                  <input matInput type=\"tel\" required id=\"phone\" (keyup)=\"checkNum()\" (blur)=\"checkNum()\" formControlName=\"mobile\" placeholder=\"Mobile Phone\" [(ngModel)]=\"mobile\">\r\n                  <div *ngIf=\"dataForm.get('mobile').invalid && (dataForm.get('mobile').dirty || dataForm.get('mobile').touched)\">\r\n                    <div *ngIf=\"dataForm.get('mobile').errors.required\" class=\"errorText\" >\r\n                      Phone number is required\r\n                    </div>\r\n\r\n                    <div *ngIf=\"dataForm.get('mobile').errors.pattern && !(dataForm.get('mobile').errors.required)\" class=\"errorText\" >\r\n                      Enter a valid phone number\r\n                    </div>\r\n\r\n                    <div *ngIf=\"dataForm.get('mobile').errors.numberValid\" class=\"errorText\" >\r\n                      Number length must be 11 digits\r\n                    </div>\r\n                  </div>\r\n                </mat-form-field>\r\n\r\n                <div class=\"mb-5\" style=\"background-color: #ededed; color:#777; border:#444; padding:5px;\">\r\n                  <strong>Amount : </strong>{{amount}}\r\n                </div>\r\n\r\n                <a md-raised-button color=\"\" (click)=\"resetForm()\"> Reset </a>\r\n\r\n                <button md-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!dataForm.valid && !amount\">Proceed</button>\r\n\r\n              </form>\r\n            </div>\r\n            <!--data block-->\r\n\r\n            <!--data verify block-->\r\n            <div class=\"widget-content-block verify-recharge\"  *ngIf=\"switchState === 'data-verify'\"  [class.visible]=\"switchState === 'data-verify'\" >\r\n              <h4 style=\"margin:0;\">Recharge Details</h4>\r\n              <p>Please confirm details to proceed</p>\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Product name</span> <span class=\"value\">{{productName | checkNull : ''}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Phone number</span> <span class=\"value\">{{dataObj.receiverMsisdn | checkNull : ''}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{dataObj.networkName | checkNull : ''}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{dataObj.amount | currency | moneyFormatter | checkNull : ''}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" color=\"\" (click)=\"goToPage()\" [disabled]=\"isRecharging\"> Back </button>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"generateTransaction()\" [disabled]=\"isRecharging\"  color=\"accent\">{{!isRecharging?'Pay':'Please wait'}}\r\n                <i *ngIf=\"isRecharging\" class=\"fa fa-spinner fa-spin\"></i>\r\n              </button>\r\n\r\n            </div>\r\n            <!--data verify block-->\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Constants } from '../../../shared/Constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  // add the service we need\r\n  constructor( private router: Router ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    // handle any redirects if a user isn't authenticated\r\n    if (!localStorage.getItem(Constants.ACCESS_TOKEN)){\r\n      // redirect the user\r\n      this.router.navigate(['/sign-in']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {ServiceManagerService} from '../../AdminDashboardPages/service-management/views/service-manager.service';\nimport {ServiceStoreService} from '../../AdminDashboardPages/service-management/store/service-store.service';\nimport {ServiceCategoryModel} from '../../AdminDashboardPages/service-management/models/service-category.model';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent implements OnInit {\n  categories: ServiceCategoryModel[];\n\n  constructor(\n    private smService: ServiceManagerService,\n    private smStore: ServiceStoreService,\n    public sanitizer: DomSanitizer,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.smStore.categories.subscribe(res => {\n      const cat: ServiceCategoryModel[] = [];\n      res.forEach(category => {\n        cat.push(new ServiceCategoryModel(category));\n      });\n      this.categories = cat;\n    });\n  }\n\n  gotoServicePage(id: number): void {\n    this.router.navigate(['customer/services/' + id]);\n  }\n}\n","<section>\n  <button *ngFor=\"let category of categories\" (click)=\"gotoServicePage(category.id)\">\n    <div class=\"logo\">\n      <img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(category.categoryLogo)\"> </div>\n    <div>{{category.categoryName}}</div>\n  </button>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {AnonymousService} from '../../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../../core/services/shared-service/shared.service';\r\nimport {UserService} from '../../../../../../core/services/users-service/user-service';\r\nimport {ErrorService} from '../../../../../../core/services/error_service/error.service';\r\nimport {StorageService} from '../../../../../../core/services/storage-service/storage.service';\r\nimport {ToastService} from '../../../../../../shared/services/toast-service/toast.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../../../../../shared/Constants';\r\nimport {FormBuilder, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\r\nimport {MobileNetworks} from '../../../../../../shared/mobile-networks';\r\nimport {TransactionsResponse} from '../../../../../../core/mocks/transactionsResponse.model';\r\nimport {FlutterWaveResponse} from \"../../../../../../core/mocks/flutterwaveResponse.model\";\r\nimport {RechargeResponse} from \"../../../../../../core/mocks/rechargeResponse.model\";\r\n\r\ndeclare var window: any;\r\n@Component({\r\n  selector: 'app-buy-airtime',\r\n  templateUrl: './buy-airtime.component.html',\r\n  styleUrls: ['./buy-airtime.component.scss']\r\n})\r\nexport class BuyAirtimeComponent implements OnInit {\r\n  getpaidSetup: any;\r\n  // ravePay:any;\r\n  transactionID: string;\r\n\r\n  public airtimeForm: FormGroup;\r\n\r\n  mobnumPattern = '^((\\\\+91-?)|0)?[0-9]{7,14}$';\r\n  @ViewChild(FormGroupDirective) _airtimeForm;\r\n\r\n  public networksWithId = [];\r\n  public networksLogoPath: any = [];\r\n  public setId = null;\r\n  public switchState: string;\r\n  public networks: any;\r\n  public isloading: boolean;\r\n  public isLoadingNetworks: boolean;\r\n  public errorResponse: any;\r\n  public isRecharging : boolean;\r\n  public isCommissionWallet = false;\r\n  public rechargeResponse : any;\r\n\r\n  public userEmail: any;\r\n  public selectedNetwork: string;\r\n  public amount: number;\r\n  public mobile: number;\r\n  public network: any;\r\n  private previousRechargeObj: any;\r\n\r\n\r\n  public rechargeObj : any = {\r\n    'amount': 0,\r\n    'fromWallet': '',\r\n    'networkId': 0,\r\n    'receiverMsisdn': '',\r\n    'networkName': ''\r\n  };\r\n\r\n\r\n  constructor(public sharedService: SharedService, public anonymousService: AnonymousService, public router: Router,\r\n              public error: ErrorService, public fb: FormBuilder, public customer : UserService, public toast: ToastService,\r\n              public storage : StorageService) {\r\n\r\n    // this.sharedService.userWallet.subscribe(this.getWallet);\r\n    this.isLoadingNetworks = false;\r\n    this.switchState = 'recharge';\r\n\r\n    this.networks = [];\r\n    this.networksLogoPath = MobileNetworks.networksLogoPath;\r\n    this.isloading = false;\r\n    this.isRecharging = false;\r\n    this.createForm();\r\n\r\n  }\r\n\r\n  createForm(): void {\r\n    this.airtimeForm = this.fb.group({\r\n      amount: ['', Validators.required],\r\n      mobile: ['', [Validators.required, Validators.pattern(this.mobnumPattern)]],\r\n      networkId: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setNetwork(id : any){\r\n    const networkName = this.networksWithId.filter((network) =>  network.data.id === id)[0].data.networkName;\r\n    this.selectedNetwork = networkName;\r\n    console.log(networkName);\r\n  }\r\n\r\n  getNetworkName(id:any){\r\n    return this.networksWithId.filter((network) =>  network.data.id === id)[0].data.networkName;\r\n  }\r\n\r\n\r\n  checkNum() {\r\n    if (this.airtimeForm.value.mobile !== null && this.airtimeForm.value.mobile.length  !==  11) {\r\n      this.airtimeForm.controls.mobile.setErrors({'numberValid': true});\r\n    }\r\n  }\r\n\r\n  resetForm(external = false){\r\n    if(external){\r\n      this.network = null;\r\n      this.mobile = null;\r\n      this.amount = null;\r\n      return false;\r\n    }\r\n    this._airtimeForm.resetForm();\r\n    this._airtimeForm.form.markAsPristine();\r\n    this._airtimeForm.form.markAsUntouched();\r\n    this._airtimeForm.form.updateValueAndValidity();\r\n  }\r\n\r\n\r\n  goToPage(page : string = 'recharge'){\r\n    this.switchState = page;\r\n  }\r\n\r\n  // ////////////////// get all networks info ////////////////////////////////////////////////////\r\n  getAllNetworks = () => {\r\n    this.anonymousService.getNetworks().subscribe(\r\n      response => {\r\n        console.log('************ Networks list ****************');\r\n        console.log(response.data);\r\n        this.networks = response.data;\r\n        console.log(this.network);\r\n        this.getNetworksWithId();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getAllNetworks, err);\r\n        this.isLoadingNetworks = false;\r\n        console.log(this.errorResponse);\r\n\r\n      }\r\n    )\r\n  };\r\n  //// Sort data ////////////////////\r\n  getNetworksWithId() {\r\n    this.networksWithId = [];\r\n\r\n    this.networks.sort ( (a, b) => {\r\n      return - ( a.id - b.id  ||  a.networkName.localeCompare(b.networkName) );\r\n    });\r\n\r\n    for (let i = 0; i < this.networks.length; i++ ) {\r\n      const sortedNetworks: any = {id: 0, logoPath: '', data: {}};\r\n      sortedNetworks.id = i + 1;\r\n      sortedNetworks.logoPath = this.networksLogoPath[this.networks[i]['networkCodeName']];\r\n      sortedNetworks.data = this.networks[i];\r\n      this.networksWithId.push(sortedNetworks);\r\n      this.isLoadingNetworks = false;\r\n    }\r\n    console.log('************ Networks with id ****************');\r\n    console.log(this.networksWithId);\r\n    localStorage.setItem('networks', JSON.stringify(this.networksWithId));\r\n  }\r\n\r\n  // Submit recharge form\r\n  onSubmit(): void {\r\n    this.isloading = true;\r\n    this.rechargeObj.networkId = this.network;\r\n    this.rechargeObj.receiverMsisdn = this.mobile;\r\n    this.rechargeObj.amount = this.amount;\r\n    this.rechargeObj.networkName = this.getNetworkName(this.network);\r\n\r\n    localStorage.setItem(Constants.CUSTOMER_KEY + 'recharge' , JSON.stringify(this.rechargeObj));\r\n\r\n   // this.generateTransactionId();\r\n    this.switchState = 'recharge-verify';\r\n    console.log('recharge Request', this._airtimeForm.value);\r\n    console.log('recharge rechargeObj', this.rechargeObj);\r\n  }\r\n\r\n  // ////////////////// get all networks info ////////////////////////////////////////////////////\r\n  generateTransaction = () => {\r\n    this.isRecharging = true;\r\n    this.anonymousService.generateTransactionId().subscribe(\r\n      response => {\r\n        console.log('************ generateTransactionId ****************');\r\n        console.log(response.data[0].transactionId);\r\n        this.transactionID = response.data[0].transactionId;\r\n        this.payWithRave();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.error.errorHandlerWithText(this.generateTransaction, err);\r\n\r\n      }\r\n    )\r\n  };\r\n\r\n  public payWithRave() {\r\n    this.isRecharging = false;\r\n\r\n\r\n    let ravePay = window.getpaidSetup({\r\n      PBFPubKey: Constants.CUSTOMER_GUEST_PAYMENT_KEY,\r\n         customer_email: this.userEmail,\r\n      // customer_email: Constants.SUPPORT_EMAIL,\r\n          amount: this.rechargeObj.amount,\r\n          customer_phone: this.rechargeObj.receiverMsisdn,\r\n          currency: 'NGN',\r\n          payment_method: 'both',\r\n          txref: this.transactionID,\r\n          meta: [{\r\n            metaname: 'flightID',\r\n            metavalue: 'AP1234'\r\n          }],\r\n          onclose: function() {\r\n          },\r\n          callback: function(response) {\r\n            const txref = response.tx.txRef; // collect flwRef returned and pass to a \t\t\t\t\tserver page to complete status check.\r\n            console.log('txref ', txref);\r\n            console.log('This is the response returned after a charge', response);\r\n            const flutterResponse = new FlutterWaveResponse(response.data, response.name, response.success, response.tx);\r\n            if ( response.tx.chargeResponseCode === '00' || response.tx.chargeResponseCode === '0' )\r\n            {\r\n              // redirect to a success page\r\n\r\n              const customerRechargeObj = {\r\n                'amount': 0,\r\n                'cardLast4Digit': '',\r\n                'networkId': 0,\r\n                'paymentId': 0,\r\n                'receiverMsisdn': '',\r\n                'status': '',\r\n                'transactionId': '',\r\n                'transactionRef': ''\r\n              };\r\n\r\n              const previousRechargeObj: any = JSON.parse(localStorage.getItem(Constants.CUSTOMER_KEY + 'recharge'));\r\n\r\n              customerRechargeObj.receiverMsisdn = previousRechargeObj.receiverMsisdn;\r\n              customerRechargeObj.networkId = previousRechargeObj.networkId;\r\n              customerRechargeObj.amount = previousRechargeObj.amount;\r\n              customerRechargeObj.paymentId = flutterResponse.tx.paymentId;\r\n              customerRechargeObj.transactionId = flutterResponse.tx.txRef;\r\n              customerRechargeObj.status = flutterResponse.tx.status;\r\n\r\n              const paymentObj = {\r\n                'payload' : customerRechargeObj,\r\n                'type': 'airtime',\r\n                'homeUrl' : 'customer/',\r\n                'packageTransactionUrl' : 'customer/',\r\n                'repeatTransactionUrl' : 'customer/airtime'\r\n              }\r\n\r\n              console.log('paymentObj', paymentObj);\r\n\r\n              localStorage.setItem(Constants.CUSTOMER_KEY + 'paymentObjKey', JSON.stringify(paymentObj));\r\n\r\n              window.location.href = '#/customer/payment-status';\r\n\r\n              ravePay.close();\r\n\r\n            }\r\n            else {\r\n              // redirect to a failure page.\r\n            }\r\n\r\n            // this.ravePay.close(); // use this to close the modal immediately after payment.\r\n          }\r\n        });\r\n\r\n\r\n  }\r\n\r\n  backToStart(){\r\n\r\n  }\r\n\r\n  toggleWallet() {\r\n    this.isCommissionWallet = !this.isCommissionWallet;\r\n    console.log(this.isCommissionWallet);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userEmail = JSON.parse(localStorage.getItem(Constants.PROFILE)).email;\r\n    this.getAllNetworks();\r\n  }\r\n\r\n}\r\n","<div class=\"package-card\">\r\n  <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n  <header style=\"font-weight:700;\">\r\n    <a *ngIf=\"switchState === 'recharge'\" routerLink=\"/customer\" class=\"back-btn\"><i class=\"fa fa-arrow-left\"></i><span>back to Home</span></a>\r\n    <a *ngIf=\"switchState !== 'recharge'\" (click)=\"goToPage('recharge')\" class=\"back-btn\"><i\r\n      class=\"fa fa-arrow-left\"></i><span>back</span></a>\r\n    Buy Airtime\r\n  </header>\r\n  <div>\r\n    <mat-progress-bar *ngIf=\"false\" mode=\"indeterminate\"></mat-progress-bar>\r\n  </div>\r\n  <div class=\"content-area\">\r\n    <div class=\"container\">\r\n      <div class=\"row mt-5 mb-5\">\r\n        <div class=\"col-xl-2\">\r\n\r\n        </div>\r\n        <div class=\"col-xl-8 col-xs-12\">\r\n          <div class=\"widget-content\">\r\n\r\n            <!--recharge block -->\r\n            <div class=\"widget-content-block recharge\" [class.visible]=\"switchState === 'recharge'\">\r\n              <form [formGroup]=\"airtimeForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n                <div class=\"mb-5\">\r\n                  <mat-select placeholder=\"Select your network\" #selectNetwork required formControlName=\"networkId\"\r\n                             [(ngModel)]=\"network\" (change)=\"setNetwork(network)\" style=\"width:100%;\">\r\n                    <ng-template ngFor let-network [ngForOf]=\"networksWithId\">\r\n                      <mat-option [value]=\"network.data.id\" *ngIf=\"network.data.isAirtimeActive\">\r\n                        <img width=\"20\" height=\"20\" [src]=\"network.logoPath\"/>  {{network.data.networkName}}\r\n                      </mat-option>\r\n                    </ng-template>\r\n                  </mat-select>\r\n                  <div\r\n                    *ngIf=\"airtimeForm.get('networkId').invalid && (airtimeForm.get('networkId').dirty || airtimeForm.get('networkId').touched)\">\r\n                    <div class=\"errorText\">\r\n                      Network is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <mat-form-field class=\"mb-5\">\r\n                  <label class=\"sr-only\" for=\"phone\">Mobile phone</label>\r\n                  <input matInput type=\"tel\" required id=\"phone\" (keyup)=\"checkNum()\" (blur)=\"checkNum()\"\r\n                         formControlName=\"mobile\" placeholder=\"Mobile Phone\" [(ngModel)]=\"mobile\">\r\n                  <div\r\n                    *ngIf=\"airtimeForm.get('mobile').invalid && (airtimeForm.get('mobile').dirty || airtimeForm.get('mobile').touched)\">\r\n                    <div *ngIf=\"airtimeForm.get('mobile').errors.required\" class=\"errorText\">\r\n                      Phone number is required\r\n                    </div>\r\n\r\n                    <div\r\n                      *ngIf=\"airtimeForm.get('mobile').errors.pattern && !(airtimeForm.get('mobile').errors.required)\"\r\n                      class=\"errorText\">\r\n                      Enter a valid phone number\r\n                    </div>\r\n\r\n                    <div *ngIf=\"airtimeForm.get('mobile').errors.numberValid\" class=\"errorText\">\r\n                      Number length must be 11 digits\r\n                    </div>\r\n                  </div>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field class=\"mb-5\">\r\n                  <label class=\"sr-only\" for=\"amount\">Enter Amount</label>\r\n                  <input matInput type=\"number\" required [(ngModel)]=\"amount\" (keyup)=\"checkNum()\" (blur)='checkNum()'\r\n                         id=\"amount\" formControlName=\"amount\" placeholder=\"Enter Amount\" value=\"\">\r\n                  <div\r\n                    *ngIf=\"airtimeForm.get('amount').invalid && (airtimeForm.get('amount').dirty || airtimeForm.get('amount').touched)\">\r\n                    <div *ngIf=\"airtimeForm.get('amount').errors.required\" class=\"errorText\">\r\n                      Amount is required\r\n                    </div>\r\n\r\n                    <div *ngIf=\"!(airtimeForm.get('amount').errors.required)\" class=\"errorText\">\r\n                      Enter a valid amount\r\n                    </div>\r\n                  </div>\r\n                </mat-form-field>\r\n                <a md-raised-button color=\"\" (click)=\"resetForm()\"> Reset </a>\r\n\r\n                <button md-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!airtimeForm.valid\">Proceed</button>\r\n\r\n              </form>\r\n            </div>\r\n            <!--recharge block-->\r\n\r\n            <!--recharge verify block-->\r\n            <div class=\"widget-content-block verify-recharge\" [class.visible]=\"switchState === 'recharge-verify'\">\r\n              <h4 style=\"margin:0;\">Recharge Details</h4>\r\n              <p>Please confirm recharge details to proceed</p>\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Phone number</span> <span\r\n                  class=\"value\">{{rechargeObj.receiverMsisdn | checkNull : ''}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span\r\n                  class=\"value\">{{rechargeObj.networkName | checkNull : ''}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Amount</span> <span\r\n                  class=\"value\">NGN {{rechargeObj.amount | currency | moneyFormatter | checkNull : ''}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" color=\"\" (click)=\"goToPage()\" [disabled]=\"isRecharging\"> Back\r\n              </button>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"generateTransaction()\" [disabled]=\"isRecharging\"\r\n                      color=\"accent\">{{!isRecharging ? 'Pay' : 'Please wait'}}\r\n                <i *ngIf=\"isRecharging\" class=\"fa fa-spinner fa-spin\"></i>\r\n              </button>\r\n\r\n            </div>\r\n            <!--recharge verify block-->\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {CustomerDashboardComponent} from './customer-dashboard/customer-dashboard.component';\nimport {SelectPackageComponent} from '../user-shared/select-package/select-package.component';\nimport {BuyAirtimeComponent} from './customer-dashboard/buy-airtime/buy-airtime.component';\nimport {BuyDataComponent} from './customer-dashboard/buy-data/buy-data.component';\nimport {PaymentStatusComponent} from '../../../common-components/payment-status/payment-status.component';\nimport {CustomerSettingsComponent} from './customer-settings/customer-settings.component';\nimport {CustomerTransactionHistoryComponent} from './customer-transaction-history/customer-transaction-history.component';\nimport {AuthGuard} from '../../../../core/guards/auth-guard/auth.guard';\nimport {ServicesComponent} from './services/services.component';\nimport {PerformServiceComponent} from '../user-shared/perform-service/perform-service.component';\nimport {RecentServicesComponent} from '../user-shared/recent-services/recent-services.component';\n\nconst routes: Routes = [\n  { path: '',\n    children: [\n      {\n        path: '', component: CustomerDashboardComponent,\n        children: [\n          {path: '', component: RecentServicesComponent},\n          // {path: 'airtime', component: BuyAirtimeComponent},\n          {path: 'data', component: BuyDataComponent},\n          {path: 'payment-status', component: PaymentStatusComponent},\n          {path: 'services', component: ServicesComponent},\n          {path: 'services/:id', component: PerformServiceComponent},\n        ]\n      },\n      {path: '', pathMatch: 'full', component: CustomerDashboardComponent},\n      {path: 'settings', component: CustomerSettingsComponent},\n      {path: 'transaction-history', component: CustomerTransactionHistoryComponent}\n    ],\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {CustomerRoutingModule} from './customer-routing.module';\nimport {CustomerDashboardComponent} from './customer-dashboard/customer-dashboard.component';\nimport {BuyAirtimeComponent} from './customer-dashboard/buy-airtime/buy-airtime.component';\nimport {BuyDataComponent} from './customer-dashboard/buy-data/buy-data.component';\nimport {PaymentStatusComponent} from '../../../common-components/payment-status/payment-status.component';\nimport {CustomerSettingsComponent} from './customer-settings/customer-settings.component';\nimport {CustomerTransactionHistoryComponent} from './customer-transaction-history/customer-transaction-history.component';\nimport {SharedModule} from '../../../../core/shared/modules/shared.module';\nimport {ServicesComponent} from './services/services.component';\nimport {ServiceManagerService} from '../AdminDashboardPages/service-management/views/service-manager.service';\nimport {ManageCustomersComponent} from '../AdminDashboardPages/User management/manage-customers/manage-customers.component';\nimport {UserSharedModule} from '../user-shared/user-shared.module';\nimport {AppModule} from '../../../../app.module';\n\n\n@NgModule({\n  declarations: [\n    CustomerDashboardComponent,\n    BuyAirtimeComponent,\n    BuyDataComponent,\n    CustomerSettingsComponent,\n    CustomerTransactionHistoryComponent,\n    ServicesComponent,\n    ManageCustomersComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UserSharedModule,\n    CustomerRoutingModule,\n    AppModule\n  ]\n})\nexport class CustomerModule {\n  constructor(private smService: ServiceManagerService) {\n    this.smService.getAllServicesByCategories();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {Constants} from '../../../../../shared/Constants';\r\nimport {AnonymousService} from '../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {Router} from '@angular/router';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserService} from '../../../../../core/services/users-service/user-service';\r\nimport {AuthService} from '../../../../../core/authentication/auth-service.service';\r\nimport {ToastService} from '../../../../../shared/services/toast-service/toast.service';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-settings',\r\n  templateUrl: './customer-settings.component.html',\r\n  styleUrls: ['./customer-settings.component.scss']\r\n})\r\nexport class CustomerSettingsComponent implements OnInit {\r\n\r\n  pageTitle = 'Profile';\r\n  public switchCreate: boolean;\r\n  public roles: any;\r\n  public userDataResponse: any;\r\n  public message: any;\r\n  public isNotEdit: boolean;\r\n  public edit_text: string;\r\n  public isUpdating : boolean;\r\n  public profile: any;\r\n  public userFormData: any = {\r\n    lastName: '',\r\n    firstName: '',\r\n    mobile: '',\r\n    email: '',\r\n  };\r\n\r\n\r\n  changePasswordForm: FormGroup;\r\n  confirmPassword: string;\r\n  public changePasswordStatus: boolean;\r\n  password: string;\r\n\r\n  constructor( public sharedService: SharedService, public router: Router,  public fb: FormBuilder, public anonymousService: AnonymousService,\r\n               public userService: UserService, public authService: AuthService, public toast: ToastService, public error: ErrorService) {\r\n\r\n    this.sharedService.emitChange(this.pageTitle);\r\n    this.profile = JSON.parse(localStorage.getItem(Constants.PROFILE));\r\n    this.switchCreate = true;\r\n    this.isNotEdit = true;\r\n    this.edit_text = 'Edit Profile';\r\n    this.isUpdating = false;\r\n    this.initializeForm();\r\n\r\n    this.changePasswordStatus = false;\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('*************** profile details **************');\r\n    console.log(this.profile);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log(this.userFormData);\r\n    this.updateUser();\r\n  }\r\n\r\n  public initializeForm(): void{\r\n    this.userFormData.firstName = this.profile.firstName;\r\n    this.userFormData.lastName = this.profile.lastName;\r\n    this.userFormData.mobile = this.profile.mobile;\r\n    this.userFormData.email = this.profile.email;\r\n  }\r\n\r\n  getProfile = () => {\r\n    this.sharedService.getProfile(this.profile.email).subscribe(\r\n      response => {\r\n        console.log(response.data);\r\n        if (response.status === 200) {\r\n          localStorage.setItem(Constants.PROFILE, '');\r\n          localStorage.setItem(Constants.PROFILE, JSON.stringify(response));\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        const msg = this.error.errorHandlerWithText(this.getProfile, err);\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n// update users\r\n  updateUser = () => {\r\n    this.isUpdating = true;\r\n    this.userService.updateCustomer(this.userFormData, this.profile.id).subscribe(\r\n      response => {\r\n        if (response.status === 200) {\r\n          this.isUpdating = false;\r\n          this.userDataResponse = response.data;\r\n          this.message = Constants.USER_UPDATED_SUCCESSFULLY;\r\n          this.editToggle();\r\n          this.toast.showSuccess(this.message, 'Success');\r\n          this.getProfile();\r\n        }\r\n      },\r\n      err => {\r\n        this.isUpdating = false;\r\n        console.log(err);\r\n        const msg = this.error.errorHandlerWithText(this.updateUser, err);\r\n        console.log(msg.errorMsg);\r\n        this.toast.showError(msg.message, 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  editToggle() {\r\n    if (this.isNotEdit) {\r\n      this.edit_text = 'Cancel';\r\n      this.isNotEdit = false;\r\n    } else {\r\n      this.isNotEdit = true;\r\n      this.edit_text = 'Edit Profile';\r\n    }\r\n  }\r\n\r\n\r\n  createForm(): void {\r\n    this.changePasswordForm = this.fb.group({\r\n        oldPassword: ['', [Validators.required]],\r\n        password: ['', [Validators.required]],\r\n        confirmPassword: ['', [Validators.required]]\r\n      },\r\n      {\r\n        validator: PasswordValidation.MatchPassword // your validation method\r\n      });\r\n  }\r\n\r\n\r\n\r\n  onSubmitPassword() {\r\n    this.changePassword();\r\n    this.changePasswordStatus = true;\r\n  }\r\n\r\n\r\n\r\n  changePassword() {\r\n    this.authService.changePassword(this.changePasswordForm.value).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        if (data.status === 200) {\r\n          this.toast.showSuccess(data.message, '');\r\n          setTimeout(()=>{\r\n            this.authService.logout();\r\n          }, 2000)\r\n\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.changePasswordStatus = false;\r\n        console.log(this.error.errorHandlerWithText(this.changePassword, err));\r\n        // const msg = this.error.errorHandlerWithText(this.changePassword, err);\r\n       // this.toast.showError(msg.message, 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport class PasswordValidation {\r\n\r\n  static MatchPassword(AC: AbstractControl) {\r\n    const password = AC.get('password').value; // to get value in input tag\r\n    const confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\r\n    if (password  !==  confirmPassword) {\r\n      AC.get('confirmPassword').setErrors({MatchPassword: true})\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","  <section class=\"container-area\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-11\">\r\n\r\n        <div class=\"mat-card\">\r\n         <form (ngSubmit)=\"onSubmit()\" class=\"card viewInfo\">\r\n              <div class=\"md-container\">\r\n                <div class=\"mat-card-header\">My Profile\r\n                  <span *ngIf=\"isNotEdit\"  style=\"color: #3b7fc4; cursor: pointer; display:inline-block; margin-left:10px;\" (click)=\"editToggle()\"><span>[ Edit Profile ]</span> </span>\r\n                  <span *ngIf=\"!isNotEdit\" style=\"color: #ff6265; cursor: pointer; display:inline-block; margin-left:10px;\" (click)=\"editToggle()\"><span>[ Cancel Edit ]</span></span>\r\n                </div>\r\n                <div class=\"divider\"></div>\r\n                <div class=\"form-inline\">\r\n\r\n                  <mat-form-field class=\"md-inline col-md-6\">\r\n                    <label class=\"sr-only\" for=\"firstName\">First Name</label>\r\n                    <input matInput type=\"text\" [disabled]=\"isNotEdit\" id=\"firstName\" [(ngModel)]=\"userFormData.firstName\" [ngModelOptions] =\"{standalone: true}\" required name=\"firstName\" placeholder=\"First Name\" value=\"\">\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field class=\"md-inline col-md-6\">\r\n                    <label class=\"sr-only\" for=\"lname\">Last Name</label>\r\n                    <input matInput type=\"text\" id=\"lname\" [disabled]=\"isNotEdit\" required  [(ngModel)]=\"userFormData.lastName\" [ngModelOptions] =\"{standalone: true}\" name=\"lastName\" placeholder=\"Last Name\" value=\"\">\r\n                  </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div class=\"form-inline\">\r\n                  <mat-form-field class=\"md-inline col-md-6\">\r\n                    <label class=\"sr-only\" for=\"phone1\">Mobile phone</label>\r\n                    <input matInput type=\"tel\" required id=\"phone1\" [disabled]=\"true\" [(ngModel)]=\"userFormData.mobile\" [ngModelOptions] =\"{standalone: true}\" name=\"mobile\" placeholder=\"Mobile Phone\" value=\"\">\r\n                  </mat-form-field>\r\n\r\n\r\n                  <mat-form-field class=\"md-inline col-md-6\">\r\n                    <label class=\"sr-only\" for=\"email\">Email address</label>\r\n                    <input matInput type=\"email\" id=\"email\" [disabled]=\"true\" required [(ngModel)]=\"userFormData.email\" [ngModelOptions] =\"{standalone: true}\" name=\"email\" placeholder=\"Email address\" value=\"\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <button *ngIf=\"!isNotEdit\"  [disabled]=\"isUpdating\" md-raised-button type=\"submit\" color=\"accent\" >Update Profile<mat-spinner *ngIf=\"isUpdating\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\" style=\"margin-top:20px;\">\r\n      <div class=\"col-lg-11\">\r\n        <div class=\"mat-card\">\r\n          <form (ngSubmit)=\"onSubmitPassword()\" [formGroup]=\"changePasswordForm\"  class=\"card viewInfo\">\r\n            <div class=\"md-container\">\r\n              <div class=\"mat-card-header\">Change Password</div>\r\n              <div class=\"divider\"></div>\r\n              <mat-form-field class=\"md-inline col-md-12\">\r\n                <label class=\"sr-only\" for=\"oPassword\">Old Password</label>\r\n                <input matInput type=\"password\" id=\"oPassword\" formControlName=\"oldPassword\" name=\"oldPassword\" placeholder=\"Old Password\" value=\"\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"md-inline col-md-12\">\r\n                <label class=\"sr-only\" for=\"nPassword1\">New Password</label>\r\n                <input matInput type=\"password\" id=\"nPassword1\" formControlName= \"password\" name=\"password\" placeholder=\"Enter New Password\" value=\"\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"md-inline col-md-12\">\r\n                <label class=\"sr-only\" for=\"nPassword2\">New Password</label>\r\n                <input matInput type=\"password\" id=\"nPassword2\" formControlName=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" value=\"\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n            <button md-raised-button type=\"submit\" color=\"accent\" [disabled]=\"changePasswordForm.invalid || changePasswordStatus\"> Change Password <mat-spinner *ngIf=\"changePasswordStatus\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</section>\r\n\r\n"],"sourceRoot":"webpack:///"}