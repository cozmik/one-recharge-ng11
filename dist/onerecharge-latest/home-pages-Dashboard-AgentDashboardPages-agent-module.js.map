{"version":3,"sources":["./src/app/home/pages/Dashboard/AgentDashboardPages/agent-sell/sell-airtime/sell-airtime.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-sell/sell-airtime/sell-airtime.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-dashboard/agent-dashboard.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-dashboard/agent-dashboard.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent.module.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-sell/agent-sell.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-sell/agent-sell.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-routing.module.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-profile/agent-profile.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-profile/agent-profile.component.html","./src/app/core/mocks/fundRequests.model.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-new-fund-request/agent-new-fund-request.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-new-fund-request/agent-new-fund-request.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-sell/sell-data/sell-data.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-sell/sell-data/sell-data.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-change-password/agent-change-password.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-change-password/agent-change-password.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-support/agent-support.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-support/agent-support.component.html","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-fund-request-history/agent-fund-request-history.component.ts","./src/app/home/pages/Dashboard/AgentDashboardPages/agent-fund-request-history/agent-fund-request-history.component.html"],"names":[],"mappings":";;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACyB;AACd;AACqB;;;;;;;;;;;;;;;;;;;;;;ICV3F,0EAAkC;IAAA,sEAA+C;IAAA,4DAAM;;;;IAErF,wEAAsF;IAAhD,8SAAkB,UAAU,KAAE;IAAkB,mEAAgC;IAAA,uEAAM;IAAA,+DAAI;IAAA,4DAAO;IAAA,4DAAI;;;IAmBzH,2EAAoD;IAAA,mEAAqC;IAAC,kFAAsB;IAAA,4DAAO;;;IAErH,iFAA+E;IAC7E,qEAAuD;IAAE,uDAC3D;IAAA,4DAAa;;;IAFD,sFAAyB;IACP,0DAAwB;IAAxB,kJAAwB;IAAK,0DAC3D;IAD2D,wGAC3D;;;;IAHF,qFAAuM;IAA1E,yWAAqB;IAChJ,mJAEa;IACf,4DAAa;;;IAJgH,oFAAqB;IACpF,0DAAiB;IAAjB,2FAAiB;;;IAI/E,sEAAkI;IAChI,0EAAwB;IACtB,gFACF;IAAA,4DAAM;IACR,4DAAM;;;IAOJ,0EAA0E;IACxE,qFACF;IAAA,4DAAM;;;IAEN,0EAAyH;IACvH,uFACF;IAAA,4DAAM;;;IAEN,0EAA6E;IAC3E,4FACF;IAAA,4DAAM;;;IAXR,sEAAyH;IACvH,+HAEM;IAEN,+HAEM;IAEN,+HAEM;IACR,4DAAM;;;IAXE,0DAA+C;IAA/C,mHAA+C;IAI/C,0DAA8F;IAA9F,wKAA8F;IAI9F,0DAAkD;IAAlD,sHAAkD;;;IAUxD,0EAA0E;IACxE,+EACF;IAAA,4DAAM;;;IAEN,0EAA4E;IAC1E,iFACF;IAAA,4DAAM;;;IAPR,sEAAyH;IACvH,+HAEM;IAEN,+HAEM;IACR,4DAAM;;;IAPE,0DAA+C;IAA/C,mHAA+C;IAI/C,0DAAkD;IAAlD,oHAAkD;;;;IA1ChE,0EAA4H;IAC1H,2EAAmE;IAAnC,+TAAuB;IACrD,0EAAkB;IAChB,0HAAuH;IACvH,sIAIa;IACb,wHAIM;IACR,4DAAM;IAEN,qFAA6B;IAC3B,4EAAmC;IAAA,uEAAY;IAAA,4DAAQ;IACvD,4EAAiK;IAAlH,0TAAoB;IAAnE,4DAAiK;IACjK,0HAYM;IACR,4DAAiB;IAEjB,sFAA6B;IAC3B,6EAAoC;IAAA,wEAAY;IAAA,4DAAQ;IACxD,6EAA8K;IAAvI,sVAAoB;IAA3D,4DAA8K;IAC9K,0HAQM;IACR,4DAAiB;IACjB,yEAAmD;IAAtB,wTAAqB;IAAE,mEAAM;IAAA,4DAAI;IAE9D,8EAAsF;IAAA,mEAAO;IAAA,4DAAS;IAExG,4DAAO;IACT,4DAAM;;;IApDsC,uGAA4C;IAChF,0DAAyB;IAAzB,yFAAyB;IAEpB,0DAAuB;IAAvB,0FAAuB;IACjB,0DAAwB;IAAxB,2FAAwB;IAK/B,0DAA0H;IAA1H,2MAA0H;IASY,0DAAoB;IAApB,kFAAoB;IAC1J,0DAAiH;IAAjH,kMAAiH;IAiBhF,0DAAoB;IAApB,kFAAoB;IACrD,0DAAiH;IAAjH,kMAAiH;IAYnE,0DAA+B;IAA/B,+FAA+B;;;IA0BrF,mEAA0D;;;;;IAnB9D,0EAAmJ;IACjJ,yEAAsB;IAAA,2EAAgB;IAAA,4DAAK;IAC3C,oEAAG;IAAA,qGAA0C;IAAA,4DAAI;IACjD,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,uEAAY;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAA0C;;IAAA,4DAAO;IAAA,4DAAM;IACtI,2EAAmB;IAAA,4EAAoB;IAAA,mEAAO;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAuC;;IAAA,4DAAO;IAAA,4DAAM;IAC9H,2EAAmB;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAkE;;;;IAAA,4DAAO;IAAA,4DAAM;IAC1J,4DAAM;IAEN,2EAAuC;IACrC,yEAAO;IAAA,qEAAS;IAAA,8EAAuI;IAAA,wDAAkE;;;IAAA,4DAAS;IAAC,sFAAyB;IAAA,4DAAQ;IACpQ,2EAAwB;IACtB,wFAAoL;IAAxG,4UAAyB;IAA+E,iFAAqB;IAAA,4DAAmB;IAC9N,4DAAM;IACR,4DAAM;IAEN,8EAA+F;IAA/C,4TAAoB;IAA4B,kEAAK;IAAA,4DAAS;IAE9G,8EAA6G;IAAtE,mUAA2B;IAA2C,wDAC3G;IAAA,sHAA0D;IAC5D,4DAAS;IAEX,4DAAM;;;IAtB8C,8GAAmD;IAIpB,2DAA0C;IAA1C,qKAA0C;IAC/C,0DAAuC;IAAvC,kKAAuC;IACxC,0DAAkE;IAAlE,gTAAkE;IAInH,0DAA8H;IAA9H,0PAA8H;IAAC,0DAAkE;IAAlE,yPAAkE;IAErM,0DAA0B;IAA1B,mFAA0B;IAIqB,0DAAyB;IAAzB,yFAAyB;IAE3B,0DAAyB;IAAzB,yFAAyB;IAAiB,0DAC3G;IAD2G,2HAC3G;IAAI,0DAAkB;IAAlB,qFAAkB;;;IAoBiE,6EAAuH;;;;IAblN,0EAAoJ;IAClJ,yEAAiB;IAAA,mEAAwC;IAAA,4DAAK;IAC9D,yEAAsB;IAAA,8EAAmB;IAAA,4DAAK;IAE9C,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,iEAAM;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IACpH,2EAAmB;IAAA,4EAAoB;IAAA,mEAAO;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA4C;IAAA,4DAAO;IAAA,4DAAM;IACnI,2EAAmB;IAAA,4EAAoB;IAAA,0EAAc;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAmC;IAAA,4DAAO;IAAA,4DAAM;IACjI,2EAA0B;IAAA,4EAAoB;IAAA,uEAAW;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAwC;;IAAA,4DAAO;IAAA,4DAAM;IAC1I,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA4D;;;IAAA,4DAAO;IAAA,4DAAM;IACzJ,2EAA0B;IAAA,4EAAoB;IAAA,sEAAU;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAgE;;;IAAA,4DAAO;IAAA,4DAAM;IACnK,4DAAM;IAEN,8EAA4E;IAArC,4TAAoB;IAAkB,yEAAY;IAAA,0IAAuH;IAAA,4DAAS;IAE3N,4DAAM;;;IAfyF,+GAAoD;IAKtE,2DAA8B;IAA9B,0IAA8B;IAC7B,0DAA4C;IAA5C,uHAA4C;IACrC,0DAAmC;IAAnC,+IAAmC;IAC/B,0DAAwC;IAAxC,+MAAwC;IAC7C,0DAA4D;IAA5D,2RAA4D;IACxD,0DAAgE;IAAhE,+RAAgE;IAG/C,0DAAW;IAAX,uEAAW;;;IAkBzB,6EAAuH;;;;IAZlN,0EAAiJ;IAC/I,yEAAiB;IAAA,mEAAwC;IAAA,4DAAK;IAC9D,yEAAsB;IAAA,0EAAe;IAAA,4DAAK;IAE1C,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,kEAAO;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAA4C;IAAA,4DAAO;IAAA,4DAAM;IACnI,2EAA0B;IAAA,4EAAoB;IAAA,0EAAc;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAmC;IAAA,4DAAO;IAAA,4DAAM;IACxI,2EAA0B;IAAA,4EAAoB;IAAA,uEAAW;IAAA,4DAAO;IAAA,4EAAoB;IAAA,wDAA8F;;;IAAA,4DAAO;IAAA,4DAAM;IAC/L,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA4D;;;IAAA,4DAAO;IAAA,4DAAM;IACzJ,2EAA0B;IAAA,4EAAoB;IAAA,sEAAU;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAgE;;;IAAA,4DAAO;IAAA,4DAAM;IACnK,4DAAM;IAEN,8EAA4E;IAArC,4TAAoB;IAAkB,yEAAY;IAAA,0IAAuH;IAAA,4DAAS;IAE3N,4DAAM;;;IAduF,8GAAmD;IAKlE,2DAA4C;IAA5C,uHAA4C;IAC9B,0DAAmC;IAAnC,+IAAmC;IACvC,0DAA8F;IAA9F,mVAA8F;IAClG,0DAA4D;IAA5D,2RAA4D;IACxD,0DAAgE;IAAhE,+RAAgE;IAG/C,0DAAW;IAAX,uEAAW;;;IAmBzB,6EAAuH;;;;IAblN,0EAAoJ;IAClJ,yEAAiB;IAAA,mEAA0C;IAAA,4DAAK;IAChE,yEAAsB;IAAA,2EAAgB;IAAA,4DAAK;IAC3C,oEAAG;IAAC,4FAAgC;IAAA,4DAAI;IAExC,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,mEAAO;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA4C;IAAA,4DAAO;IAAA,4DAAM;IACnI,2EAA0B;IAAA,4EAAoB;IAAA,0EAAc;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAkC;IAAA,4DAAO;IAAA,4DAAM;IACvI,2EAA0B;IAAA,4EAAoB;IAAA,uEAAW;IAAA,4DAAO;IAAA,4EAAoB;IAAA,wDAA6F;;;IAAA,4DAAO;IAAA,4DAAM;IAC9L,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA2D;;;IAAA,4DAAO;IAAA,4DAAM;IACxJ,2EAA0B;IAAA,4EAAoB;IAAA,sEAAU;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA+D;;;IAAA,4DAAO;IAAA,4DAAM;IAClK,4DAAM;IAEN,8EAA4E;IAArC,4TAAoB;IAAkB,yEAAY;IAAA,0IAAuH;IAAA,4DAAS;IAE3N,4DAAM;;;IAfyF,+GAAoD;IAMrE,2DAA4C;IAA5C,uHAA4C;IAC9B,0DAAkC;IAAlC,sGAAkC;IACtC,0DAA6F;IAA7F,0SAA6F;IACjG,0DAA2D;IAA3D,kPAA2D;IACvD,0DAA+D;IAA/D,sPAA+D;IAG9C,0DAAW;IAAX,uEAAW;;;IAUzB,6EAAuH;;;IAkC9G,mEAA2F;;;;;IAb/L,sEAAgC;IAC5B,+EAA+G;IAA/F,mUAA2B;IACzC,0EAA0B;IACxB,qEAAI;IAAA,wEAAc;IAAA,wEAAqF;IAAC,sFAA0B;IAAA,4DAAI;IAAA,4DAAK;IAC3I,qEAA2B;IAC3B,0EAAyB;IACvB,6EAAmC;IAAA,6EAAiB;IAAA,4DAAQ;IAE5D,iFAAoJ;IAA/F,8SAAiB;IAAtE,4DAAoJ;IAEtJ,4DAAM;IAER,4DAAM;IACN,8EAA0F;IAAA,gEAAI;IAAA,sHAA2F;IAAA,4DAAS;IACpM,4DAAO;IACX,4DAAM;;;IAP2E,2DAAsB;IAAtB,sFAAsB;IAKzF,0DAAsB;IAAtB,sFAAsB;IAAoE,0DAAe;IAAf,kFAAe;;;;IAMvH,sEAA+B;IAC3B,0EAA+B;IAC7B,qEAAwD;IACxD,qEAAI;IAAA,wFAA6B;IAAA,4DAAK;IACtC,oEAAG;IAAA,iJAAsF;IAAA,4DAAI;IAC7F,6EAAmE;IAA7C,iUAA0B;IAAmB,0EAAe;IAAA,4DAAS;IAC7F,4DAAM;IACV,4DAAM;;AD9Lf,MAAM,oBAAoB;IA6C/B,YAAmB,aAA4B,EAAS,gBAAkC,EAAS,MAAc,EAC9F,KAAmB,EAAS,EAAe,EAAS,KAAkB,EAAS,KAAmB,EAClG,OAAuB;QAFvB,kBAAa,GAAb,aAAa,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAC9F,UAAK,GAAL,KAAK,CAAc;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,UAAK,GAAL,KAAK,CAAa;QAAS,UAAK,GAAL,KAAK,CAAc;QAClG,YAAO,GAAP,OAAO,CAAgB;QAzC1C,kBAAa,GAAG,6BAA6B,CAAC;QAOvC,mBAAc,GAAG,EAAE,CAAC;QACpB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,UAAK,GAAG,IAAI,CAAC;QAOb,uBAAkB,GAAG,KAAK,CAAC;QAS3B,WAAM,GAAQ;YACnB,aAAa,EAAG,CAAC;YACjB,uBAAuB,EAAG,CAAC;YAC3B,mBAAmB,EAAG,CAAC;SACxB,CAAC;QAEK,gBAAW,GAAQ;YACxB,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,EAAE;YAClB,WAAW,EAAE,EAAE;SAChB,CAAC;QAqEF,gGAAgG;QAChG,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC3C,QAAQ,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;gBAC3D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBACnE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;gBAC/E,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAElC,CAAC,CACF,CAAC;QACJ,CAAC;QAwCD,yBAAyB;QACzB,kCAAkC;QAClC,uDAAuD;QACvD,IAAI;QAEJ,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,2DAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,2DAAS,CAAC,WAAW,CAAC;YAC5G,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE9B,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACpD,QAAQ,CAAC,EAAE;gBACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;gBAExC,IAAI,CAAC,gBAAgB,GAAG,IAAI,2FAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnC,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAC;oBACrC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;iBACnC;qBACI,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAC;oBAC1C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;iBAClC;qBACI,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,EAAC;oBAC3C,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;iBACnC;gBAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE5B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC;gBACxF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE5B,CAAC,CACF,CAAC;QACJ,CAAC;QAGD,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,OAAO,GAAqB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAE7D,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAO,IAAI,EAAE;gBAGpC,MAAM,SAAS,GAAQ,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7C,gCAAgC;gBAChC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;gBAEhC,0BAA0B;gBAE1B,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChD,QAAQ,CAAC,EAAE;oBACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,8BAA8B,EAAE,mBAAmB,CAAC,CAAC;oBAC7E,0BAA0B;oBAC1B,mCAAmC;oBACpC,wBAAwB;oBAEtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACzB,uBAAuB;oBACrB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;oBACvE,oBAAoB;oBACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC7C,CAAC,CACF,CAAC;aACH;iBAAM;gBACN,qDAAqD;gBACpD,8BAA8B;aAC/B;QACH,CAAC;QA3MC,2DAA2D;QAC3D,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAE9B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,sEAAc,CAAC,gBAAgB,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,aAAa,CAAC,sBAAsB,CAAC,SAAS,CAC5C,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,6EAA6E;YAC7E,IAAI,CAAC,MAAM,CAAC,uBAAuB,GAAG,GAAG,CAAC,cAAc,CAAC,uBAAuB,CAAC;QACnF,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAC3E,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,EAAO;QAChB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAE,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACzG,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;QACrC,6BAA6B;IAC7B,CAAC;IAED,cAAc,CAAC,EAAO;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAE,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC9F,CAAC;IAGD,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,KAAO,EAAE,EAAE;YAC3F,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;SACjE;IACH,CAAC;IAED,SAAS,CAAC,QAAQ,GAAG,KAAK;QACxB,IAAI,QAAQ,EAAC;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;IACnD,CAAC;IAGD,QAAQ,CAAC,OAAe,UAAU;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAsBD,mCAAmC;IACnC,iBAAiB;QACf,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,OAAO,CAAE,CAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAE,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;YAC9C,MAAM,cAAc,GAAQ,EAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC5D,cAAc,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1B,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAClF,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACzC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnC,CAAC;IAED,uBAAuB;IACvB,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjE,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEtD,wCAAwC;QACxC,qCAAqC;QACrC,yCAAyC;QACzC,8BAA8B;QAC9B,qBAAqB;IACvB,CAAC;IAsFD,cAAc;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAGD,YAAY;QACV,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACrD,yCAAyC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;QAExC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;wFA7QU,oBAAoB;oGAApB,oBAAoB;kEAOpB,iEAAkB;kEAElB,iEAAkB;;;;;;;;QC3B/B,yEAA0B;QACxB,gHAAuF;QACvF,4EAAiC;QAC/B,4GAA2I;QAC3I,yEACF;QAAA,4DAAS;QAET,gFAAe;QACb,6EAA0B;QACxB,yEAA0B;QACxB,yEAAuB;QACrB,yEAA2B;QACzB,qEAEM;QACN,0EAAsB;QACpB,2EAA4B;QAG1B,qHAoDM;QAIN,qHAsBM;QAIN,qHAeM;QAIN,qHAcM;QAIN,qHAeM;QAIN,2EAA6E;QAC3E,0EAAiB;QAAA,oEAAwC;QAAA,4DAAK;QAC9D,0EAAsB;QAAA,qFAAyB;QAAA,4DAAK;QAEpD,8EAA4E;QAArC,6IAAS,cAAU,IAAC;QAAkB,yEAAY;QAAA,mIAAuH;QAAA,4DAAS;QAE3N,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAU;QACV,+EAA+B;QAC7B,0EAA0B;QACxB,0EAAuB;QACrB,0EAA2B;QACzB,qEAEM;QACN,0EAAsB;QACpB,2EAA4B;QAG1B,oHAeM;QAIN,mHAOM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAU;QACZ,4DAAgB;QAElB,4DAAM;;QA1NiB,0DAAW;QAAX,uEAAW;QAE1B,0DAAgC;QAAhC,gGAAgC;QAgBkE,2DAAgC;QAAhC,gGAAgC;QAwDhB,0DAAuC;QAAvC,uGAAuC;QA0B7F,0DAAwC;QAAxC,wGAAwC;QAmBzC,0DAAuC;QAAvC,uGAAuC;QAkBtC,0DAAwC;QAAxC,wGAAwC;QAmBzD,0DAAyC;QAAzC,iGAAyC;QAI6B,0DAAW;QAAX,uEAAW;QAqB9G,0DAAwB;QAAxB,wFAAwB;QAmBxB,0DAAuB;QAAvB,uFAAuB;;;;;;;;;;;;;;AClM7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoG;AAC1C;AACK;;;;;;;;;;;;;ICqDpD,kFAAuF;;;IAkCjF,sEAA8G;;IAAvE,wFAAoC;;;IAC3E,sEAA8G;;IAAvE,wFAAoC;;;IAC3E,sEAA6G;;IAAvE,wFAAoC;;;IAE5E,yEAAuD;IAAA,2EAAgE;IAAA,iEAAM;IAAA,4DAAO;IAAA,4DAAK;;IAA5E,0DAAoC;IAApC,wFAAoC;;;IACjG,yEAAwD;IAAA,2EAAgE;IAAA,kEAAO;IAAA,4DAAO;IAAA,4DAAK;;IAA7E,0DAAoC;IAApC,wFAAoC;;;IAClG,yEAAuD;IAAA,2EAAgE;IAAA,kEAAO;IAAA,4DAAO;IAAA,4DAAK;;IAA7E,0DAAoC;IAApC,wFAAoC;;;IAtBnG,wEAAgE;IAChE,qEAAiE;IAG/D,kFAAqF;IAErF,yEAAgB;IAAA,uDAAY;IAAA,4DAAK;IACjC,yEAAgB;IAAA,uDAA+C;IAAA,4DAAK;IAEpE,yEAAgB;IAAA,uDAAoB;IAAA,4DAAK;IACzC,yEAAgB;IAAA,wDAAsB;IAAA,4DAAK;IAC3C,0EAAgB;IAAA,wDAA0B;IAAA,4DAAK;IAC/C,0EAAgB;IAAA,wDAAuB;IAAA,4DAAK;IAC5C,0EAAgB;IAAA,wDAAiD;;;IAAA,4DAAK;IACtE,0EAA6C;IAC3C,wDACA;;;IAAA,0IAA8G;IAC9G,0IAA8G;IAC9G,0IAA6G;IAC/G,4DAAK;IACL,sIAAyI;IACzI,sIAA2I;IAC3I,sIAA0I;IAO5I,4DAAK;IACL,4DAAQ;;;;;IA7BJ,0DAA4D;IAA5D,mHAA4D;IAK9C,0DAAY;IAAZ,4EAAY;IACZ,0DAA+C;IAA/C,sHAA+C;IAE/C,0DAAoB;IAApB,oFAAoB;IACpB,0DAAsB;IAAtB,sFAAsB;IACtB,0DAA0B;IAA1B,0FAA0B;IAC1B,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAiD;IAAjD,2NAAiD;IAE/D,0DACA;IADA,yRACA;IAAO,0DAA6B;IAA7B,4FAA6B;IAC7B,0DAA8B;IAA9B,6FAA8B;IAC9B,0DAA6B;IAA7B,4FAA6B;IAEjC,0DAA6B;IAA7B,4FAA6B;IAC7B,0DAA8B;IAA9B,6FAA8B;IAC9B,0DAA6B;IAA7B,4FAA6B;;;IAvCtC,4EAAoF;IAClF,wEAAO;IACP,qEAAI;IAEF,gEAAS;IAET,yEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,yEAAgB;IAAA,2EAAgB;IAAA,4DAAK;IAErC,yEAAgB;IAAA,gEAAK;IAAA,4DAAK;IAC1B,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,iEAAK;IAAA,4DAAK;IAC1B,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC3B,0EAAgB;IAAA,uEAAW;IAAA,4DAAK;IAClC,4DAAK;IACL,4DAAQ;IACR,qIA8BQ;IACV,4DAAQ;;;IA/BmB,2DAAuB;IAAvB,8FAAuB;;;IAgClD,0EAA6I;IAC3I,2EAA0C;IAAA,+EAAoB;IAAA,4DAAO;IACvE,4DAAM;;;IAUR,0EAAkC;IAAA,sEAA+C;IAAA,4DAAM;;;IAGrF,kFAAwE;;;IACxE,4EAA8C;IAC5C,wEAAO;IACP,qEAAI;IACF,yEAAgB;IAAA,0EAAe;IAAA,4DAAK;IACpC,yEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,yEAAgB;IAAA,uEAAY;IAAA,4DAAK;IACjC,yEAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,2EAAU;IAAA,4DAAK;IAC/B,0EAAgB;IAAA,uEAAW;IAAA,4DAAK;IAChC,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC7B,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,sEAAI;IACF,0EAAiB;IAAC,mEAAM;IAAA,4DAAK;IAC7B,0EAAiB;IAAC,kEAAK;IAAA,4DAAK;IAC5B,0EAAiB;IAAC,kEAAK;IAAA,4DAAK;IAC5B,0EAAiB;IAAC,oEAAO;IAAA,4DAAK;IAC9B,0EAAiB;IAAC,oEAAO;IAAA,4DAAK;IAC9B,0EAAiB;IAAC,oEAAO;IAAA,4DAAK;IAC9B,0EAAiB;IAAC,8EAA8C;IAAA,mEAAO;IAAA,oEAA2D;IAAA,4DAAS;IAAA,4DAAK;IAClJ,4DAAK;IACL,4DAAQ;IACV,4DAAQ;;;IACR,0EAA4F;IAC1F,2EAA0C;IAAA,+EAAoB;IAAA,4DAAO;IACvE,4DAAM;;;IAjCd,yEAA+B;IAC7B,0EAAuB;IACrB,0EAA8B;IAC5B,2HAAuF;IACvF,6EAAiC;IAAA,sFAA2B;IAAA,4DAAS;IACrE,sEAAK;IACH,qJAAwE;IACxE,gIAuBQ;IACR,2HAEM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;IAlCqB,0DAAW;IAAX,uEAAW;IAGX,0DAAW;IAAX,uEAAW;IACI,0DAAU;IAAV,sEAAU;IAwBtC,0DAAW;IAAX,uEAAW;;ADtIrB,MAAM,uBAAuB;IAuBlC,YAAmB,aAA4B,EAAS,gBAAkC,EAAS,MAAc,EAC9F,WAAwB,EAAS,KAAmB,EAAS,KAAmB,EAAS,OAAuB;QADhH,kBAAa,GAAb,aAAa,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAC9F,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAc;QAAS,UAAK,GAAL,KAAK,CAAc;QAAS,YAAO,GAAP,OAAO,CAAgB;QA8BnI,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;YAEvE,sEAAsE;YACtE,mFAAmF;YACnF,IAAI;YAEJ,sDAAsD;YAEtD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,GAAG,IAAI,gEAAI,CAAC,IAAI,CAAC,CAAC;gBACnC,kDAAkD;gBAClD,IAAI,CAAC,mBAAmB,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;gBACzE,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC;YAC/F,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAsCF,2CAA2C;QAC3C,0BAAqB,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YAEjC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;YAEtE,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAC7D,QAAQ,CAAC,EAAE;gBACT,MAAM,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAC3D,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBAC7B,iIAAiI;gBAEjI,IAAI,CAAC,mBAAmB,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACzD,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;gBACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACtC,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;gBAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACrC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YACpC,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;gBACtF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAChC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAEpC,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QAEF,oBAAe,GAAG,CAAC,IAAI,EAAE,EAAE;YACzB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC;QApHA,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,GAAG;YACzB,aAAa,EAAE,CAAC;YAChB,uBAAuB,EAAE,CAAC;YAC1B,iBAAiB,EAAE,CAAC;YACpB,wBAAwB,EAAE,CAAC;YAC3B,6BAA6B,EAAE,CAAC;YAChC,yBAAyB,EAAE,CAAC;YAC5B,0BAA0B,EAAE,CAAC;YAC7B,kBAAkB,EAAE,CAAC;YACrB,mBAAmB,EAAE,CAAC;YACtB,sBAAsB,EAAE,CAAC;SAC1B,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAGD,QAAQ,CAAC,EAAE;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC;IAqBD,0BAA0B,CAAC,EAAU;QACnC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,EAAE,CAAC,CAAC,SAAS,CAC/D,IAAI,CAAC,EAAE;YACL,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,cAAc,GAAG,IAAI,qGAAyB,CAAC,KAAK,CAAC,CAAC;YAC5D,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,MAAM,EACJ,gBAAgB,EAChB,WAAW,EAAE,cAAc,EAC3B,YAAY,EAAE,WAAW,EAAE,YAAY,EACvC,sBAAsB,EAAE,kBAAkB,EAAE,mBAAmB,EAChE,GAAG,cAAc,CAAC;YACnB,IAAI,CAAC,mBAAmB,GAAG;gBACzB,iBAAiB,EAAE,gBAAgB;gBACnC,aAAa,EAAE,WAAW;gBAC1B,sBAAsB,EAAE,cAAc;gBACtC,mBAAmB,EAAE,YAAY;gBACjC,kBAAkB,EAAE,WAAW;gBAC/B,wBAAwB,EAAE,YAAY;gBACtC,6BAA6B,EAAE,sBAAsB;gBACrD,yBAAyB,EAAE,kBAAkB;gBAC7C,0BAA0B,EAAE,mBAAmB;aAChD,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACjD,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;YAClF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAuCD,oCAAoC;IACpC,qBAAqB;QACnB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxD,MAAM,WAAW,GAAQ,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC3C,WAAW,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACnC;QACD,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACvC,CAAC;;8FA7JU,uBAAuB;uGAAvB,uBAAuB;QClBnC,yEAAuB;QACrB,yEAAiB;QAEf,yEAA+B;QAC7B,yEAAyD;QACvD,yEAA0B;QACxB,0EAAsD;QAAA,kEAA2B;QAAA,4DAAO;QACxF,yEAAkC;QAChC,yEAAwD;QAAA,uEAAY;QAAA,4DAAM;QAC1E,0EAAmB;QAAC,wDAA6F;;;QAAA,4DAAM;QACzH,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EAA+B;QAC7B,0EAAyD;QACvD,0EAA0B;QACxB,2EAAsD;QAAA,mEAA2B;QAAA,4DAAO;QACxF,0EAAkC;QAChC,0EAAyD;QAAA,8EAAkB;QAAA,4DAAM;QACjF,0EAAmB;QAAA,wDAAuG;;;QAAA,4DAAM;QAClI,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EAA+B;QAC7B,0EAAyD;QACvD,2EAA6C;QAC3C,4EAAsD;QAAA,oEAA8B;QAAA,4DAAO;QAC3F,2EAAiD;QAC/C,2EAAyD;QAAA,8EAAkB;QAAA,4DAAM;QACjF,0EAAmB;QAAA,wDAA2C;QAAA,4DAAM;QACtE,4DAAM;QACN,2EAAiC;QAC/B,2EAAkC;QAAA,sEAAU;QAAA,4DAAM;QAClD,0EAAmB;QAAA,wDAAgD;QAAA,4DAAM;QAC3E,4DAAM;QACN,2EAAiC;QAC/B,2EAAkC;QAAA,kEAAM;QAAA,4DAAM;QAC9C,0EAAmB;QAAA,wDAA2C;QAAA,4DAAM;QACtE,4DAAM;QACN,2EAAiC;QAC/B,2EAAkC;QAAA,mEAAO;QAAA,4DAAM;QAC/C,0EAAmB;QAAA,wDAA6C;QAAA,4DAAM;QACxE,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,2EAA+C;QAC7C,2EAAwC;QAEtC,2EAAkF;QAChF,0EAAQ;QACN,uFACX;QACS,4DAAS;QACT,uEAAK;QACH,gJAAuF;QACvF,2HAgDQ;QACR,sHAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,uHAqCM;QACR,4DAAM;;QAtJ0B,2DAA6F;QAA7F,uTAA6F;QAY9F,2DAAuG;QAAvG,uTAAuG;QAYvG,2DAA2C;QAA3C,mJAA2C;QAI3C,0DAAgD;QAAhD,wJAAgD;QAIhD,0DAA2C;QAA3C,oJAA2C;QAI3C,0DAA6C;QAA7C,qJAA6C;QAiB/C,0DAA0B;QAA1B,0FAA0B;QACE,0DAAmC;QAAnC,mGAAmC;QAiD5E,0DAA4D;QAA5D,gIAA4D;QASxD,0DAAW;QAAX,uEAAW;;;;;;;;;;;;;;ACxHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAEa;AAEiB;AACN;AACe;AACP;AACS;AACR;AACyB;AACzB;AAIkB;AAIvB;AAC+C;AACL;AACd;AAId;AACc;AAC1B;AACkC;AAE1C;;AAgC5D,MAAM,WAAW;;2FAAX,WAAW;iJAAX,WAAW,kBAPb;YACP,4DAAY;YACZ,gFAAY;YACZ,iFAAgB;YAChB,wEAAkB;SACnB;oIAEU,WAAW,mBA3BpB,kGAAuB;QACvB,mFAAkB;QAClB,oGAAoB;QACpB,2FAAiB;QACjB,4FAAqB;QACrB,qHAA4B;QAC5B,yFAAoB;QACpB,4FAAqB;QACrB,gIAAgC;QAChC,mHAAmB;QACnB,2IAAqB;QACrB,sIAAoB;QACpB,oJAAsC;QACtC,kIAAgC;QAChC,8IAAgC;QAChC,oHAA4B;QAC5B,0IAAoB;QACpB,0HAA0B;QAC1B,2HAAoB,aAGpB,4DAAY;QACZ,gFAAY;QACZ,iFAAgB;QAChB,wEAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICtDd,qEAAuD;IAAA,uDAA4F;;;IAAA,4DAAK;;;IAAjG,0DAA4F;IAA5F,6QAA4F;;;IACnJ,qEAAuD;IAAA,kEAAqC;IAAC,4DAAK;;;IAIlG,qEAAiE;IAAA,uDAAsG;;;IAAA,4DAAK;;;IAA3G,0DAAsG;IAAtG,uRAAsG;;;IACvK,qEAAiE;IAAA,kEAAqC;IAAC,4DAAK;;;IAU9G,0EAAkC;IAAA,sEAA+C;IAAA,4DAAM;;;IAGrF,kFAAwE;;;IACxE,4EAA8C;IAC5C,wEAAO;IACP,qEAAI;IACF,yEAAgB;IAAA,0EAAe;IAAA,4DAAK;IACpC,yEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,yEAAgB;IAAA,uEAAY;IAAA,4DAAK;IACjC,yEAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,2EAAU;IAAA,4DAAK;IAC/B,0EAAgB;IAAA,uEAAW;IAAA,4DAAK;IAClC,4DAAK;IACL,4DAAQ;IACR,yEAAO;IACP,sEAAI;IACF,0EAAiB;IAAC,mEAAM;IAAA,4DAAK;IAC7B,0EAAiB;IAAC,kEAAK;IAAA,4DAAK;IAC5B,0EAAiB;IAAC,kEAAK;IAAA,4DAAK;IAC5B,0EAAiB;IAAC,oEAAO;IAAA,4DAAK;IAC9B,0EAAiB;IAAC,oEAAO;IAAA,4DAAK;IAC9B,0EAAiB;IAAC,oEAAO;IAAA,4DAAK;IAChC,4DAAK;IACL,4DAAQ;IACV,4DAAQ;;;IACR,0EAA4F;IAC1F,2EAA0C;IAAA,+EAAoB;IAAA,4DAAO;IACvE,4DAAM;;;IA7BV,yEAA4C;IAC1C,sHAAuF;IACvF,6EAAiC;IAAA,mFAAwB;IAAA,4DAAS;IAClE,sEAAK;IACH,gJAAwE;IACxE,2HAqBQ;IACR,sHAEM;IACR,4DAAM;IACR,4DAAM;;IA9BiB,0DAAW;IAAX,uEAAW;IAGX,0DAAW;IAAX,uEAAW;IACI,0DAAU;IAAV,sEAAU;IAsBtC,0DAAW;IAAX,uEAAW;;AC/BlB,MAAM,kBAAkB;IAW7B,YAAmB,aAA4B,EAAS,gBAAkC,EACvE,KAAkB,EAAS,MAAc,EACzC,KAAmB,EAAS,KAAmB,EAAS,OAAuB;QAF/E,kBAAa,GAAb,aAAa,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QACvE,UAAK,GAAL,KAAK,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QACzC,UAAK,GAAL,KAAK,CAAc;QAAS,UAAK,GAAL,KAAK,CAAc;QAAS,YAAO,GAAP,OAAO,CAAgB;QAT3F,wBAAmB,GAAQ;YAChC,aAAa,EAAG,IAAI;YACpB,uBAAuB,EAAG,IAAI;YAC9B,mBAAmB,EAAG,IAAI;SAC3B,CAAC;QAOA,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,+CAA+C;QAE/C,aAAa,CAAC,sBAAsB,CAAC,SAAS,CAC5C,GAAG,CAAC,EAAE;YACJ,oBAAoB;YACpB,IAAI,CAAC,mBAAmB,CAAC,aAAa,GAAG,GAAG,CAAC,cAAc,CAAC,aAAa,CAAC;YAC1E,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAG,GAAG,CAAC,cAAc,CAAC,uBAAuB,CAAC;QAChG,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;IAC1C,CAAC;;oFA9BU,kBAAkB;kGAAlB,kBAAkB;QDlB/B,yEAAiB;QACf,yEAAgC;QAG9B,6EAA8B;QAC5B,yEAAmB;QACjB,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,4GAAwJ;QACxJ,4GAAkG;QACpG,4DAAM;QACN,yEAAyD;QACvD,qEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,8GAA4K;QAC5K,8GAA4G;QAC9G,4DAAM;QACR,4DAAU;QAEV,0EAA8B;QAC5B,4EAA+B;QACjC,4DAAM;QAGN,gHA+BM;QACR,4DAAM;QACR,4DAAM;;QAhDO,0DAAgD;QAAhD,gHAAgD;QAChD,0DAAgD;QAAhD,gHAAgD;QAIhD,0DAA0D;QAA1D,0HAA0D;QAC1D,0DAA0D;QAA1D,0HAA0D;QASpC,0DAAW;QAAX,uEAAW;;;;;;;;;;;;;;AErB9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAC6B;AACf;AACyB;AACR;AACT;AACC;AACH;AACkC;AACI;AACP;AACH;AACzB;AACmC;AACJ;AACgB;AACN;AACC;AACL;AACd;AACJ;;;AAEjG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,kBAAkB;QAC9B,SAAS,EAAE,MAAM;KAClB;IACD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kGAAuB,EAAC;IACvD;QACE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mFAAkB;QAC3C,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2GAAsB,EAAC;YAC7C,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+GAAuB,EAAC;YACjD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,oGAAoB,EAAC;YAClD,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2FAAiB,EAAC;SAAC;KAChD;IACD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4FAAqB,EAAC;IACnD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yFAAoB,EAAC;IACjD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0HAAmB,EAAC;IACrD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8HAAoB,EAAC;IACtD,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,kHAAsB,EAAC;IAC3D,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sHAA4B,EAAC;IACnE,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,6FAAqB,EAAC;IACnD,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,gIAAgC,EAAC;IAC1E;QACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2HAAoB;QACjD,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2IAAqB,EAAC;YACnD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,qIAAmB,EAAC;YACrD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sIAAoB,EAAC;SAAC;KAC1D;IACD,6EAA6E;IAC7E,EAAC,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,kIAAgC,EAAC;IAC3E,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oHAA4B,EAAC;CACnE,CAAC;AAMK,MAAM,kBAAkB;;kGAAlB,kBAAkB;+JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;oIAEX,kBAAkB,uFAFnB,4DAAY;;;;;;;;;;;;;AC3DxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;;;;;;;;;;;;;;ICqEyD,mEAA4F;;;IAArM,6EAAmG;IAAA,iEAAM;IAAA,wHAA4F;IAAA,4DAAS;;;IAAlL,uFAAuB;IAA0D,0DAAgB;IAAhB,mFAAgB;;;ADvDhI,MAAM,qBAAqB;IAqBhC,YAAoB,aAA4B,EAAS,MAAc,EAAS,gBAAkC,EAC9F,YAAyB,EAAS,WAAwB,EAAS,KAAmB,EAAS,KAAmB;QADlH,kBAAa,GAAb,aAAa,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAC9F,iBAAY,GAAZ,YAAY,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,UAAK,GAAL,KAAK,CAAc;QAAS,UAAK,GAAL,KAAK,CAAc;QApBtI,cAAS,GAAG,SAAS,CAAC;QAUf,iBAAY,GAAQ;YACzB,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;SACX,CAAC;QAkCF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACzD,CAAC,QAAa,EAAE,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC3B,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;oBAC5C,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACnE;YACH,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;gBAClE,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACF;QACH,CAAC;QAEH,eAAe;QACb,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CACzE,CAAC,QAAa,EAAE,EAAE;gBAChB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC3B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC;oBACtC,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,8BAA8B,EAAE,SAAS,CAAC,CAAC;oBAClE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;YACH,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;gBAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC1B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC7C,CAAC,CACF;QACH,CAAC;QAED,YAAY;QACZ,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,SAAS,CACxC,CAAC,QAAa,EAAE,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC7B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBACjE,4BAA4B;YAC7B,CAAC,CACF;QACH,CAAC;QApFC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;IAClD,CAAC;IA2DD,UAAU;QACR,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;SACjC;IACH,CAAC;;0FAtHU,qBAAqB;qGAArB,qBAAqB;QCflC,yEAAiB;QACf,yEAAiC;QAE/B,yEAAsB;QAEpB,yEAAyB;QACvB,yEAA8C;QAAA,kEAAmC;QAAC,4DAAM;QAC1F,4DAAM;QAEN,yEAAoD;QAElD,yEAAuC;QAAA,yEAA2E;QAAvB,0IAAS,gBAAY,IAAC;QAAC,uDAAa;QAAA,4DAAM;QAAA,4DAAM;QAC3I,2EAAoD;QAA9C,kJAAY,cAAU,IAAC;QAC3B,2EAAoD;QAClD,2EAA6B;QAAA,gFAAoB;QAAA,4DAAM;QACvD,sEAA2B;QAC3B,2EAAyB;QAEvB,sFAA2C;QACzC,6EAAuC;QAAA,sEAAU;QAAA,4DAAQ;QACzD,6EAAyM;QAAvI,0MAAoC;QAAtG,4DAAyM;QAC3M,4DAAiB;QAEjB,sFAA2C;QACzC,6EAAmC;QAAA,qEAAS;QAAA,4DAAQ;QACpD,6EAAoM;QAA5H,yMAAmC;QAA3G,4DAAoM;QACtM,4DAAiB;QAEnB,4DAAM;QAEN,2EAAyB;QACvB,sFAA2C;QACzC,6EAAoC;QAAA,wEAAY;QAAA,4DAAQ;QACxD,6EAAsM;QAA/H,yMAAmC;QAA1G,4DAAsM;QACxM,4DAAiB;QAGjB,sFAA2C;QACzC,6EAAmC;QAAA,yEAAa;QAAA,4DAAQ;QACxD,6EAAkM;QAA1H,sMAAgC;QAAxG,4DAAkM;QACpM,4DAAiB;QACnB,4DAAM;QAEN,2EAA0B;QACxB,2EAA6B;QAAA,mEAAO;QAAA,4DAAM;QAC1C,sEAA2B;QAC3B,2EAAyB;QACvB,sFAAkC;QAChC,6EAAqC;QAAA,mEAAO;QAAA,4DAAQ;QACpD,gFAAuM;QAA1G,2MAAkC;QAAwE,4DAAW;QACpN,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QAER,4DAAM;QAgBN,0HAA8M;QAEhN,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAjEoH,0DAAa;QAAb,8EAAa;QAS3F,2DAAsB;QAAtB,mFAAsB;QAKX,0DAAsB;QAAtB,mFAAsB;QAQb,0DAAsB;QAAtB,mFAAsB;QAM9B,0DAAsB;QAAtB,mFAAsB;QAUb,0DAAsB;QAAtB,mFAAsB;QAqBpE,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;ACtEnC;AAAA;AAAA;AAAA;;GAEG;AAE8C;AAE1C,MAAM,YAAY;IAiJvB,YAAY,GAAS;QACnB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC;IAjKD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,OAAO,CAAC,KAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,IAAI,aAAa,CAAC,KAAa;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAI,SAAS,CAAC,KAAU;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,IAAI,EAAE,CAAC,KAAa;QAClB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACnB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,QAAQ,CAAC,KAAU;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,QAAQ,CAAC,KAAa;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,2DAAS,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC;IAC5D,CAAC;IAED,IAAI,cAAc,CAAC,KAAa;QAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAI,WAAW,CAAC,KAAU;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,KAAa;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;CAoCF;;;;;;;;;;;;;AChKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsF;AACZ;;;;;;;;;;;;;;;;;;;;ICTxE,0EAAkC;IAAA,sEAA+C;IAAA,4DAAM;;;;IAErF,wEAA4E;IAA3C,mTAAkB,KAAK,KAAE;IAAkB,mEAAgC;IAAA,uEAAM;IAAA,+DAAI;IAAA,4DAAO;IAAA,4DAAI;;;IAIjI,kFAAwE;;;IAgBxD,iFAA2E;IACxE,uDACH;IAAA,4DAAa;;;IAFD,kFAAqB;IAC9B,0DACH;IADG,2FACH;;;IAEF,sEAAoJ;IAClJ,0EAAwB;IACtB,uFACF;IAAA,4DAAM;IACR,4DAAM;;;IAQF,0EAAmF;IACjF,wGACF;IAAA,4DAAM;;;IAHR,sEAAoJ;IAClJ,uIAEM;IACR,4DAAM;;;IAHE,0DAAwD;IAAxD,4HAAwD;;;IAU9D,0EAAqF;IACnF,yFACF;IAAA,4DAAM;;;IAHR,sEAA0J;IACxJ,uIAEM;IACR,4DAAM;;;IAHE,0DAA0D;IAA1D,8HAA0D;;;IAYhE,0EAA8E;IAC5E,+EACF;IAAA,4DAAM;;;IAEN,0EAAgF;IAC9E,iFACF;IAAA,4DAAM;;;IAPR,sEAAqI;IACnI,uIAEM;IAEN,uIAEM;IACR,4DAAM;;;IAPE,0DAAmD;IAAnD,uHAAmD;IAInD,0DAAsD;IAAtD,wHAAsD;;;IAU5D,0EAAmF;IACjF,wFACF;IAAA,4DAAM;;;IAHR,sEAAoJ;IAClJ,uIAEM;IACR,4DAAM;;;IAHE,0DAAwD;IAAxD,4HAAwD;;;;IAxDxE,0EAA4G;IAC1G,+EAA2H;IAArH,uUAAuB;IAC3B,0EAAkB;IAChB,qFAA+H;IAC7H,8IAEa;IACf,4DAAa;IACb,gIAIM;IACR,4DAAM;IAEN,0EAAyB;IACvB,qFAAgD;IAC9C,6EAAyC;IAAA,2FAA+B;IAAA,4DAAQ;IAChF,wEAA4I;IAC5I,kIAIM;IACR,4DAAiB;IAEjB,sFAAgD;IAC9C,6EAA2C;IAAA,0EAAc;IAAA,4DAAQ;IACjE,wEAA+H;IAC/H,kIAIM;IACR,4DAAiB;IACnB,4DAAM;IAEN,2EAAyB;IACvB,sFAAgD;IAC9C,6EAAoC;IAAA,wEAAY;IAAA,4DAAQ;IACxD,wEAAiH;IACjH,kIAQM;IACR,4DAAiB;IAEjB,sFAAgD;IAC9C,6EAAyC;IAAA,iFAAqB;IAAA,4DAAQ;IACtE,wEAA4H;IAC5H,kIAIM;IACR,4DAAiB;IACnB,4DAAM;IAEN,2EAA6B;IAC3B,yEAAO;IAAA,mFAAuB;IAAA,4DAAQ;IACtC,iFAAyH;IAA7B,kVAA4B;IAAxH,4DAAyH;IAC3H,4DAAM;IAGN,yEAAqE;IAAtB,gUAAqB;IAAE,mEAAM;IAAA,4DAAI;IAEhF,8EAAyG;IAAA,mEAAO;IAAA,4DAAS;IAE3H,4DAAO;IACT,4DAAM;;;IA1E8D,kGAAuC;IAC3E,0DAA6B;IAA7B,6FAA6B;IAGK,0DAAe;IAAf,wFAAe;IAIrE,0DAA4I;IAA5I,6NAA4I;IAW1I,0DAA4I;IAA5I,6NAA4I;IAU5I,0DAAkJ;IAAlJ,mOAAkJ;IAYlJ,0DAA6H;IAA7H,8MAA6H;IAc7H,0DAA4I;IAA5I,6NAA4I;IAgB5H,0DAAiD;IAAjD,wHAAiD;;;;IAO/E,0EAAmH;IACjH,yEAAsB;IAAA,+EAAoB;IAAA,4DAAK;IAC/C,oEAAG;IAAA,yGAA8C;IAAA,4DAAI;IACrD,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,uEAAY;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IAC1H,2EAAmB;IAAA,4EAAoB;IAAA,2EAAe;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IAC7H,2EAAmB;IAAA,4EAAoB;IAAA,2EAAe;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAgC;IAAA,4DAAO;IAAA,4DAAM;IAC/H,2EAAmB;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA+E;;;IAAA,4DAAO;IAAA,4DAAM;IACrK,2EAAmB;IAAA,4EAAoB;IAAA,wEAAY;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IAC5H,4DAAM;IACN,8EAAiH;IAA/C,oUAAoB;IAA4B,kEAAK;IAAA,4DAAS;IAEhI,8EAA6G;IAA3C,0UAA0B;IAAiB,wDAC3H;IACc,4DAAS;IAEX,4DAAM;;;IAhBiE,qGAA0C;IAI9B,2DAA8B;IAA9B,kGAA8B;IAC3B,0DAA8B;IAA9B,kGAA8B;IAC9B,0DAAgC;IAAhC,oGAAgC;IACzC,0DAA+E;IAA/E,2PAA+E;IACzE,0DAA8B;IAA9B,kGAA8B;IAExB,0DAAyB;IAAzB,yFAAyB;IAExE,0DAAyB;IAAzB,yFAAyB;IAA4C,0DAC3H;IAD2H,4HAC3H;;;;IAOY,0EAAwH;IACtH,yEAAiB;IAAA,mEAAwC;IAAA,4DAAK;IAC9D,yEAAsB;IAAA,qFAA0B;IAAA,4DAAK;IAErD,0EAAgC;IAC9B,0EAAsD;IAAA,qEAAmH;IAAA,4DAAM;IAC/K,0EAA0B;IAAA,2EAAoB;IAAA,wEAAY;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAqC;IAAA,4DAAO;IAAA,4DAAM;IACxI,2EAA0B;IAAA,4EAAoB;IAAA,2EAAe;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAqC;IAAA,4DAAO;IAAA,4DAAM;IAC3I,2EAA0B;IAAA,4EAAoB;IAAA,2EAAe;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAuC;IAAA,4DAAO;IAAA,4DAAM;IAC7I,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAsF;;;IAAA,4DAAO;IAAA,4DAAM;IACnL,2EAA0B;IAAA,4EAAoB;IAAA,wEAAY;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAqC;IAAA,4DAAO;IAAA,4DAAM;IAC1I,4DAAM;IAEN,8EAA4E;IAArC,oUAAoB;IAAkB,wEAAW;IAAA,4DAAS;IAEnG,4DAAM;;;IAfsE,sGAA2C;IAKhB,0DAA4C;IAA5C,yKAA4C;IACzD,0DAAqC;IAArC,yGAAqC;IAClC,0DAAqC;IAArC,yGAAqC;IACrC,0DAAuC;IAAvC,2GAAuC;IAChD,0DAAsF;IAAtF,iQAAsF;IAChF,0DAAqC;IAArC,yGAAqC;;;IAmBlC,6EAAuH;;;IAUzH,6EAAuH;;AD3IvN,MAAM,4BAA4B;IA0CvC,YAAmB,aAA4B,EAAS,gBAAkC,EAAS,MAAc,EAC9F,KAAmB,EAAS,EAAe,EAAS,KAAkB,EAAS,KAAmB;QADlG,kBAAa,GAAb,aAAa,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAC9F,UAAK,GAAL,KAAK,CAAc;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,UAAK,GAAL,KAAK,CAAa;QAAS,UAAK,GAAL,KAAK,CAAc;QAtCrH,kBAAa,GAAG,6BAA6B,CAAC;QAMvC,UAAK,GAAG,IAAI,CAAC;QAOb,mBAAc,GAAQ;YAC3B,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,EAAE;YACjB,MAAM,EAAE,CAAC;YACT,WAAW,EAAE,EAAE;YACf,cAAc,EAAG,EAAE;SACpB,CAAC;QAWK,WAAM,GAAQ;YACnB,aAAa,EAAG,CAAC;YACjB,uBAAuB,EAAG,CAAC;YAC3B,mBAAmB,EAAG,CAAC;SACxB,CAAC;QAiDF,+FAA+F;QAC/F,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CACnD,QAAQ,CAAC,EAAE;gBACT,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;gBAChF,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC,CACF,CAAC;QACJ,CAAC;QAGD,yBAAoB,GAAG,GAAG,EAAE;YAC1B,MAAO,kBAAkB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAC9B,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACzC,CAAC;QAiBD,mBAAc,GAAG,GAAG,EAAE;YACpB,kCAAkC;YAClC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC;YAC3D,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;YACzE,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAE5C,sEAAsE;YACrE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAEhC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACxC,QAAQ,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAEvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAGxC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CACvE,QAAQ,CAAC,EAAE;gBACT,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,2EAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAExC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC3B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;gBAChF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,CACF,CAAC;QACJ,CAAC;QAvHC,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE9C,2DAA2D;QAC3D,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;IAEpB,CAAC;IAGD,UAAU;QACR,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAGD,SAAS;QACP,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,EAAE,CAAC;QAExC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;IAChD,CAAC;IAED,QAAQ,CAAC,OAAe,KAAK;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IA4BD,uBAAuB;IACvB,QAAQ;QACN,iFAAiF;QACjF,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,aAAa,CAAC;QAC7E,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,cAAc,CAAC;QAE/E,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC1D,CAAC;IAsCD,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,CAAC,CAAC;QACT,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;;wGAnLU,4BAA4B;4GAA5B,4BAA4B;;kEAS5B,iEAAkB;;;;;;QC1B/B,yEAAuB;QACrB,wHAAuF;QACvF,4EAAiC;QAC/B,oHAAiI;QACjI,wEACF;QAAA,4DAAS;QACT,sEAAK;QACH,kJAAwE;QAC1E,4DAAM;QACN,yEAA0B;QACxB,yEAAuB;QACrB,yEAA2B;QACzB,qEAEM;QACN,0EAAsB;QACpB,2EAA4B;QAG1B,6HA0EM;QAIN,6HAgBM;QAIN,6HAeM;QAIN,2EAAqF;QACnF,0EAAiB;QAAA,oEAAwC;QAAA,4DAAK;QAC9D,0EAAsB;QAAA,2EAAe;QAAA,4DAAK;QAE1C,2EAAgC;QAC9B,2EAAmB;QAAA,4EAAoB;QAAA,wEAAY;QAAA,4DAAO;QAAC,4EAAoB;QAAA,iEAAK;QAAA,4DAAO;QAAA,4DAAM;QACjG,2EAAmB;QAAA,4EAAoB;QAAA,mEAAO;QAAA,4DAAO;QAAC,4EAAoB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAM;QAChG,2EAAmB;QAAA,4EAAoB;QAAA,kEAAM;QAAA,4DAAO;QAAC,4EAAoB;QAAA,wDAAyC;;;QAAA,4DAAO;QAAA,4DAAM;QACjI,4DAAM;QAEN,8EAA+E;QAAxC,qJAAS,iBAAa,IAAC;QAAkB,wEAAW;QAAA,2IAAuH;QAAA,4DAAS;QAE7N,4DAAM;QAIN,2EAA6E;QAC3E,0EAAiB;QAAA,oEAAwC;QAAA,4DAAK;QAC9D,0EAAsB;QAAA,qFAAyB;QAAA,4DAAK;QAEpD,8EAA4E;QAArC,qJAAS,cAAU,IAAC;QAAkB,yEAAY;QAAA,2IAAuH;QAAA,4DAAS;QAE3N,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAM;;QArKiB,0DAAW;QAAX,uEAAW;QAE1B,0DAA2B;QAA3B,2FAA2B;QAIZ,0DAAW;QAAX,uEAAW;QAYiB,0DAA2B;QAA3B,2FAA2B;QA8ExB,0DAA2B;QAA3B,6FAA2B;QAoB1B,0DAA+B;QAA/B,+FAA+B;QAmBhC,0DAA0C;QAA1C,kGAA0C;QAOP,2DAAyC;QAAzC,yNAAyC;QAGX,0DAAW;QAAX,uEAAW;QAMnF,0DAAyC;QAAzC,iGAAyC;QAI6B,0DAAW;QAAX,uEAAW;;;;;;;;;;;;;;ACrJhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACyB;AACd;AACqB;;;;;;;;;;;;;;;;;;;;;;ICT3F,0EAAkC;IAAA,sEAA+C;IAAA,4DAAM;;;;IAErF,wEAA8E;IAA5C,ySAAkB,MAAM,KAAE;IAAkB,mEAAgC;IAAA,uEAAM;IAAA,+DAAI;IAAA,4DAAO;IAAA,4DAAI;;;IAInI,kFAAwE;;;IAe1D,2EAAoD;IAAA,mEAAqC;IAAC,2FAAgC;IAAA,4DAAO;;;IAE/H,iFAAmF;IACjF,qEAAuD;IAAE,uDAC3D;IAAA,4DAAa;;;IAFD,sFAAyB;IACP,0DAAwB;IAAxB,kJAAwB;IAAK,0DAC3D;IAD2D,wGAC3D;;;;IAHF,iFAAgM;IAA1E,sWAAqB;IACzI,gJAEa;IACf,4DAAa;;;IAJyG,oFAAqB;IAC7E,0DAAqB;IAArB,+FAAqB;;;IAInF,sEAAyH;IACvH,0EAAwB;IACtB,yFACF;IAAA,4DAAM;IACR,4DAAM;;;IAIJ,iFAA+E;IAC7E,uDACF;IAAA,4DAAa;;;IAFD,iFAAoB;IAC9B,0DACF;IADE,4FACF;;;;IAHF,iFAAqL;IAA1E,sWAAqB;IAC9H,gJAEa;IACf,4DAAa;;;IAJ8F,oFAAqB;IACvE,0DAAsB;IAAtB,gGAAsB;;;IAI/E,sEAAmH;IACjH,0EAAwB;IACtB,oFACF;IAAA,4DAAM;IACR,4DAAM;;;IAOJ,0EAAuE;IACrE,qFACF;IAAA,4DAAM;;;IAEN,0EAAmH;IACjH,uFACF;IAAA,4DAAM;;;IAEN,0EAA0E;IACxE,4FACF;IAAA,4DAAM;;;IAXR,sEAAgH;IAC9G,4HAEM;IAEN,4HAEM;IAEN,4HAEM;IACR,4DAAM;;;IAXE,0DAA4C;IAA5C,gHAA4C;IAI5C,0DAAwF;IAAxF,kKAAwF;IAIxF,0DAA+C;IAA/C,mHAA+C;;;;IAxC7D,0EAAoH;IAClH,2EAAgE;IAAnC,4TAAuB;IAClD,0EAAkB;IAChB,uHAAiI;IACjI,mIAIa;IACb,qHAIM;IACR,4DAAM;IACN,0EAAkB;IAChB,mIAIa;IACb,qHAIM;IACR,4DAAM;IAEN,qFAA6B;IAC3B,6EAAmC;IAAA,wEAAY;IAAA,4DAAQ;IACvD,6EAAiK;IAAlH,wTAAoB;IAAnE,4DAAiK;IACjK,uHAYM;IACR,4DAAiB;IAEjB,2EAA2F;IACzF,0EAAQ;IAAA,qEAAS;IAAA,4DAAS;IAAA,wDAC5B;IAAA,4DAAM;IAEN,yEAAmD;IAAtB,qTAAqB;IAAE,mEAAM;IAAA,4DAAI;IAE9D,8EAA8F;IAAA,oEAAQ;IAAA,4DAAS;IAEjH,4DAAO;IACT,4DAAM;;;IAvDsC,mGAAwC;IAC5E,0DAAsB;IAAtB,sFAAsB;IAEjB,0DAAuB;IAAvB,0FAAuB;IACjB,0DAAwB;IAAxB,2FAAwB;IAK/B,0DAAiH;IAAjH,kMAAiH;IAO1G,0DAAqB;IAArB,wFAAqB;IAK5B,0DAA2G;IAA3G,4LAA2G;IAS2B,0DAAoB;IAApB,kFAAoB;IAC1J,0DAAwG;IAAxG,yLAAwG;IAgBpF,0DAC5B;IAD4B,wFAC5B;IAIsD,0DAAuC;IAAvC,8GAAuC;;;IA2B7F,mEAA0D;;;;;IApB9D,0EAA2I;IACzI,yEAAsB;IAAA,yEAAc;IAAA,4DAAK;IACzC,oEAAG;IAAA,4FAAiC;IAAA,4DAAI;IACxC,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,uEAAY;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAA2B;;IAAA,4DAAO;IAAA,4DAAM;IACvH,2EAAmB;IAAA,4EAAoB;IAAA,wEAAY;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAsC;;IAAA,4DAAO;IAAA,4DAAM;IAClI,2EAAmB;IAAA,4EAAoB;IAAA,mEAAO;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAmC;;IAAA,4DAAO;IAAA,4DAAM;IAC1H,2EAAmB;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA8D;;;;IAAA,4DAAO;IAAA,4DAAM;IACtJ,4DAAM;IAEN,2EAAuC;IACrC,yEAAO;IAAA,qEAAS;IAAA,8EAAuI;IAAA,wDAAkE;;;IAAA,4DAAS;IAAC,sFAAyB;IAAA,4DAAQ;IACpQ,2EAAwB;IACtB,wFAAqL;IAAzG,yUAAyB;IAAgF,iFAAqB;IAAA,4DAAmB;IAC/N,4DAAM;IACR,4DAAM;IAEN,8EAA+F;IAA/C,yTAAoB;IAA4B,kEAAK;IAAA,4DAAS;IAE9G,8EAAyG;IAAlE,4TAAuB;IAA2C,wDACvG;IAAA,mHAA0D;IAC5D,4DAAS;IAEX,4DAAM;;;IAvBoF,0GAA+C;IAItD,2DAA2B;IAA3B,sJAA2B;IAC3B,0DAAsC;IAAtC,iKAAsC;IAC3C,0DAAmC;IAAnC,8JAAmC;IACpC,0DAA8D;IAA9D,4SAA8D;IAI/G,0DAA8H;IAA9H,0PAA8H;IAAC,0DAAkE;IAAlE,yPAAkE;IAErM,0DAA0B;IAA1B,mFAA0B;IAIqB,0DAAyB;IAAzB,yFAAyB;IAE/B,0DAAyB;IAAzB,yFAAyB;IAAiB,0DACvG;IADuG,uHACvG;IAAI,0DAAkB;IAAlB,qFAAkB;;;IAoB6D,6EAAuH;;;;IAb9M,0EAA4I;IAC1I,yEAAiB;IAAA,mEAAwC;IAAA,4DAAK;IAC9D,yEAAsB;IAAA,8EAAmB;IAAA,4DAAK;IAE9C,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,iEAAM;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAA0B;IAAA,4DAAO;IAAA,4DAAM;IAChH,2EAAmB;IAAA,4EAAoB;IAAA,mEAAO;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAwC;IAAA,4DAAO;IAAA,4DAAM;IAC/H,2EAAmB;IAAA,4EAAoB;IAAA,0EAAc;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA+B;IAAA,4DAAO;IAAA,4DAAM;IAC7H,2EAA0B;IAAA,4EAAoB;IAAA,uEAAW;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAoC;;IAAA,4DAAO;IAAA,4DAAM;IACtI,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAwD;;;IAAA,4DAAO;IAAA,4DAAM;IACrJ,2EAA0B;IAAA,4EAAoB;IAAA,sEAAU;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA4D;;;IAAA,4DAAO;IAAA,4DAAM;IAC/J,4DAAM;IAEN,8EAA4E;IAArC,yTAAoB;IAAkB,qEAAQ;IAAA,uIAAuH;IAAA,4DAAS;IAEvN,4DAAM;;;IAfqF,2GAAgD;IAK9D,2DAA0B;IAA1B,kIAA0B;IACzB,0DAAwC;IAAxC,mHAAwC;IACjC,0DAA+B;IAA/B,uIAA+B;IAC3B,0DAAoC;IAApC,uMAAoC;IACzC,0DAAwD;IAAxD,mRAAwD;IACpD,0DAA4D;IAA5D,uRAA4D;IAG/C,0DAAW;IAAX,uEAAW;;;IAkBzB,6EAAuH;;;;IAZ9M,0EAAyI;IACvI,yEAAiB;IAAA,mEAAwC;IAAA,4DAAK;IAC9D,yEAAsB;IAAA,0EAAe;IAAA,4DAAK;IAE1C,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,kEAAO;IAAA,4DAAO;IAAC,2EAAoB;IAAA,wDAAwC;IAAA,4DAAO;IAAA,4DAAM;IAC/H,2EAA0B;IAAA,4EAAoB;IAAA,0EAAc;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA+B;IAAA,4DAAO;IAAA,4DAAM;IACpI,2EAA0B;IAAA,4EAAoB;IAAA,uEAAW;IAAA,4DAAO;IAAA,4EAAoB;IAAA,wDAAsF;;;IAAA,4DAAO;IAAA,4DAAM;IACvL,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAwD;;;IAAA,4DAAO;IAAA,4DAAM;IACrJ,2EAA0B;IAAA,4EAAoB;IAAA,sEAAU;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA4D;;;IAAA,4DAAO;IAAA,4DAAM;IAC/J,4DAAM;IAEN,8EAA4E;IAArC,yTAAoB;IAAkB,qEAAQ;IAAA,uIAAuH;IAAA,4DAAS;IAEvN,4DAAM;;;IAdmF,0GAA+C;IAK1D,2DAAwC;IAAxC,mHAAwC;IAC1B,0DAA+B;IAA/B,uIAA+B;IACnC,0DAAsF;IAAtF,uUAAsF;IAC1F,0DAAwD;IAAxD,mRAAwD;IACpD,0DAA4D;IAA5D,uRAA4D;IAG/C,0DAAW;IAAX,uEAAW;;;IAmBzB,6EAAuH;;;;IAb9M,0EAA4I;IAC1I,yEAAiB;IAAA,mEAA0C;IAAA,4DAAK;IAChE,yEAAsB;IAAA,2EAAgB;IAAA,4DAAK;IAC3C,oEAAG;IAAC,4FAAgC;IAAA,4DAAI;IAExC,0EAAgC;IAC9B,0EAAmB;IAAA,2EAAoB;IAAA,mEAAO;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAwC;IAAA,4DAAO;IAAA,4DAAM;IAC/H,2EAA0B;IAAA,4EAAoB;IAAA,0EAAc;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IACnI,2EAA0B;IAAA,4EAAoB;IAAA,uEAAW;IAAA,4DAAO;IAAA,4EAAoB;IAAA,wDAAqF;;;IAAA,4DAAO;IAAA,4DAAM;IACtL,2EAA0B;IAAA,4EAAoB;IAAA,kEAAM;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAAuD;;;IAAA,4DAAO;IAAA,4DAAM;IACpJ,2EAA0B;IAAA,4EAAoB;IAAA,sEAAU;IAAA,4DAAO;IAAC,4EAAoB;IAAA,wDAA2D;;;IAAA,4DAAO;IAAA,4DAAM;IAC9J,4DAAM;IAEN,8EAA4E;IAArC,yTAAoB;IAAkB,qEAAQ;IAAA,uIAAuH;IAAA,4DAAS;IAEvN,4DAAM;;;IAfqF,2GAAgD;IAM7D,2DAAwC;IAAxC,mHAAwC;IAC1B,0DAA8B;IAA9B,kGAA8B;IAClC,0DAAqF;IAArF,kSAAqF;IACzF,0DAAuD;IAAvD,8OAAuD;IACnD,0DAA2D;IAA3D,kPAA2D;IAG9C,0DAAW;IAAX,uEAAW;;;IAUzB,6EAAuH;;AD/InN,MAAM,iBAAiB;IAkD5B,YAAoB,aAA4B,EAAS,gBAAkC,EACvE,QAAqB,EACrB,KAAmB,EACnB,KAAkB,EAClB,WAAwB,EAAS,EAAe,EAAS,YAA0B,EACnF,KAAmB,EAAS,MAAc;QAL1C,kBAAa,GAAb,aAAa,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QACvE,aAAQ,GAAR,QAAQ,CAAa;QACrB,UAAK,GAAL,KAAK,CAAc;QACnB,UAAK,GAAL,KAAK,CAAa;QAClB,gBAAW,GAAX,WAAW,CAAa;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QACnF,UAAK,GAAL,KAAK,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAnD9D,kBAAa,GAAG,6BAA6B,CAAC;QAGvC,uBAAkB,GAAG,EAAE,CAAC;QACxB,wBAAmB,GAAG,EAAE,CAAC;QACzB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,UAAK,GAAG,IAAI,CAAC;QAUb,uBAAkB,GAAG,KAAK,CAAC;QAgB3B,WAAM,GAAQ;YACnB,aAAa,EAAG,CAAC;YACjB,uBAAuB,EAAG,CAAC;YAC3B,mBAAmB,EAAG,CAAC;SACxB,CAAC;QAGK,YAAO,GAAQ;YACpB,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC;YACZ,cAAc,EAAE,EAAE;SACnB,CAAC;QAqFF,gGAAgG;QACxF,uBAAkB,GAAG,GAAG,EAAE;YAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAC/C,QAAQ,CAAC,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;gBAC/D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAEhE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE/B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;gBACnF,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAElC,CAAC,CACF,CAAC;QACJ,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,2DAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,2DAAS,CAAC,WAAW,CAAC;YACxG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC7C,QAAQ,CAAC,EAAE;gBACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;gBACxC,oBAAoB;gBAEpB,IAAI,CAAC,YAAY,GAAG,IAAI,2FAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAC;oBACjC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;iBAC/B;qBACI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;iBAC9B;qBACI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,EAAC;oBACvC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;iBAC/B;gBAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE5B,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC;gBACpF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE5B,CAAC,CACF,CAAC;QACJ,CAAC;QA1IC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,sEAAc,CAAC,gBAAgB,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,aAAa,CAAC,sBAAsB,CAAC,SAAS,CAC5C,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,GAAG,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;YAClF,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,GAAG,CAAC,cAAc,CAAC,aAAa,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,uBAAuB,GAAG,GAAG,CAAC,cAAc,CAAC,uBAAuB,CAAC;QACnF,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAC3E,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAED,mCAAmC;IACnC,qBAAqB;QACnB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5B,OAAO,CAAE,CAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAE,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;YAC9C,MAAM,cAAc,GAAQ,EAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC5D,cAAc,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1B,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAClF,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC9C;QACD,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,EAAE;IACF,UAAU,CAAC,SAAc;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAE,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;QAC/F,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QAEzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAE1C,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErD,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC;QACnC,wDAAwD;QACxD,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvD,4BAA4B;IAC9B,CAAC;IAED,UAAU,CAAC,SAAc;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAE,WAAW,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;IAC9C,CAAC;IAED,cAAc,CAAC,EAAO;QACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAE,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAClG,CAAC;IAkED,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,KAAO,EAAE,EAAE;YAC9E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,SAAS,CAAC,QAAQ,GAAG,KAAK;QACxB,IAAI,QAAQ,EAAC;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChD,CAAC;IAGD,EAAE;IACF,WAAW;QACT,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IACD,EAAE;IAEF,mBAAmB;IACnB,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAG7D,gCAAgC;QAChC,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACvC,CAAC;IAED,EAAE;IACF,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;IAC1C,CAAC;IAED,QAAQ,CAAC,OAAe,MAAM;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;;kFA3PU,iBAAiB;iGAAjB,iBAAiB;kEAKjB,iEAAkB;;;;;QC3B/B,yEAA0B;QACxB,6GAAuF;QACvF,4EAAiC;QAC/B,yGAAmI;QACnI,sEACF;QAAA,4DAAS;QACT,sEAAK;QACH,uIAAwE;QAC1E,4DAAM;QACN,yEAA0B;QACxB,yEAAuB;QACrB,yEAA2B;QACzB,qEAEM;QACN,0EAAsB;QACpB,2EAA4B;QAG1B,kHAuDM;QAIN,kHAuBM;QAIN,kHAeM;QAIN,kHAcM;QAIN,kHAeM;QAIN,2EAA6E;QAC3E,0EAAiB;QAAA,oEAAwC;QAAA,4DAAK;QAC9D,0EAAsB;QAAA,qFAAyB;QAAA,4DAAK;QAEpD,8EAA4E;QAArC,0IAAS,cAAU,IAAC;QAAkB,qEAAQ;QAAA,gIAAuH;QAAA,4DAAS;QAEvN,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;QACR,4DAAM;;QA9KiB,0DAAW;QAAX,uEAAW;QAE1B,0DAA4B;QAA5B,4FAA4B;QAIb,0DAAW;QAAX,uEAAW;QAYgE,0DAA4B;QAA5B,4FAA4B;QA2D9D,0DAAmC;QAAnC,mGAAmC;QA2BnC,0DAAoC;QAApC,oGAAoC;QAmBrC,0DAAmC;QAAnC,mGAAmC;QAkBlC,0DAAoC;QAApC,oGAAoC;QAmBrD,0DAAyC;QAAzC,iGAAyC;QAIyB,0DAAW;QAAX,uEAAW;;;;;;;;;;;;;;AClK5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;;;;;;;;;;;;;ICuB8D,6EAAsI;;ADbhR,MAAM,4BAA4B;IAQvC,YAAoB,WAAwB,EAAS,MAAc,EAAS,EAAe,EACvE,KAAmB,EAAS,KAAmB,EAAS,aAA6B;QADrF,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAa;QACvE,UAAK,GAAL,KAAK,CAAc;QAAS,UAAK,GAAL,KAAK,CAAc;QAAS,kBAAa,GAAb,aAAa,CAAgB;QAHzG,cAAS,GAAG,iBAAiB,CAAC;QAI5B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,UAAU;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC7C,EACD;YACE,SAAS,EAAE,kBAAkB,CAAC,aAAa,CAAC,yBAAyB;SACtE,CAAC,CAAC;IACP,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;IACnC,CAAC;IAID,cAAc;QACZ,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,SAAS,CACtE,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE;gBACvB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBACzC,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBAC5B,CAAC,EAAC,IAAI,CAAC;aAER;QACH,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC7C,CAAC,CACF;IACH,CAAC;;wGA1DU,4BAA4B;4GAA5B,4BAA4B;QCbzC,yEAAiB;QACf,yEAAiC;QAE/B,yEAAsB;QAEpB,yEAAoD;QAElD,0EAAiG;QAA3F,wJAAY,cAAU,IAAC;QAC3B,yEAA0B;QAExB,oFAA2C;QACzC,2EAAuC;QAAA,uEAAY;QAAA,4DAAQ;QAC3D,sEAAoI;QACtI,4DAAiB;QAEjB,qFAA2C;QACzC,4EAAwC;QAAA,wEAAY;QAAA,4DAAQ;QAC5D,wEAAsI;QACxI,4DAAiB;QAEjB,qFAA2C;QACzC,6EAAwC;QAAA,wEAAY;QAAA,4DAAQ;QAC5D,wEAAkJ;QACpJ,4DAAiB;QAEnB,4DAAM;QACN,8EAAsH;QAAC,6EAAgB;QAAA,2IAAsI;QAAA,4DAAS;QAExR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAzBgC,0DAAgC;QAAhC,6FAAgC;QAmBN,2DAA+D;QAA/D,gIAA+D;QAAgC,0DAA0B;QAA1B,0FAA0B;;ADiDlL,MAAM,kBAAkB;IAE7B,MAAM,CAAC,aAAa,CAAC,EAAmB;QACtC,MAAM,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,4BAA4B;QACvE,MAAM,eAAe,GAAG,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,4BAA4B;QACrF,IAAI,QAAQ,KAAO,eAAe,EAAE;YAClC,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC;SAC3D;aAAM;YACL,OAAO,IAAI;SACZ;IACH,CAAC;CACF;;;;;;;;;;;;;AEpFD;AAAA;AAAA;AAAA;AAAA;AAA0D;;;AAOnD,MAAM,qBAAqB;IAIhC,YAAmB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAD/C,iBAAY,GAAG,2DAAS,CAAC,aAAa,CAAC;QAErC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IAED,QAAQ;IACR,CAAC;;0FAVU,qBAAqB;qGAArB,qBAAqB;QCTlC,yEAAuB;QACrB,yEAA0B;QACxB,yEAAuB;QACrB,yEAA2B;QACzB,oEAEM;QACN,yEAAsB;QACpB,yEAA4B;QAC1B,yEAAkC;QAChC,qEAAI;QAAA,kEAA6B;QAAA,4DAAK;QACtC,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,qEAAG;QAAA,sFAA0B;QAAA,0EAAQ;QAAA,wEAAwC;QAAA,wDAAgB;QAAA,4DAAI;QAAA,4DAAS;QAAA,4DAAI;QAChH,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAPqF,2DAAgB;QAAhB,iFAAgB;;;;;;;;;;;;;;ACR3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;;;;;;;;;;;;;IC2D5C,sEAA4H;;IAAvE,wFAAoC;;;IACzF,sEAA6H;;IAAvE,wFAAoC;;;IAC1F,sEAA4H;;IAAvE,wFAAoC;;;IAE3F,yEAAuD;IAAA,2EAAgE;IAAA,4EAAiB;IAAA,4DAAO;IAAA,4DAAK;;IAAvF,0DAAoC;IAApC,wFAAoC;;;IACjG,yEAAuD;IAAA,2EAAgE;IAAA,mEAAQ;IAAA,4DAAO;IAAA,4DAAK;;IAA9E,0DAAoC;IAApC,wFAAoC;;;IAjBnG,wEAAgH;IAChH,qEAAgE;IAG9D,kFAAqF;IAErF,yEAAgB;IAAA,uDAAY;IAAA,4DAAK;IACjC,yEAAgB;IAAA,uDAA4B;IAAA,4DAAK;IACjD,yEAAgB;IAAA,uDAAuB;IAAA,4DAAK;IAC5C,yEAAgB;IAAA,wDAAiD;;;IAAA,4DAAK;IACtE,0EAAgB;IAAA,wDAEd;;;IAAA,mJAA4H;IAC5H,mJAA6H;IAC7H,mJAA4H;IAC9H,4DAAK;IACL,+IAAoJ;IACpJ,+IAA2I;IAE7I,4DAAK;IACL,4DAAQ;;;;IAnBJ,0DAA2D;IAA3D,mHAA2D;IAK7C,0DAAY;IAAZ,4EAAY;IACZ,0DAA4B;IAA5B,4FAA4B;IAC5B,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAiD;IAAjD,2NAAiD;IACjD,0DAEd;IAFc,wRAEd;IAAO,0DAA6B;IAA7B,4FAA6B;IAC7B,0DAA8B;IAA9B,6FAA8B;IAC9B,0DAA6B;IAA7B,4FAA6B;IAEjC,0DAA6B;IAA7B,4FAA6B;IAC7B,0DAA6B;IAA7B,4FAA6B;;;;IA9BtC,4EAAoF;IAClF,wEAAO;IACP,qEAAI;IAEF,gEAAS;IAET,yEAAgB;IAAA,4DAAC;IAAA,4DAAK;IACtB,yEAAgB;IAAA,2EAAgB;IAAA,4DAAK;IACrC,yEAAgB;IAAA,gEAAK;IAAA,4DAAK;IAC1B,0EAAgB;IAAA,4EAAgB;IAAA,4DAAK;IACrC,0EAAgB;IAAA,qEAAS;IAAA,4DAAK;IAChC,4DAAK;IACL,4DAAQ;IACR,8IAoBQ;;IACV,4DAAQ;;;IArBmB,2DAAwE;IAAxE,iPAAwE;;;IAsBnG,0EAA+I;IAC7I,2EAA0C;IAAA,+EAAoB;IAAA,4DAAO;IACvE,4DAAM;;;;IACN,0FAA+G;IAA1B,oXAAyB;IAAC,4DAAsB;;ADjEtI,MAAM,gCAAgC;IAyB3C,YAAmB,aAA4B,EAAS,KAAkB,EAAS,KAAmB;QAAnF,kBAAa,GAAb,aAAa,CAAe;QAAS,UAAK,GAAL,KAAK,CAAa;QAAS,UAAK,GAAL,KAAK,CAAc;QAtBtG,cAAS,GAAG,cAAc,CAAC;QAM3B,MAAC,GAAG,CAAC,CAAC;QAOE,sBAAiB,GAAG,EAAE,CAAC;QACvB,qBAAgB,GAAG,EAAE,CAAC;QAgD9B,2CAA2C;QAC3C,0BAAqB,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,2DAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;YACvE,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC/E,CAAC,QAAa,EAAE,EAAE;gBAChB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC5D,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;gBAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAErC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YACpC,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;gBACtF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAChC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YACpC,CAAC,CACF,CAAC;QACJ,CAAC;QAWD,aAAQ,GAAG,GAAG,EAAE;YACd,IAAK,IAAI,CAAC,KAAK,KAAO,OAAO,EAAE;gBAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;gBACtB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;QAlFC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,yBAAyB;QAC7C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,+BAA+B;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAE7B,CAAC;IAED,oCAAoC;IACpC,qBAAqB;QACnB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAI7B,wEAAwE;QACxE,qCAAqC;QACrC,KAAK;QAEL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1D,OAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAIrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;YACtD,MAAM,WAAW,GAAQ,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAC3C,WAAW,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACnC;IACH,CAAC;IA2BD,4BAA4B;IAC5B,mBAAmB;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;QACpD,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACtF,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAeD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;;gHAlHU,gCAAgC;gHAAhC,gCAAgC;QCX7C,yEAA+C;QAC7C,yEAAwC;QAEtC,yEAAgE;QAC9D,yEAAQ;QAAA,+EAAoB;QAAA,4DAAS;QAErC,yEAA4B;QAC1B,yEAA0B;QACxB,yEAAoC;QAClC,gFAA6E;QAAjE,wMAAmB,sGAAW,cAAU,IAArB;QAC7B,gFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,iFAA0B;QAAA,iEAAK;QAAA,4DAAa;QAC9C,4DAAa;QACf,4DAAM;QACN,0EAAqG;QACnG,6EAAsB;QAAA,kEAAM;QAAA,4DAAQ;QACpC,6EAAsG;QAAnF,uMAAsB;QAAzC,4DAAsG;QACtG,6EAAoB;QAAA,gEAAI;QAAA,4DAAQ;QAChC,6EAAiG;QAA9E,qMAAoB;QAAvC,4DAAiG;QACjG,6EAAwF;QAAjC,wJAAS,yBAAqB,IAAC;QAAtF,4DAAwF;QAC1F,4DAAM;QACR,4DAAM;QAEN,qEAOM;QAMR,4DAAM;QACN,2EAA+B;QAC7B,oIAkCQ;QACR,+HAEM;QACN,+JAAqI;QACvI,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAvEkB,0DAAmB;QAAnB,8EAAmB;QAKR,0DAAmD;QAAnD,6GAAmD;QAEvD,0DAAsB;QAAtB,iFAAsB;QAEtB,0DAAoB;QAApB,+EAAoB;QAoBI,0DAAmC;QAAnC,mGAAmC;QAmC5E,0DAA8D;QAA9D,kIAA8D;QAG9C,0DAAmC;QAAnC,mGAAmC","file":"home-pages-Dashboard-AgentDashboardPages-agent-module.js","sourcesContent":["import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {AnonymousService} from '../../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../../core/services/shared-service/shared.service';\r\nimport {UserService} from '../../../../../../core/services/users-service/user-service';\r\nimport {ErrorService} from '../../../../../../core/services/error_service/error.service';\r\nimport {StorageService} from '../../../../../../core/services/storage-service/storage.service';\r\nimport {ToastService} from '../../../../../../shared/services/toast-service/toast.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../../../../../shared/Constants';\r\nimport {FormBuilder, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\r\nimport {MobileNetworks} from '../../../../../../shared/mobile-networks';\r\nimport {TransactionsResponse} from '../../../../../../core/mocks/transactionsResponse.model';\r\n\r\n@Component({\r\n  selector: 'app-sell-airtime',\r\n  templateUrl: './sell-airtime.component.html',\r\n  styleUrls: ['./sell-airtime.component.scss']\r\n})\r\nexport class SellAirtimeComponent implements OnInit {\r\n\r\n\r\n  public airtimeForm: FormGroup;\r\n  public bulkForm: FormGroup;\r\n\r\n  mobnumPattern = '^((\\\\+91-?)|0)?[0-9]{7,14}$';\r\n  @ViewChild(FormGroupDirective) airtimeFormVC;\r\n\r\n  @ViewChild(FormGroupDirective) bulkFormVC;\r\n\r\n  @ViewChild('excel') inputEl: ElementRef;\r\n\r\n  public networksWithId = [];\r\n  public networksLogoPath: any = [];\r\n  public setId = null;\r\n  public switchState: string;\r\n  public networks: any;\r\n  public isloading: boolean;\r\n  public isLoadingNetworks: boolean;\r\n  public errorResponse: any;\r\n  public isRecharging: boolean;\r\n  public isCommissionWallet = false;\r\n  public rechargeResponse: any;\r\n  public requestSuccessful: boolean;\r\n\r\n  public selectedNetwork: string;\r\n  public amount: number;\r\n  public mobile: number;\r\n  public network: any;\r\n\r\n  public wallet: any = {\r\n    walletBalance : 0,\r\n    walletCommissionBalance : 0,\r\n    actualWalletBalance : 0\r\n  };\r\n\r\n  public rechargeObj: any = {\r\n    amount: 0,\r\n    fromWallet: '',\r\n    networkId: 0,\r\n    receiverMsisdn: '',\r\n    networkName: ''\r\n  };\r\n\r\n  constructor(public sharedService: SharedService, public anonymousService: AnonymousService, public router: Router,\r\n              public error: ErrorService, public fb: FormBuilder, public agent: UserService, public toast: ToastService,\r\n              public storage: StorageService) {\r\n\r\n    // this.sharedService.userWallet.subscribe(this.getWallet);\r\n    this.isLoadingNetworks = false;\r\n    this.switchState = 'recharge';\r\n\r\n    this.networks = [];\r\n    this.networksLogoPath = MobileNetworks.networksLogoPath;\r\n    this.isloading = false;\r\n    this.isRecharging = false;\r\n    this.requestSuccessful = false;\r\n    this.createForm();\r\n\r\n    sharedService.walletAccountsEmitted$.subscribe(\r\n      obj => {\r\n        console.log(obj);\r\n        // this.DashboardStatistics.walletBalance = obj.walletAccounts.walletBalance;\r\n        this.wallet.walletCommissionBalance = obj.walletAccounts.walletCommissionBalance;\r\n      });\r\n\r\n  }\r\n\r\n  createForm(): void {\r\n    this.airtimeForm = this.fb.group({\r\n      amount: ['', Validators.required],\r\n      mobile: ['', [Validators.required, Validators.pattern(this.mobnumPattern)]],\r\n      networkId: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  setNetwork(id: any): void{\r\n    const networkName = this.networksWithId.filter((network) =>  network.data.id === id)[0].data.networkName;\r\n    this.selectedNetwork = networkName;\r\n  //  console.log(networkName);\r\n  }\r\n\r\n  getNetworkName(id: any): void{\r\n    return this.networksWithId.filter((network) =>  network.data.id === id)[0].data.networkName;\r\n  }\r\n\r\n\r\n  checkNum(): void {\r\n    if (this.airtimeForm.value.mobile !== null && this.airtimeForm.value.mobile.length  !==  11) {\r\n      this.airtimeForm.controls.mobile.setErrors({numberValid: true});\r\n    }\r\n  }\r\n\r\n  resetForm(external = false): boolean{\r\n    if (external){\r\n      this.network = null;\r\n      this.mobile = null;\r\n      this.amount = null;\r\n      return false;\r\n    }\r\n    this.airtimeFormVC.resetForm();\r\n    this.airtimeFormVC.form.markAsPristine();\r\n    this.airtimeFormVC.form.markAsUntouched();\r\n    this.airtimeFormVC.form.updateValueAndValidity();\r\n  }\r\n\r\n\r\n  goToPage(page: string = 'recharge'): void{\r\n    this.switchState = page;\r\n  }\r\n\r\n  // ////////////////// get all networks info ////////////////////////////////////////////////////\r\n  getAllNetworks = () => {\r\n    this.isLoadingNetworks = true;\r\n    this.anonymousService.getNetworks().subscribe(\r\n      response => {\r\n        console.log('************ Networks list ****************');\r\n        console.log(response.data);\r\n        this.networks = response.data.filter((res) => res.isAirtimeActive);\r\n        this.isLoadingNetworks = false;\r\n        this.getNetworksWithId();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getAllNetworks, err);\r\n        this.isLoadingNetworks = false;\r\n        console.log(this.errorResponse);\r\n\r\n      }\r\n    );\r\n  }\r\n  //// Sort data ////////////////////\r\n  getNetworksWithId(): any {\r\n    this.networksWithId = [];\r\n\r\n    this.networks.sort((a, b) => {\r\n      return - ( a.id - b.id  ||  a.networkName.localeCompare(b.networkName) );\r\n    });\r\n\r\n    for (let i = 0; i < this.networks.length; i++ ) {\r\n      const sortedNetworks: any = {id: 0, logoPath: '', data: {}};\r\n      sortedNetworks.id = i + 1;\r\n      sortedNetworks.logoPath = this.networksLogoPath[this.networks[i].networkCodeName];\r\n      sortedNetworks.data = this.networks[i];\r\n      this.networksWithId.push(sortedNetworks);\r\n      this.isLoadingNetworks = false;\r\n    }\r\n    console.log('************ Networks with id ****************');\r\n    console.log(this.networksWithId);\r\n  }\r\n\r\n  // Submit recharge form\r\n  onSubmit(): void {\r\n    this.isloading = true;\r\n    this.rechargeObj.networkId = this.network;\r\n    this.rechargeObj.receiverMsisdn = this.mobile;\r\n    this.rechargeObj.amount = this.amount;\r\n    this.rechargeObj.networkName = this.getNetworkName(this.network);\r\n\r\n    this.switchState = 'recharge-verify';\r\n    console.log('recharge Request', this.airtimeFormVC.value);\r\n    console.log('recharge rechargeObj', this.rechargeObj);\r\n\r\n    // console.log(this._airtimeForm.value);\r\n    // console.log(this.selectedNetwork);\r\n    // this.createText = 'Creating Admin...';\r\n    // this.airtimeForm.disable();\r\n    // this.createUser();\r\n  }\r\n\r\n  // updateWallet = () => {\r\n  //   console.log('update wallet');\r\n  //   this.sharedService.getWalletAccounts((obj) => {});\r\n  // }\r\n\r\n  confirmRecharge = () => {\r\n    this.isRecharging = true;\r\n    this.rechargeObj.fromWallet = this.isCommissionWallet ? Constants.COMMISSION_WALLET : Constants.MAIN_WALLET;\r\n    console.log(this.rechargeObj);\r\n\r\n    this.agent.airtimeRecharge(this.rechargeObj).subscribe(\r\n      response => {\r\n        this.resetForm(true);\r\n        console.log(response);\r\n        console.log('response data');\r\n        this.sharedService.emitWalletAccounts();\r\n\r\n        this.rechargeResponse = new TransactionsResponse(response.data[0]);\r\n        console.log(this.rechargeResponse);\r\n        if (this.rechargeResponse.status === 1){\r\n          this.goToPage('recharge-success');\r\n        }\r\n        else if (this.rechargeResponse.status === 0){\r\n          console.log('failed');\r\n          this.goToPage('recharge-failed');\r\n        }\r\n        else if (this.rechargeResponse.status === -1){\r\n          this.goToPage('recharge-pending');\r\n        }\r\n\r\n        this.isRecharging = false;\r\n\r\n      },\r\n      err => {\r\n        console.log('error is here');\r\n        console.log(err);\r\n        const errorMessage = this.error.errorHandlerWithText(this.confirmRecharge, err).message;\r\n        this.toast.showError(errorMessage, 'Error');\r\n        this.isRecharging = false;\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onSubmitFIle = () => {\r\n    this.isloading = true;\r\n    const inputEl: HTMLInputElement = this.inputEl.nativeElement;\r\n\r\n    if (inputEl.files.item(0)  !==  null) {\r\n\r\n\r\n      const fileCount: any = inputEl.files.item(0);\r\n      // console.log('file', inputEl);\r\n      const formData = new FormData();\r\n\r\n      // console.log('started');\r\n\r\n      formData.append('rechargeFile', inputEl.files.item(0));\r\n      this.agent.bulkAirtimeRecharge(formData).subscribe(\r\n        response => {\r\n          this.requestSuccessful = true;\r\n          this.toast.showSuccess('you will be notified shortly', 'upload successful');\r\n         // console.log('success');\r\n         // const result = response.data[0];\r\n        //  console.log(result);\r\n\r\n          this.isloading = false;\r\n        },\r\n        error => {\r\n          this.isloading = false;\r\n        //  console.log(error);\r\n          const msg = this.error.errorHandlerWithText(this.onSubmitFIle, error);\r\n         // console.log(msg);\r\n          this.toast.showError(msg.message, 'Error');\r\n        }\r\n      );\r\n    } else {\r\n     // this.toast.showError('No file Selected', 'Error');\r\n      // this._bulkForm.resetForm();\r\n    }\r\n  }\r\n\r\n\r\n  newTransaction(): void{\r\n    this.router.navigate(['/agent/sell']);\r\n  }\r\n\r\n\r\n  toggleWallet(): void {\r\n    this.isCommissionWallet = !this.isCommissionWallet;\r\n  //  console.log(this.isCommissionWallet);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sharedService.emitWalletAccounts();\r\n\r\n    this.getAllNetworks();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"package-card\">\r\n  <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n  <header style=\"font-weight:700;\">\r\n    <a *ngIf=\"switchState !== 'recharge'\" (click)=\"goToPage('recharge')\" class=\"back-btn\"><i class=\"fa fa-arrow-left\"></i><span>back</span></a>\r\n    Sell Airtime\r\n  </header>\r\n\r\n  <mat-tab-group>\r\n    <mat-tab label=\"One-Time\">\r\n      <div class=\"content-area\">\r\n        <div class=\"container\">\r\n          <div class=\"row mt-5 mb-5\">\r\n            <div class=\"col-xl-2\">\r\n\r\n            </div>\r\n            <div class=\"col-xl-8\">\r\n              <div class=\"widget-content\">\r\n\r\n                <!--recharge block -->\r\n                <div class=\"widget-content-block recharge\"  [class.visible]=\"switchState === 'recharge'\" *ngIf=\"switchState === 'recharge'\">\r\n                  <form [formGroup]=\"airtimeForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n                    <div class=\"mb-5\">\r\n                      <span *ngIf=\"isLoadingNetworks\" style=\"color:#777;\"><i class=\"fa fa-spinner fa-spin\"></i> Loading Networks . . .</span>\r\n                      <mat-select *ngIf=\"!isLoadingNetworks\" placeholder=\"Select your network\" #selectNetwork required formControlName=\"networkId\" [(ngModel)]=\"network\" (change)=\"setNetwork(network)\"  style=\"width:100%;\">\r\n                        <mat-option [value]=\"network.data.id\"   *ngFor=\"let network of networksWithId\">\r\n                          <img width=\"20\" height=\"20\" [src]=\"network.logoPath\" />  {{network.data.networkName}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                      <div *ngIf=\"airtimeForm.get('networkId').invalid && (airtimeForm.get('networkId').dirty || airtimeForm.get('networkId').touched)\">\r\n                        <div class=\"errorText\" >\r\n                          Network is required\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <mat-form-field class=\"mb-5\">\r\n                      <label class=\"sr-only\" for=\"phone\">Mobile phone</label>\r\n                      <input matInput type=\"tel\" required id=\"phone\" (keyup)=\"checkNum()\" (blur)=\"checkNum()\" formControlName=\"mobile\" placeholder=\"Mobile Phone\" [(ngModel)]=\"mobile\">\r\n                      <div *ngIf=\"airtimeForm.get('mobile').invalid && (airtimeForm.get('mobile').dirty || airtimeForm.get('mobile').touched)\">\r\n                        <div *ngIf=\"airtimeForm.get('mobile').errors.required\" class=\"errorText\" >\r\n                          Phone number is required\r\n                        </div>\r\n\r\n                        <div *ngIf=\"airtimeForm.get('mobile').errors.pattern && !(airtimeForm.get('mobile').errors.required)\" class=\"errorText\" >\r\n                          Enter a valid phone number\r\n                        </div>\r\n\r\n                        <div *ngIf=\"airtimeForm.get('mobile').errors.numberValid\" class=\"errorText\" >\r\n                          Number length must be 11 digits\r\n                        </div>\r\n                      </div>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"mb-5\">\r\n                      <label class=\"sr-only\" for=\"amount\">Enter Amount</label>\r\n                      <input matInput type=\"number\" required [(ngModel)]=\"amount\" (keyup)=\"checkNum()\" (blur)='checkNum()' id=\"amount\" formControlName=\"amount\" placeholder=\"Enter Amount\" value=\"\">\r\n                      <div *ngIf=\"airtimeForm.get('amount').invalid && (airtimeForm.get('amount').dirty || airtimeForm.get('amount').touched)\">\r\n                        <div *ngIf=\"airtimeForm.get('amount').errors.required\" class=\"errorText\" >\r\n                          Amount is required\r\n                        </div>\r\n\r\n                        <div *ngIf=\"!(airtimeForm.get('amount').errors.required)\" class=\"errorText\">\r\n                          Enter a valid amount\r\n                        </div>\r\n                      </div>\r\n                    </mat-form-field>\r\n                    <a md-raised-button color=\"\" (click)=\"resetForm()\"> Reset </a>\r\n\r\n                    <button md-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!airtimeForm.valid\">Proceed</button>\r\n\r\n                  </form>\r\n                </div>\r\n                <!--recharge block-->\r\n\r\n                <!--recharge verify block-->\r\n                <div class=\"widget-content-block verify-recharge\"   [class.visible]=\"switchState === 'recharge-verify'\"  *ngIf=\"switchState === 'recharge-verify'\">\r\n                  <h4 style=\"margin:0;\">Confirm Recharge</h4>\r\n                  <p>Please confirm recharge details to proceed</p>\r\n                  <div class=\"inner-content-area\">\r\n                    <div class=\"block\"><span class=\"title\">Phone number</span> <span class=\"value\">{{rechargeObj.receiverMsisdn | checkNull}}</span></div>\r\n                    <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{rechargeObj.networkName | checkNull}}</span></div>\r\n                    <div class=\"block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{rechargeObj.amount | currency | moneyFormatter | checkNull}}</span></div>\r\n                  </div>\r\n\r\n                  <div class=\"inner-content-area-bottom\">\r\n                    <small>You have <strong [ngClass]=\"{'text-success': wallet.walletCommissionBalance >= amount, 'text-danger': wallet.walletCommissionBalance < amount}\">NGN {{wallet.walletCommissionBalance | currency | moneyFormatter}}</strong> in your commission wallet</small>\r\n                    <div class=\"toggle-btn\">\r\n                      <mat-slide-toggle [labelPosition]=\"'before'\" [checked]=\"isCommissionWallet\" (change)=\"toggleWallet()\" [disabled]=\"wallet.walletCommissionBalance < amount\" style=\"font-weight:700;\">Use commission wallet</mat-slide-toggle>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button md-raised-button type=\"button\" color=\"\" (click)=\"goToPage()\" [disabled]=\"isRecharging\"> Back </button>\r\n\r\n                  <button md-raised-button type=\"button\" (click)=\"confirmRecharge()\" [disabled]=\"isRecharging\"  color=\"accent\">{{!isRecharging?'Confirm':'Please wait'}}\r\n                    <i *ngIf=\"isRecharging\" class=\"fa fa-spinner fa-spin\"></i>\r\n                  </button>\r\n\r\n                </div>\r\n                <!--recharge verify block-->\r\n\r\n                <!--recharge successful block-->\r\n                <div class=\"widget-content-block success-recharge\" *ngIf=\"switchState === 'recharge-success'\"  [class.visible]=\"switchState === 'recharge-success'\">\r\n                  <h1 class=\"icon\"><i class=\"fa fa-check-circle fa-2x\"></i></h1>\r\n                  <h5 style=\"margin:0;\">Recharge Successful</h5>\r\n\r\n                  <div class=\"inner-content-area\">\r\n                    <div class=\"block\"><span class=\"title\">MSISDN</span> <span class=\"value\">{{rechargeResponse?.toMsisdn}}</span></div>\r\n                    <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{getNetworkName(rechargeResponse.network)}}</span></div>\r\n                    <div class=\"block\"><span class=\"title\">Transaction ID</span> <span class=\"value\">{{rechargeResponse?.transactionId}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Date / Time</span> <span class=\"value\">{{rechargeResponse?.createdDate | date}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{rechargeResponse?.amount | currency | moneyFormatter}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Commission</span> <span class=\"value\">NGN {{rechargeResponse?.commission | currency | moneyFormatter}}</span></div>\r\n                  </div>\r\n\r\n                  <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New recharge<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n                </div>\r\n                <!--recharge successful block-->\r\n\r\n                <!--recharge failed block-->\r\n                <div class=\"widget-content-block failed-recharge\" *ngIf=\"switchState === 'recharge-failed'\"  [class.visible]=\"switchState === 'recharge-failed'\">\r\n                  <h1 class=\"icon\"><i class=\"fa fa-times-circle fa-2x\"></i></h1>\r\n                  <h5 style=\"margin:0;\">Recharge Failed</h5>\r\n\r\n                  <div class=\"inner-content-area\">\r\n                    <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{getNetworkName(rechargeResponse.network)}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Transaction ID</span> <span class=\"value\">{{rechargeResponse?.transactionId}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Date / Time</span><span class=\"value\">{{rechargeResponse?.createdDate| date}}, {{rechargeResponse.createdDate | date : 'shortTime'}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{rechargeResponse?.amount | currency | moneyFormatter}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Commission</span> <span class=\"value\">NGN {{rechargeResponse?.commission | currency | moneyFormatter}}</span></div>\r\n                  </div>\r\n\r\n                  <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New recharge<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n                </div>\r\n                <!--recharge failed block-->\r\n\r\n                <!--recharge pending block-->\r\n                <div class=\"widget-content-block pending-recharge\" *ngIf=\"switchState === 'recharge-pending'\"  [class.visible]=\"switchState === 'recharge-pending'\">\r\n                  <h1 class=\"icon\"><i class=\"fa fa-hourglass-half fa-2x\"></i></h1>\r\n                  <h5 style=\"margin:0;\">Recharge Pending</h5>\r\n                  <p> Kindly contact the administrator</p>\r\n\r\n                  <div class=\"inner-content-area\">\r\n                    <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{getNetworkName(rechargeResponse.network)}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Transaction ID</span> <span class=\"value\">{{rechargeResponse.transactionId}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Date / Time</span><span class=\"value\">{{rechargeResponse.createdDate| date}}, {{rechargeResponse.createdDate | date : 'shortTime'}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{rechargeResponse.amount | currency | moneyFormatter}}</span></div>\r\n                    <div class=\"inline-block\"><span class=\"title\">Commission</span> <span class=\"value\">NGN {{rechargeResponse.commission | currency | moneyFormatter}}</span></div>\r\n                  </div>\r\n\r\n                  <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New recharge<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n                </div>\r\n                <!--recharge pending block-->\r\n\r\n                <!--failed block-->\r\n                <div class=\"widget-content-block\"  [class.visible]=\"switchState === 'error'\">\r\n                  <h1 class=\"icon\"><i class=\"fa fa-times-circle fa-2x\"></i></h1>\r\n                  <h5 style=\"margin:0;\">OOPs something went wrong</h5>\r\n\r\n                  <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New recharge<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n                </div>\r\n                <!--failed block-->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Bulk Recharge\">\r\n      <div class=\"content-area\">\r\n        <div class=\"container\">\r\n          <div class=\"row mt-5 mb-5\">\r\n            <div class=\"col-xl-2\">\r\n\r\n            </div>\r\n            <div class=\"col-xl-8\">\r\n              <div class=\"widget-content\">\r\n\r\n                <!--recharge block -->\r\n                <div *ngIf=\"!requestSuccessful\">\r\n                    <form #bulkForm (ngSubmit)=\"onSubmitFIle()\" class=\"card\" id=\"file\" method=\"post\" enctype=\"multipart/form-data\">\r\n                      <div class=\"md-container\">\r\n                        <h5>Upload Excel  <a download href=\"assets/sample_bulk_airtime_recharge.xlsx\" style=\"font-size: 14px;\"> [ Download Sample Excel ] </a></h5>\r\n                        <div class=\"divider\"></div>\r\n                        <div class=\"form-inline\">\r\n                          <label class=\"sr-only\" for=\"excel\">Upload Excel File</label>\r\n\r\n                          <input accept=\".csv\" type=\"file\" id=\"excel\" required (ngModel)=\"excel\" [disabled]=\"isloading\" [ngModelOptions]=\"{standalone: true}\" #excel value=\"\">\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                      <button [disabled]=\"isloading\" md-raised-button class=\"mt-4\" type=\"submit\" color=\"accent\">Pay <i *ngIf=\"isloading\" style=\"color:#fff; font-size:15px;\" class=\"fa fa-spinner fa-spin\"></i></button>\r\n                    </form>\r\n                </div>\r\n                <!--recharge block-->\r\n\r\n                <!--failed block-->\r\n                <div *ngIf=\"requestSuccessful\">\r\n                    <div class=\"success_container\">\r\n                      <img src=\"assets/img/success-spark.png\" alt=\"success\" />\r\n                      <h5>Request was sent Successfully</h5>\r\n                      <p>You would recieve a mail shortly with a detailed report of your requested transactions</p>\r\n                      <button [disabled]=\"\" (click)=\"newTransaction()\" md-raised-button >New Transaction</button>\r\n                    </div>\r\n                </div>\r\n                <!--failed block-->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {AnonymousService} from '../../../../../core/services/anonymous-service';\r\nimport {Router} from '@angular/router';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\nimport {ToastService} from '../../../../../shared/services/toast-service/toast.service';\r\nimport {StorageService} from '../../../../../core/services/storage-service/storage.service';\r\nimport {UserTransactionStatistics} from '../../../../../core/mocks/userTransactionStatistics.model';\r\nimport {Constants} from '../../../../../shared/Constants';\r\nimport {User} from '../../../../../core/mocks/user/user.model';\r\nimport {UserService} from '../../../../../core/services/users-service/user-service';\r\n\r\n@Component({\r\n  selector: 'app-agent-dashboard',\r\n  templateUrl: './agent-dashboard.component.html',\r\n  styleUrls: ['./agent-dashboard.component.scss']\r\n})\r\n\r\nexport class AgentDashboardComponent implements OnInit {\r\n  public pageTitle: string;\r\n  public roles: any;\r\n  public agentDetails: any;\r\n\r\n  public airtimeTransactions: any;\r\n  public isTransactionsLoaded: boolean;\r\n  public transactionsWithId: any;\r\n\r\n  public DashboardStatistics: {\r\n    walletBalance: number,\r\n    walletCommissionBalance?: number,\r\n    totalTransactions: number,\r\n    totalAirtimeTransactions: number,\r\n    successfulAirtimeTransactions: number,\r\n    failedAirtimeTransactions: number,\r\n    pendingAirtimeTransactions: number,\r\n    failedTransactions: number,\r\n    pendingTransactions: number,\r\n    successfulTransactions: number,\r\n  };\r\n  private errorResponse: any;\r\n\r\n  constructor(public sharedService: SharedService, public anonymousService: AnonymousService, public router: Router,\r\n              public userService: UserService, public error: ErrorService, public toast: ToastService, public storage: StorageService) {\r\n\r\n    this.pageTitle = 'Dashboard';\r\n    this.sharedService.emitChange(this.pageTitle);\r\n    this.isTransactionsLoaded = true;\r\n    this.transactionsWithId = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.DashboardStatistics = {\r\n      walletBalance: 0,\r\n      walletCommissionBalance: 0,\r\n      totalTransactions: 0,\r\n      totalAirtimeTransactions: 0,\r\n      successfulAirtimeTransactions: 0,\r\n      failedAirtimeTransactions: 0,\r\n      pendingAirtimeTransactions: 0,\r\n      failedTransactions: 0,\r\n      pendingTransactions: 0,\r\n      successfulTransactions: 0,\r\n    };\r\n    this.getAgentDetails();\r\n    this.getRecentTransactions();\r\n  }\r\n\r\n\r\n  editRole(id): void {\r\n    this.router.navigate(['admin/edit-role/', id]);\r\n  }\r\n\r\n  getAgentDetails = () => {\r\n    const agentId = JSON.parse(localStorage.getItem(Constants.PROFILE)).id;\r\n\r\n    // if(JSON.parse(localStorage.getItem(Constants.PROFILE))  !==  null){\r\n    //   return new Agent(JSON.parse(localStorage.getItem(Constants.PROFILE)).data[0]);\r\n    // }\r\n\r\n    // console.log('agentObj', this.storage.getProfile());\r\n\r\n    this.anonymousService.getUser(agentId).subscribe(\r\n      data => {\r\n        this.getUserDashboardStatistics(agentId);\r\n        this.agentDetails = new User(data);\r\n        // console.log('agentDetails', this.agentDetails);\r\n        this.DashboardStatistics.walletBalance = this.agentDetails.walletBalance;\r\n        this.DashboardStatistics.walletCommissionBalance = this.agentDetails.walletCommissionBalance;\r\n      });\r\n  };\r\n\r\n  getUserDashboardStatistics(id: number): void {\r\n    this.anonymousService.getUserTransactionsStatistics(id).subscribe(\r\n      data => {\r\n        const stats = data.data[0];\r\n        const userStatistics = new UserTransactionStatistics(stats);\r\n        console.log(userStatistics);\r\n        const {\r\n          transactionCount,\r\n          walletTrans, successfulTran,\r\n          pendingTrans, failedTrans, airtimeTrans,\r\n          successfulAirtimeTrans, failedAirtimeTrans, pendingAirtimeTrans\r\n        } = userStatistics;\r\n        this.DashboardStatistics = {\r\n          totalTransactions: transactionCount,\r\n          walletBalance: walletTrans,\r\n          successfulTransactions: successfulTran,\r\n          pendingTransactions: pendingTrans,\r\n          failedTransactions: failedTrans,\r\n          totalAirtimeTransactions: airtimeTrans,\r\n          successfulAirtimeTransactions: successfulAirtimeTrans,\r\n          failedAirtimeTransactions: failedAirtimeTrans,\r\n          pendingAirtimeTransactions: pendingAirtimeTrans,\r\n        };\r\n\r\n        console.log('stats', this.DashboardStatistics);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        const msg = this.error.errorHandlerWithText(this.getUserDashboardStatistics, err);\r\n        this.toast.showError(msg.message, 'Error');\r\n        console.log(msg);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // get all airtime transactions or by range\r\n  getRecentTransactions = () => {\r\n    this.airtimeTransactions = [];\r\n    this.isTransactionsLoaded = true;\r\n\r\n    const userId = JSON.parse(localStorage.getItem(Constants.PROFILE)).id;\r\n\r\n    this.userService.getRecentTransactions(userId, 0, 30).subscribe(\r\n      response => {\r\n        const transactionData = response.data[0].content.reverse();\r\n        console.log('###', response);\r\n        // this.airtimeTransactions = this.airtimeTransactions.filter( tranx => tranx.transactionType === Constants.AIRTIME_TRANSACTION);\r\n\r\n        this.airtimeTransactions = transactionData.splice(0, 20);\r\n        console.log('***** Filtered  Transactions ****');\r\n        console.log(this.airtimeTransactions);\r\n        this.getTransactionsWithId();\r\n        console.log('***** Airtime with id ****');\r\n        console.log(this.transactionsWithId);\r\n        this.isTransactionsLoaded = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getRecentTransactions, err);\r\n        console.log(this.errorResponse);\r\n        this.isTransactionsLoaded = false;\r\n\r\n      }\r\n    );\r\n  };\r\n\r\n  formatTranxType = (type) => {\r\n    return type.split('_').join(' ');\r\n  };\r\n\r\n\r\n  // Re-Sort data ////////////////////\r\n  getTransactionsWithId(): void {\r\n    this.transactionsWithId = [];\r\n    for (let i = 0; i < this.airtimeTransactions.length; i++) {\r\n      const sortedTranx: any = {id: 0, data: {}};\r\n      sortedTranx.id = i + 1;\r\n      sortedTranx.data = this.airtimeTransactions[i];\r\n      this.transactionsWithId.push(sortedTranx);\r\n      this.isTransactionsLoaded = false;\r\n    }\r\n    console.log('************ trax with id ****************');\r\n    console.log(this.transactionsWithId);\r\n  }\r\n\r\n\r\n}\r\n"," <div class=\"container\">\r\n   <div class=\"row\">\r\n\r\n     <div class=\"col-md-6 col-xl-3\">\r\n       <div class=\"card-wrap danger-card info-card custom-card\">\r\n         <div class=\"card-content\">\r\n           <span class=\"icon\" style=\"background-color: #469408;\"><i class=\"fa fa-money\"></i></span>\r\n           <div class=\"content-block-single\">\r\n             <div class=\"title text-uppercase\" style=\"color:#469408\">Main Account</div>\r\n             <div class=\"count\"> {{DashboardStatistics?.walletBalance | currency : 'NGN' : 'symbol-narrow' | moneyFormatter }}</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n\r\n     <div class=\"col-md-6 col-xl-3\">\r\n       <div class=\"card-wrap danger-card info-card custom-card\">\r\n         <div class=\"card-content\">\r\n           <span class=\"icon\" style=\"background-color: #469408;\"><i class=\"fa fa-money\"></i></span>\r\n           <div class=\"content-block-single\">\r\n             <div class=\"title text-uppercase\"  style=\"color:#469408\">Commission Account</div>\r\n             <div class=\"count\">{{DashboardStatistics?.walletCommissionBalance | currency : 'NGN' : 'symbol-narrow' | moneyFormatter }}</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n\r\n     <div class=\"col-md-6 col-xl-6\">\r\n       <div class=\"card-wrap danger-card info-card custom-card\">\r\n         <div class=\"card-content card-content-multi\">\r\n           <span class=\"icon\" style=\"background-color: #03aced;\"><i class=\"fa fa-exchange\"></i></span>\r\n           <div class=\"content-block-multi\" style=\"flex:2 \">\r\n             <div class=\"title text-uppercase\"  style=\"color:#03aced\">Total Transactions</div>\r\n             <div class=\"count\">{{DashboardStatistics?.totalTransactions }}</div>\r\n           </div>\r\n           <div class=\"content-block-multi\">\r\n             <div class=\"title text-uppercase\">Successful</div>\r\n             <div class=\"count\">{{DashboardStatistics?.successfulTransactions }}</div>\r\n           </div>\r\n           <div class=\"content-block-multi\">\r\n             <div class=\"title text-uppercase\">Failed</div>\r\n             <div class=\"count\">{{DashboardStatistics?.failedTransactions}}</div>\r\n           </div>\r\n           <div class=\"content-block-multi\">\r\n             <div class=\"title text-uppercase\">Pending</div>\r\n             <div class=\"count\">{{DashboardStatistics?.pendingTransactions }}</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   </div>\r\n\r\n\r\n   <div class=\"row\" style=\"margin:20px 5px 10px;\">\r\n     <div class=\"col-lg-12 filter-container\">\r\n\r\n       <div class=\"custom-card\" style=\"margin:0; padding-bottom:20px;min-height: 400px;\">\r\n         <header>\r\n           Most Recent Transactions\r\n<!--           <a class=\"download-btn\" *ngIf=\"false\" (click)=\"downloadDialog()\"><span class=\"fa fa-download\"></span> Download CSV</a>-->\r\n         </header>\r\n         <div>\r\n           <mat-progress-bar *ngIf=\"isTransactionsLoaded\" mode=\"indeterminate\"></mat-progress-bar>\r\n           <table class=\"table table-dark mobile-table\"  *ngIf=\"transactionsWithId.length > 0\">\r\n             <thead>\r\n             <tr>\r\n               <!--make table stable-->\r\n               <th></th>\r\n               <!---->\r\n               <th scope=\"col\">#</th>\r\n               <th scope=\"col\">Transaction Type</th>\r\n               <!--<th scope=\"col\">Full Name</th>-->\r\n               <th scope=\"col\">Email</th>\r\n               <th scope=\"col\">Channel</th>\r\n               <th scope=\"col\">Network</th>\r\n               <th scope=\"col\">Phone</th>\r\n               <th scope=\"col\">Amount</th>\r\n               <th scope=\"col\">Date / Time</th>\r\n             </tr>\r\n             </thead>\r\n             <tbody *ngFor=\"let tranx of transactionsWithId; let i = index;\">\r\n             <tr [style.backgroundColor] = \"i %2 === 0 ? '#ecf0f5' : 'white'\">\r\n<!--               <mat-progress-bar *ngIf=\"isloading && tranx.data.id === setId\" mode=\"indeterminate\" style=\"position: absolute; width: 95%; margin-top: 45px; margin-bottom: 0\"></mat-progress-bar>-->\r\n               <!--make table stable-->\r\n               <mat-progress-bar mode=\"indeterminate\" style=\"visibility: hidden\"></mat-progress-bar>\r\n\r\n               <td scope=\"row\">{{tranx.id}}</td>\r\n               <td scope=\"row\">{{formatTranxType(tranx.data.transactionType)}}</td>\r\n               <!--<td class=\"link\">{{tranx.data.firstName}} {{tranx.data.lastName}} </td>-->\r\n               <td scope=\"row\">{{tranx.data.email}}</td>\r\n               <td scope=\"row\">{{tranx.data.channel}}</td>\r\n               <td scope=\"row\">{{tranx.data.networkName}}</td>\r\n               <td scope=\"row\">{{tranx.data.toMsisdn}}</td>\r\n               <td scope=\"row\">{{tranx.data.amount | currency | moneyFormatter}}</td>\r\n               <td class=\"more\" style=\"position: relative;\">\r\n                 {{tranx.data.createdDate | date}}, {{tranx.data.createdDate | date : 'shortTime'}}\r\n                 <span *ngIf=\"tranx.data.status === 0\"  [style.background-color]=\"'#d9534f'\" class=\"status desktopOnly\"></span> <!--failed-->\r\n                 <span *ngIf=\"tranx.data.status === -1\" [style.background-color]=\"'#dfac2d'\" class=\"status desktopOnly\"></span><!--pending-->\r\n                 <span *ngIf=\"tranx.data.status === 1\" [style.background-color]=\"'#5cb85c'\" class=\"status desktopOnly\"></span> <!--successful-->\r\n               </td>\r\n               <td *ngIf=\"tranx.data.status === 0\" class=\"mobileOnly\"><span [style.background-color]=\"'#d9534f'\" class=\"status-badge\">Failed</span></td>\r\n               <td *ngIf=\"tranx.data.status === -1\" class=\"mobileOnly\"><span [style.background-color]=\"'#dfac2d'\" class=\"status-badge\">Pending</span></td>\r\n               <td *ngIf=\"tranx.data.status === 1\" class=\"mobileOnly\"><span [style.background-color]=\"'#5cb85c'\" class=\"status-badge\">Success</span></td>\r\n\r\n               <!--<td class=\"more\"><div class=\"btn btn-link\" (click)=\"getAgentData(agent.data)\" [mat-menu-trigger-for]=\"action\"><i class=\"fa fa-ellipsis-v\"></i></div>-->\r\n               <!--<span *ngIf=\"tranx.data.status === 0\" class=\"status\" [style.background-color]=\"'#d9534f'\" class=\"status\"></span> &lt;!&ndash;failed&ndash;&gt;-->\r\n               <!--<span *ngIf=\"tranx.data.status === -1\" class=\"status\" [style.background-color]=\"'#dfac2d'\" class=\"status\"></span>&lt;!&ndash;pending&ndash;&gt;-->\r\n               <!--<span *ngIf=\"tranx.data.status === 1\" class=\"status\" [style.background-color]=\"'#5cb85c'\" class=\"status\"></span> &lt;!&ndash;successful&ndash;&gt;-->\r\n               <!--</td>-->\r\n             </tr>\r\n             </tbody>\r\n           </table>\r\n           <div *ngIf=\"transactionsWithId.length < 1 && !isTransactionsLoaded\"  style=\"text-align:center; border-top:1px solid #ccc; padding:20px 0px;\">\r\n             <span style=\"color:#ccc; font-size:2rem;\">No Transactions Data</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   </div>\r\n\r\n\r\n   <div class=\"row\" *ngIf=\"false\">\r\n     <div class=\"col-xl-12\">\r\n       <div class=\"transaction-card\">\r\n         <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n         <header style=\"font-weight:700;\">Recent Airtime Transactions</header>\r\n         <div>\r\n           <mat-progress-bar *ngIf=\"false\" mode=\"indeterminate\"></mat-progress-bar>\r\n           <table class=\"table table-dark\"  *ngIf=\"true\">\r\n             <thead>\r\n             <tr>\r\n               <th scope=\"col\">Transaction Ref</th>\r\n               <th scope=\"col\">Type</th>\r\n               <th scope=\"col\">Phone number</th>\r\n               <th scope=\"col\">Network</th>\r\n               <th scope=\"col\">Amount (₦)</th>\r\n               <th scope=\"col\">Date / Time</th>\r\n               <th scope=\"col\">Action</th>\r\n             </tr>\r\n             </thead>\r\n             <tbody>\r\n             <tr>\r\n               <td class=\"link\"> gdgdfg</td>\r\n               <td class=\"link\"> fsdfs</td>\r\n               <td class=\"link\"> sdfas</td>\r\n               <td class=\"link\"> dfsdsd </td>\r\n               <td class=\"link\"> dffsffs</td>\r\n               <td class=\"link\"> dfsdsd </td>\r\n               <td class=\"link\"> <button class=\"btn-outline-danger btn btn-sm\">Repeat <i class=\"fa fa-spinner fa-spin\" style=\"color:#ff6265\"></i></button></td>\r\n             </tr>\r\n             </tbody>\r\n           </table>\r\n           <div *ngIf=\"false\"  style=\"text-align:center; border-top:1px solid #ccc; padding:20px 0px;\">\r\n             <span style=\"color:#ccc; font-size:2rem;\">No Transactions Data</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   </div>\r\n </div>\r\n\r\n\r\n\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {AgentRoutingModule} from './agent-routing.module';\n\nimport {AgentWalletComponent} from './agent-wallet/agent-wallet.component';\nimport {AgentSellComponent} from './agent-sell/agent-sell.component';\nimport {AgentDashboardComponent} from './agent-dashboard/agent-dashboard.component';\nimport {SellDataComponent} from './agent-sell/sell-data/sell-data.component';\nimport {SellAirtimeComponent} from './agent-sell/sell-airtime/sell-airtime.component';\nimport {AgentProfileComponent} from './agent-profile/agent-profile.component';\nimport {AgentNewFundRequestComponent} from './agent-new-fund-request/agent-new-fund-request.component';\nimport {AgentSupportComponent} from './agent-support/agent-support.component';\nimport {\n  AgentAccountComponent,\n  AgentDialogComponent\n} from '../AdminDashboardPages/User management/user-page/agent-account/agent-account.component';\nimport {\n  AgentReportDialogComponent,\n  AgentTransactionHistoryComponent\n} from './agent-transaction-history/agent-transaction-history.component';\nimport {PermissionsComponent} from '../AdminDashboardPages/User management/user-page/permissions/permissions.component';\nimport {AgentFundRequestHistoryComponent} from './agent-fund-request-history/agent-fund-request-history.component';\nimport {AgentChangePasswordComponent} from './agent-change-password/agent-change-password.component';\nimport {\n  AgentWalletReportDialogComponent,\n  AgentWalletTransactionHistoryComponent\n} from './agent-wallet-transaction-history/agent-wallet-transaction-history.component';\nimport {FundAgentsComponent} from '../AdminDashboardPages/funding/fund-agents/fund-agents.component';\nimport {SharedModule} from '../../../../core/shared/modules/shared.module';\nimport {UserProfileComponent} from '../AdminDashboardPages/User management/user-page/user-profile.component';\nimport {ServiceManagerService} from '../AdminDashboardPages/service-management/views/service-manager.service';\nimport {UserSharedModule} from '../user-shared/user-shared.module';\n\n\n@NgModule({\n  declarations: [\n    AgentDashboardComponent,\n    AgentSellComponent,\n    SellAirtimeComponent,\n    SellDataComponent,\n    AgentProfileComponent,\n    AgentNewFundRequestComponent,\n    AgentWalletComponent,\n    AgentSupportComponent,\n    AgentTransactionHistoryComponent,\n    FundAgentsComponent,\n    AgentAccountComponent,\n    PermissionsComponent,\n    AgentWalletTransactionHistoryComponent,\n    AgentFundRequestHistoryComponent,\n    AgentWalletReportDialogComponent,\n    AgentChangePasswordComponent,\n    AgentDialogComponent,\n    AgentReportDialogComponent,\n    UserProfileComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    UserSharedModule,\n    AgentRoutingModule\n  ]\n})\nexport class AgentModule {\n}\n","<div class=\"row\">\r\n  <div class=\"col-md-6 col-xl-12\">\r\n\r\n    <!--wallet counter section-->\r\n    <section class=\"counter-card\">\r\n      <div class=\"block\">\r\n        <h4>Main Account</h4>\r\n        <h2 *ngIf=\"DashboardStatistics.walletBalance !== null\">{{DashboardStatistics.walletBalance | currency : 'NGN' : 'symbol-narrow' | moneyFormatter}} </h2>\r\n        <h2 *ngIf=\"DashboardStatistics.walletBalance === null\"><i class=\"fa fa-spin fa-spinner\"></i> </h2>\r\n      </div>\r\n      <div class=\"block\" style=\"border-left:1px solid #ededed\">\r\n        <h4>Commission Account</h4>\r\n        <h2 *ngIf=\"DashboardStatistics.walletCommissionBalance !== null\">{{DashboardStatistics.walletCommissionBalance | currency : 'NGN' : 'symbol-narrow' | moneyFormatter}} </h2>\r\n        <h2 *ngIf=\"DashboardStatistics.walletCommissionBalance === null\"><i class=\"fa fa-spin fa-spinner\"></i> </h2>\r\n      </div>\r\n    </section>\r\n\r\n    <div style=\"margin-top:20px;\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n\r\n    <div class=\"transaction-card\" *ngIf=\"false\">\r\n      <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n      <header style=\"font-weight:700;\">Most Recent Transactions</header>\r\n      <div>\r\n        <mat-progress-bar *ngIf=\"false\" mode=\"indeterminate\"></mat-progress-bar>\r\n        <table class=\"table table-dark\"  *ngIf=\"true\">\r\n          <thead>\r\n          <tr>\r\n            <th scope=\"col\">Transaction Ref</th>\r\n            <th scope=\"col\">Type</th>\r\n            <th scope=\"col\">Phone number</th>\r\n            <th scope=\"col\">Network</th>\r\n            <th scope=\"col\">Amount (₦)</th>\r\n            <th scope=\"col\">Date / Time</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <td class=\"link\"> gdgdfg</td>\r\n            <td class=\"link\"> fsdfs</td>\r\n            <td class=\"link\"> sdfas</td>\r\n            <td class=\"link\"> dfsdsd </td>\r\n            <td class=\"link\"> dffsffs</td>\r\n            <td class=\"link\"> dfsdsd </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <div *ngIf=\"false\"  style=\"text-align:center; border-top:1px solid #ccc; padding:20px 0px;\">\r\n          <span style=\"color:#ccc; font-size:2rem;\">No Transactions Data</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AnonymousService} from '../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\nimport {UserService} from '../../../../../core/services/users-service/user-service';\r\nimport {StorageService} from '../../../../../core/services/storage-service/storage.service';\r\nimport {ToastService} from '../../../../../shared/services/toast-service/toast.service';\r\nimport {Router} from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport {Agent} from '../../../../../core/mocks/agent/agent.model';\r\nimport {Constants} from '../../../../../shared/Constants';\r\nimport {User} from '../../../../../core/mocks/user/user.model';\r\n\r\n@Component({\r\n  selector: 'app-agent-sell',\r\n  templateUrl: './agent-sell.component.html',\r\n  styleUrls: ['./agent-sell.component.scss']\r\n})\r\nexport class AgentSellComponent implements OnInit {\r\n\r\n   pageTitle: string;\r\n  public walletAccounts: any;\r\n  public DashboardStatistics: any = {\r\n    walletBalance : null,\r\n    walletCommissionBalance : null,\r\n    actualWalletBalance : null\r\n  };\r\n  subscription: Subscription;\r\n\r\n  constructor(public sharedService: SharedService, public anonymousService: AnonymousService,\r\n              public agent: UserService, public router: Router,\r\n              public error: ErrorService, public toast: ToastService, public storage: StorageService) {\r\n\r\n    this.pageTitle = 'Sell';\r\n    this.sharedService.emitChange(this.pageTitle);\r\n    // console.log('**** before subscribing ****');\r\n\r\n    sharedService.walletAccountsEmitted$.subscribe(\r\n      obj => {\r\n        // console.log(obj);\r\n        this.DashboardStatistics.walletBalance = obj.walletAccounts.walletBalance;\r\n        this.DashboardStatistics.walletCommissionBalance = obj.walletAccounts.walletCommissionBalance;\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.sharedService.emitWalletAccounts();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AgentDashboardComponent} from './agent-dashboard/agent-dashboard.component';\nimport {AgentSellComponent} from './agent-sell/agent-sell.component';\nimport {SelectPackageComponent} from '../user-shared/select-package/select-package.component';\nimport {SellAirtimeComponent} from './agent-sell/sell-airtime/sell-airtime.component';\nimport {SellDataComponent} from './agent-sell/sell-data/sell-data.component';\nimport {AgentProfileComponent} from './agent-profile/agent-profile.component';\nimport {AgentWalletComponent} from './agent-wallet/agent-wallet.component';\nimport {CreateUserComponent} from '../AdminDashboardPages/User management/create-user/create-user.component';\nimport {ManageUsersComponent} from '../AdminDashboardPages/User management/manage-agents/manage-users.component';\nimport {PaymentStatusComponent} from '../../../common-components/payment-status/payment-status.component';\nimport {AgentNewFundRequestComponent} from './agent-new-fund-request/agent-new-fund-request.component';\nimport {AgentSupportComponent} from './agent-support/agent-support.component';\nimport {AgentTransactionHistoryComponent} from './agent-transaction-history/agent-transaction-history.component';\nimport {UserProfileComponent} from '../AdminDashboardPages/User management/user-page/user-profile.component';\nimport {AgentAccountComponent} from '../AdminDashboardPages/User management/user-page/agent-account/agent-account.component';\nimport {UserAgentsComponent} from '../AdminDashboardPages/User management/user-page/user-agents/user-agents.component';\nimport {PermissionsComponent} from '../AdminDashboardPages/User management/user-page/permissions/permissions.component';\nimport {AgentFundRequestHistoryComponent} from './agent-fund-request-history/agent-fund-request-history.component';\nimport {AgentChangePasswordComponent} from './agent-change-password/agent-change-password.component';\nimport {PerformServiceComponent} from '../user-shared/perform-service/perform-service.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/agent/dashboard',\n    pathMatch: 'full'\n  },\n  {path: 'dashboard', component: AgentDashboardComponent},\n  {\n    path: 'sell', component: AgentSellComponent,\n    children: [\n      {path: '', component: SelectPackageComponent},\n      {path: ':id', component: PerformServiceComponent},\n      {path: 'airtime', component: SellAirtimeComponent},\n      {path: 'data', component: SellDataComponent}]\n  },\n  {path: 'profile', component: AgentProfileComponent},\n  {path: 'wallet', component: AgentWalletComponent},\n  {path: 'create-user', component: CreateUserComponent},\n  {path: 'manage-user', component: ManageUsersComponent},\n  {path: 'payment-status', component: PaymentStatusComponent},\n  {path: 'new-fund-request', component: AgentNewFundRequestComponent},\n  {path: 'support', component: AgentSupportComponent},\n  {path: 'transaction-history', component: AgentTransactionHistoryComponent},\n  {\n    path: 'user/:id', component: UserProfileComponent,\n    children: [\n      {path: 'account', component: AgentAccountComponent},\n      {path: 'user-agents', component: UserAgentsComponent},\n      {path: 'permissions', component: PermissionsComponent}]\n  },\n  // { path: 'data-transaction-history', component: AgentDataHistoryComponent},\n  {path: 'fund-request-history', component: AgentFundRequestHistoryComponent},\n  {path: 'change-password', component: AgentChangePasswordComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AgentRoutingModule { }\n","import {Component, OnInit, ViewContainerRef} from \"@angular/core\";\r\nimport {Constants} from '../../../../../shared/Constants';\r\nimport {AnonymousService} from '../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {Router} from '@angular/router';\r\nimport {UserService} from '../../../../../core/services/users-service/user-service';\r\nimport {AuthService} from '../../../../../core/authentication/auth-service.service';\r\nimport {ToastService} from '../../../../../shared/services/toast-service/toast.service';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\n\r\n@Component({\r\n  selector: 'app-agent-profile',\r\n  templateUrl: './agent-profile.component.html',\r\n  styleUrls: ['./agent-profile.component.scss']\r\n})\r\nexport class AgentProfileComponent implements OnInit {\r\n\r\n  pageTitle = 'Profile';\r\n  public switchCreate: boolean;\r\n  public roles: any;\r\n  public userDataResponse: any;\r\n  public message: any;\r\n  public isNotEdit: boolean;\r\n  public edit_text: string;\r\n  public isUpdating;\r\n\r\n  public profile: any;\r\n  public userFormData: any = {\r\n    lastName: '',\r\n    firstName: '',\r\n    address: '',\r\n    mobile: '',\r\n    email: '',\r\n    roleId: ''\r\n  };\r\n\r\n  constructor( public sharedService: SharedService, public router: Router, public anonymousService: AnonymousService,\r\n               public agentService: UserService, public authService: AuthService, public toast: ToastService, public error: ErrorService) {\r\n\r\n    this.sharedService.emitChange(this.pageTitle);\r\n    this.profile = JSON.parse(localStorage.getItem(Constants.PROFILE));\r\n    this.switchCreate = true;\r\n    this.getRoles();\r\n    this.isNotEdit = true;\r\n    this.isUpdating = false;\r\n    this.edit_text = 'Edit Profile';\r\n    this.initializeForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('*************** profile details **************');\r\n    console.log(this.profile);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log(this.userFormData);\r\n    this.updateUser();\r\n  }\r\n\r\n  public initializeForm(): void{\r\n    this.userFormData.firstName = this.profile.firstName;\r\n    this.userFormData.lastName = this.profile.lastName;\r\n    this.userFormData.mobileNo = this.profile.mobile;\r\n    this.userFormData.email = this.profile.email;\r\n    this.userFormData.address = this.profile.address;\r\n    this.userFormData.roleId = this.profile.role.id;\r\n  }\r\n\r\n  getProfile = () => {\r\n    this.sharedService.getProfile(this.profile.email).subscribe(\r\n      (response: any) => {\r\n        console.log(response.data);\r\n        if (response.status === 200) {\r\n          localStorage.setItem(Constants.PROFILE, '');\r\n          localStorage.setItem(Constants.PROFILE, JSON.stringify(response));\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        const msg = this.error.errorHandlerWithText(this.getProfile, err);\r\n        console.log('Agent profile failed response');\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n// update users\r\n  updateUser = () => {\r\n    this.isUpdating = true;\r\n    this.agentService.updateAgent(this.userFormData, this.profile.id).subscribe(\r\n      (response: any) => {\r\n        if (response.status === 200) {\r\n          this.userDataResponse = response.data;\r\n          this.editToggle();\r\n          this.toast.showSuccess('Profile updated successfully', 'Success');\r\n          this.isUpdating = false;\r\n          this.getProfile();\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.isUpdating = false;\r\n        const msg = this.error.errorHandlerWithText(this.updateUser, err);\r\n        console.log(msg.errorMsg);\r\n        this.toast.showError(msg.message, 'Error');\r\n      }\r\n    )\r\n  }\r\n\r\n  // get roles\r\n  getRoles = () => {\r\n    this.anonymousService.getRoles().subscribe(\r\n      (response: any) => {\r\n        console.log(\"get roles function\")\r\n        console.log(response);\r\n        this.roles = response.data;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        const msg = this.error.errorHandlerWithText(this.getRoles, err);\r\n       // console.log(msg.message);\r\n      }\r\n    )\r\n  }\r\n\r\n  editToggle() {\r\n    if (this.isNotEdit) {\r\n      this.edit_text = 'Cancel';\r\n      this.isNotEdit = false;\r\n    } else {\r\n      this.isNotEdit = true;\r\n      this.edit_text = 'Edit Profile';\r\n    }\r\n  }\r\n  //\r\n  // changePassword() {\r\n  //   this.router.navigate(['admin/change-password']);\r\n  // }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"container col-lg-11\">\r\n\r\n    <div class=\"mat-card\">\r\n\r\n      <div class=\"text-center\">\r\n        <div class=\"avatar card\" style=\"padding: 5px\"><i class=\"fa fa-user-circle-o\"></i> </div>\r\n      </div>\r\n      <!--<h4 class=\"mat-card-title\">Create User</h4>-->\r\n      <div style=\"margin-top: -35px; position: relative;\">\r\n\r\n        <div class=\"buttonSection text-center\"><div href=\"#\" class=\"btn btn-outline-brand-primary\" (click)=\"editToggle()\">{{edit_text}}</div></div>\r\n        <form (ngSubmit)=\"onSubmit()\" class=\"card viewInfo\">\r\n          <div class=\"md-container\" style=\"margin-top: 90px;\">\r\n            <div class=\"mat-card-header\">Personal Information</div>\r\n            <div class=\"divider\"></div>\r\n            <div class=\"form-inline\">\r\n\r\n              <mat-form-field class=\"md-inline col-md-6\">\r\n                <label class=\"sr-only\" for=\"firstName\">First Name</label>\r\n                <input matInput type=\"text\" [disabled]=\"isNotEdit\" id=\"firstName\" [(ngModel)]=\"userFormData.firstName\" [ngModelOptions]=\"{standalone: true}\" required name=\"firstName\" placeholder=\"First Name\" value=\"\">\r\n              </mat-form-field>\r\n\r\n              <mat-form-field class=\"md-inline col-md-6\">\r\n                <label class=\"sr-only\" for=\"lname\">Last Name</label>\r\n                <input matInput type=\"text\" id=\"lname\" [disabled]=\"isNotEdit\" required  [(ngModel)]=\"userFormData.lastName\" [ngModelOptions] =\"{standalone: true}\" name=\"lastName\" placeholder=\"Last Name\" value=\"\">\r\n              </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <div class=\"form-inline\">\r\n              <mat-form-field class=\"md-inline col-md-6\">\r\n                <label class=\"sr-only\" for=\"phone1\">Mobile phone</label>\r\n                <input matInput type=\"tel\" required id=\"phone1\" [disabled]=\"isNotEdit\" [(ngModel)]=\"userFormData.mobileNo\" [ngModelOptions] =\"{standalone: true}\" name=\"mobileNo\" placeholder=\"Mobile Phone\" value=\"\">\r\n              </mat-form-field>\r\n\r\n\r\n              <mat-form-field class=\"md-inline col-md-6\">\r\n                <label class=\"sr-only\" for=\"email\">Email address</label>\r\n                <input matInput type=\"email\" id=\"email\" [disabled]=\"isNotEdit\" required [(ngModel)]=\"userFormData.email\" [ngModelOptions] =\"{standalone: true}\" name=\"email\" placeholder=\"Email address\" value=\"\">\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"md-container\">\r\n              <div class=\"mat-card-header\">Address</div>\r\n              <div class=\"divider\"></div>\r\n              <div class=\"form-inline\">\r\n                <mat-form-field class=\"col-md-12\">\r\n                  <label class=\"sr-only\" for=\"address\">Address</label>\r\n                  <textarea matInput md-maxlength=\"200\" rows=\"2\" [disabled]=\"isNotEdit\" required id=\"address\"  [(ngModel)]=\"userFormData.address\" [ngModelOptions] =\"{standalone: true}\"  placeholder=\"Address\" value=\"\"></textarea>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <!--<div class=\"form-container\">-->\r\n          <!--<div class=\"mat-card-header\">Role</div>-->\r\n          <!--<div class=\"divider\"></div>-->\r\n\r\n          <!--<div class=\"text-left mb-module col-md-12\">-->\r\n          <!--<mat-select placeholder=\"Choose Role\" [disabled]=\"isNotEdit\" [(ngModel)]=\"userFormData.roleId\" [ngModelOptions] =\"{standalone: true}\" >-->\r\n          <!--<mat-option [value]=\"role.id\"  *ngFor=\"let role of roles\">-->\r\n          <!--{{role.name}}-->\r\n          <!--</mat-option>-->\r\n          <!--</mat-select>-->\r\n          <!--</div>-->\r\n          <!--</div>-->\r\n          <!--<button *ngIf=\"!isNotEdit\" md-raised-button type=\"submit\" color=\"accent\">Update </button>-->\r\n\r\n          <button *ngIf=\"!isNotEdit\"  [disabled]=\"isUpdating\" md-raised-button type=\"submit\" color=\"accent\" >Update<i *ngIf=\"isUpdating\" style=\"color:#fff; font-size:30px;\" class=\"fa fa-spinner fa-spin\"></i></button>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/**\r\n * Created by Anthony on 18/05/2018.\r\n */\r\n\r\nimport {Constants} from '../../shared/Constants';\r\n\r\nexport class FundRequests {\r\n  get amount(): number {\r\n    return this._amount;\r\n  }\r\n\r\n  set amount(value: number) {\r\n    this._amount = value;\r\n  }\r\n\r\n  get balance(): number {\r\n    return this._balance;\r\n  }\r\n\r\n  set balance(value: number) {\r\n    this._balance = value;\r\n  }\r\n\r\n  get createdDate(): number {\r\n    return this._createdDate;\r\n  }\r\n\r\n  set createdDate(value: number) {\r\n    this._createdDate = value;\r\n  }\r\n\r\n  get depositorName(): string {\r\n    return this._depositorName;\r\n  }\r\n\r\n  set depositorName(value: string) {\r\n    this._depositorName = value;\r\n  }\r\n\r\n  get email(): string {\r\n    return this._email;\r\n  }\r\n\r\n  set email(value: string) {\r\n    this._email = value;\r\n  }\r\n\r\n  get firstName(): any {\r\n    return this._firstName;\r\n  }\r\n\r\n  set firstName(value: any) {\r\n    this._firstName = value;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get lastName(): any {\r\n    return this._lastName;\r\n  }\r\n\r\n  set lastName(value: any) {\r\n    this._lastName = value;\r\n  }\r\n\r\n  get mobileNo(): string {\r\n    return this._mobileNo;\r\n  }\r\n\r\n  set mobileNo(value: string) {\r\n    this._mobileNo = value;\r\n  }\r\n\r\n  get paymentDate(): number {\r\n    return this._paymentDate;\r\n  }\r\n\r\n  set paymentDate(value: number) {\r\n    this._paymentDate = value;\r\n  }\r\n\r\n  get paymentMode(): string {\r\n    return this._paymentMode;\r\n  }\r\n\r\n  set paymentMode(value: string) {\r\n    this._paymentMode = value;\r\n  }\r\n\r\n  get proofOfPayment(): string {\r\n    return Constants.SERVICE_URL + '/' + this._proofOfPayment;\r\n  }\r\n\r\n  set proofOfPayment(value: string) {\r\n    this._proofOfPayment = value;\r\n  }\r\n\r\n  get referenceId(): string {\r\n    return this._referenceId;\r\n  }\r\n\r\n  set referenceId(value: string) {\r\n    this._referenceId = value;\r\n  }\r\n\r\n  get status(): number {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: number) {\r\n    this._status = value;\r\n  }\r\n\r\n  get updatedDate(): any {\r\n    return this._updatedDate;\r\n  }\r\n\r\n  set updatedDate(value: any) {\r\n    this._updatedDate = value;\r\n  }\r\n\r\n  get userId(): number {\r\n    return this._userId;\r\n  }\r\n\r\n  set userId(value: number) {\r\n    this._userId = value;\r\n  }\r\n  private _amount: number;\r\n  private _balance: number;\r\n  private _createdDate: number;\r\n  private _depositorName: string;\r\n  private _email: string;\r\n  private _firstName: null;\r\n  private _id: number;\r\n  private _lastName: null;\r\n  private _mobileNo: string;\r\n  private _paymentDate: number;\r\n  private _paymentMode: string;\r\n  private _proofOfPayment: string;\r\n  private _referenceId: string;\r\n  private _status: number;\r\n  private _updatedDate: null;\r\n  private _userId: number;\r\n\r\n  constructor(obj : any) {\r\n    this._amount = obj.amount;\r\n    this._balance = obj.balance;\r\n    this._createdDate = obj.createdDate;\r\n    this._depositorName = obj.depositorName;\r\n    this._email = obj.email;\r\n    this._firstName = obj.firstName;\r\n    this._id = obj.id;\r\n    this._lastName = obj.lastName;\r\n    this._mobileNo = obj.mobileNo;\r\n    this._paymentDate = obj.paymentDate;\r\n    this._paymentMode = obj.paymentMode;\r\n    this._proofOfPayment = obj.proofOfPayment;\r\n    this._referenceId = obj.referenceId;\r\n    this._status = obj.status;\r\n    this._updatedDate = obj.updatedDate;\r\n    this._userId = obj.userId;\r\n  }\r\n}\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {AnonymousService} from '../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {UserService} from '../../../../../core/services/users-service/user-service';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\nimport {ToastService} from '../../../../../shared/services/toast-service/toast.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../../../../shared/Constants';\r\nimport {Agent} from '../../../../../core/mocks/agent/agent.model';\r\nimport {FormBuilder, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\r\nimport {FundRequests} from '../../../../../core/mocks/fundRequests.model';\r\n\r\n@Component({\r\n  selector: 'app-agent-new-fund-request',\r\n  templateUrl: './agent-new-fund-request.component.html',\r\n  styleUrls: ['./agent-new-fund-request.component.scss']\r\n})\r\nexport class AgentNewFundRequestComponent implements OnInit {\r\n\r\n  private pageTitle: string;\r\n  public fundRequestForm: FormGroup;\r\n\r\n  mobnumPattern = '^((\\\\+91-?)|0)?[0-9]{7,14}$';\r\n\r\n  @ViewChild('proofOfPayment') proofOfPaymentRef: ElementRef;\r\n\r\n  @ViewChild(FormGroupDirective) _fundRequestForm;\r\n\r\n  public setId = null;\r\n  public switchState: string;\r\n  public paymentModes: any;\r\n  public isloading: boolean;\r\n  public isLoadingNetworks: boolean;\r\n  public errorResponse: any;\r\n  public isRequesting: boolean;\r\n  public fundRequestObj: any = {\r\n    paymentMode: '',\r\n    referenceId: '',\r\n    depositorName: '',\r\n    amount: 0,\r\n    paymentDate: '',\r\n    proofOfPayment : ''\r\n  };\r\n\r\n  public proofOfPayment: any;\r\n\r\n  public successfulFundRequest: any;\r\n\r\n  public selectedNetwork: string;\r\n  public amount: number;\r\n  public mobile: number;\r\n  public paymentMode: any;\r\n\r\n  public wallet: any = {\r\n    walletBalance : 0,\r\n    walletCommissionBalance : 0,\r\n    actualWalletBalance : 0\r\n  };\r\n\r\n  constructor(public sharedService: SharedService, public anonymousService: AnonymousService, public router: Router,\r\n              public error: ErrorService, public fb: FormBuilder, public agent: UserService, public toast: ToastService) {\r\n\r\n    this.pageTitle = 'New Fund Requests';\r\n    this.sharedService.emitChange(this.pageTitle);\r\n\r\n    // this.sharedService.userWallet.subscribe(this.getWallet);\r\n    this.isLoadingNetworks = false;\r\n    this.switchState = 'new';\r\n    this.paymentModes = [];\r\n    this.isloading = false;\r\n    this.isRequesting = false;\r\n    this.createForm();\r\n\r\n  }\r\n\r\n\r\n  createForm(): void{\r\n    this.fundRequestForm = this.fb.group({\r\n      paymentMode: ['', Validators.required],\r\n      referenceId: ['', Validators.required],\r\n      depositorName: ['', Validators.required],\r\n      amount: ['', [Validators.required]],\r\n      paymentDate: ['', Validators.required],\r\n      proofOfPayment: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n\r\n  resetForm(): void{\r\n    this.fundRequestObj.paymentMode = '';\r\n    this.fundRequestObj.referenceId = '';\r\n    this.fundRequestObj.depositorName = '';\r\n    this.fundRequestObj.amount = 0;\r\n    this.fundRequestObj.paymentDate = '';\r\n    this.fundRequestObj.proofOfPayment = '';\r\n\r\n    this.fundRequestForm.reset();\r\n    this.fundRequestForm.markAsPristine();\r\n    this.fundRequestForm.markAsUntouched();\r\n    this.fundRequestForm.updateValueAndValidity();\r\n  }\r\n\r\n  goToPage(page: string = 'new'): void{\r\n    this.switchState = page;\r\n  }\r\n\r\n  // ////////////////// get all payment Mode ////////////////////////////////////////////////////\r\n  getPaymentModes = () => {\r\n    this.anonymousService.getFundPaymentModes().subscribe(\r\n      response => {\r\n        this.paymentModes = response;\r\n        this.filterPaymentMethods();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getPaymentModes, err);\r\n        this.isLoadingNetworks = false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  filterPaymentMethods = () => {\r\n    const  paymentModesHolder = [];\r\n    this.paymentModes.forEach(ele => {\r\n      paymentModesHolder.push(ele.replace(/[_-]/g, ' '));\r\n    });\r\n\r\n    this.paymentModes = [];\r\n    this.paymentModes = paymentModesHolder;\r\n  }\r\n\r\n  // Submit recharge form\r\n  onSubmit(): void {\r\n    // const proofOfPayment: HTMLInputElement = this.PoP.nativeElement.files.item(0);\r\n    this.fundRequestObj.amount = this.fundRequestForm.value.amount;\r\n    this.fundRequestObj.paymentDate = this.fundRequestForm.value.paymentDate;\r\n    this.fundRequestObj.depositorName = this.fundRequestForm.value.depositorName;\r\n    this.fundRequestObj.paymentMode = this.fundRequestForm.value.paymentMode;\r\n    this.fundRequestObj.referenceId = this.fundRequestForm.value.referenceId;\r\n    this.fundRequestObj.proofOfPayment = this.fundRequestForm.value.proofOfPayment;\r\n\r\n    this.switchState = 'verify';\r\n    console.log('fund Request', this.fundRequestForm.value);\r\n    console.log('fund fundRequestObj', this.fundRequestObj);\r\n  }\r\n\r\n  confirmRequest = () => {\r\n    // this.fundRequestForm.disable();\r\n    this.fundRequestForm.removeControl('proofOfPayment');\r\n    this.isRequesting = true;\r\n    const paymentDate = this.fundRequestForm.value.paymentDate;\r\n    this.fundRequestForm.value.paymentDate = new Date(paymentDate).getTime();\r\n    console.log('paymentDate', paymentDate);\r\n    console.log('POP', this.proofOfPaymentRef);\r\n\r\n   // const PoP: HTMLInputElement = this.proofOfPaymentRef.nativeElement;\r\n    const formData = new FormData();\r\n\r\n    console.log('PoP', this.proofOfPayment);\r\n    formData.append('proofOfPayment', this.proofOfPayment);\r\n\r\n    console.log(this.fundRequestForm.value);\r\n\r\n\r\n    this.agent.requestFunding(this.fundRequestForm.value, formData).subscribe(\r\n      response => {\r\n        this.resetForm();\r\n        console.log('response data');\r\n        this.successfulFundRequest = new FundRequests(response.data[0]);\r\n        console.log(this.successfulFundRequest);\r\n\r\n        this.goToPage('success');\r\n      },\r\n      err => {\r\n        console.log('error is here');\r\n        console.log(err);\r\n        const errorResponse = this.error.errorHandlerWithText(this.confirmRequest, err);\r\n        this.isRequesting = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  newRecharge(): void{\r\n    this.router.navigate(['/new-fund-request']);\r\n  }\r\n\r\n  fileEvent(e): void{\r\n    this.proofOfPayment = e.target.files[0];\r\n    console.log(e);\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getPaymentModes();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-card\">\r\n  <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n  <header style=\"font-weight:700;\">\r\n    <a *ngIf=\"switchState !== 'new'\" (click)=\"goToPage('new')\" class=\"back-btn\"><i class=\"fa fa-arrow-left\"></i><span>back</span></a>\r\n    New Request\r\n  </header>\r\n  <div>\r\n    <mat-progress-bar *ngIf=\"false\" mode=\"indeterminate\"></mat-progress-bar>\r\n  </div>\r\n  <div class=\"content-area\">\r\n    <div class=\"container\">\r\n      <div class=\"row mt-5 mb-5\">\r\n        <div class=\"col-xl-2\">\r\n\r\n        </div>\r\n        <div class=\"col-xl-8\">\r\n          <div class=\"widget-content\">\r\n\r\n            <!--new block -->\r\n            <div class=\"widget-content-block new\" *ngIf=\"switchState === 'new'\" [class.visible]=\"switchState === 'new'\">\r\n              <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"fundRequestForm\" #formData='ngForm' method=\"post\" enctype=\"multipart/form-data\">\r\n                <div class=\"mb-5\">\r\n                  <mat-select placeholder=\"Select mode of payment\" #selectPaymentMode required formControlName=\"paymentMode\" style=\"width:100%;\">\r\n                    <mat-option [value]=\"paymentMode\" *ngFor=\"let paymentMode of paymentModes\">\r\n                       {{paymentMode}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"fundRequestForm.get('paymentMode').invalid && (fundRequestForm.get('paymentMode').dirty || fundRequestForm.get('paymentMode').touched)\">\r\n                    <div class=\"errorText\" >\r\n                      Payment method is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-inline\">\r\n                  <mat-form-field class=\"md-inline mb-5 col-md-6\">\r\n                    <label class=\"sr-only\" for=\"referenceId\">Teller number / Transaction Ref</label>\r\n                    <input matInput type=\"text\" required  id=\"referenceId\" formControlName=\"referenceId\" placeholder=\"Teller number / Transaction Ref\" value=\"\">\r\n                    <div *ngIf=\"fundRequestForm.get('referenceId').invalid && (fundRequestForm.get('referenceId').dirty || fundRequestForm.get('referenceId').touched)\">\r\n                      <div *ngIf=\"fundRequestForm.get('referenceId').errors.required\" class=\"errorText\" >\r\n                        Teller number / Transaction Ref is required\r\n                      </div>\r\n                    </div>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field class=\"md-inline mb-5 col-md-6\">\r\n                    <label class=\"sr-only\" for=\"depositorName\">Depositor Name</label>\r\n                    <input matInput type=\"text\" required  id=\"depositorName\" formControlName=\"depositorName\" placeholder=\"Depositor Name\" value=\"\">\r\n                    <div *ngIf=\"fundRequestForm.get('depositorName').invalid && (fundRequestForm.get('depositorName').dirty || fundRequestForm.get('depositorName').touched)\">\r\n                      <div *ngIf=\"fundRequestForm.get('depositorName').errors.required\" class=\"errorText\" >\r\n                        Depositor's Name is required\r\n                      </div>\r\n                    </div>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"form-inline\">\r\n                  <mat-form-field class=\"md-inline mb-5 col-md-6\">\r\n                    <label class=\"sr-only\" for=\"amount\">Enter Amount</label>\r\n                    <input matInput type=\"number\" required  id=\"amount\" formControlName=\"amount\" placeholder=\"Enter Amount\" value=\"\">\r\n                    <div *ngIf=\"fundRequestForm.get('amount').invalid && (fundRequestForm.get('amount').dirty || fundRequestForm.get('amount').touched)\">\r\n                      <div *ngIf=\"fundRequestForm.get('amount').errors.required\" class=\"errorText\" >\r\n                        Amount is required\r\n                      </div>\r\n\r\n                      <div *ngIf=\"!(fundRequestForm.get('amount').errors.required)\" class=\"errorText\">\r\n                        Enter a valid amount\r\n                      </div>\r\n                    </div>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field class=\"md-inline mb-5 col-md-6\">\r\n                    <label class=\"sr-only\" for=\"paymentDate\">Date payment was made</label>\r\n                    <input matInput type=\"date\" required  id=\"paymentDate\" formControlName=\"paymentDate\" placeholder=\"Date of payment\" value=\"\">\r\n                    <div *ngIf=\"fundRequestForm.get('paymentDate').invalid && (fundRequestForm.get('paymentDate').dirty || fundRequestForm.get('paymentDate').touched)\">\r\n                      <div *ngIf=\"fundRequestForm.get('paymentDate').errors.required\" class=\"errorText\" >\r\n                        Date of payment is required\r\n                      </div>\r\n                    </div>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"form-group mb-5\">\r\n                  <label>Upload Proof of Payment</label>\r\n                  <input class=\"form-control\" type=\"file\" #proofOfPaymentRef formControlName=\"proofOfPayment\" (change)=\"fileEvent($event)\">\r\n                </div>\r\n\r\n\r\n                <a mat-raised-button class=\"mr-2\" color=\"warn\" (click)=\"resetForm()\"> Reset </a>\r\n\r\n                <button mat-raised-button [disabled]=\"fundRequestForm.invalid || isloading\" type=\"submit\" color=\"accent\">Proceed</button>\r\n\r\n              </form>\r\n            </div>\r\n            <!--new block-->\r\n\r\n            <!--verify block-->\r\n            <div class=\"widget-content-block verify\" *ngIf=\"switchState=='verify'\" [class.visible]=\"switchState === 'verify'\" >\r\n              <h4 style=\"margin:0;\">Fund Request Details</h4>\r\n              <p>Kindly confirm your fund request details below</p>\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Payment Mode</span> <span class=\"value\">{{fundRequestObj.paymentMode}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Teller no / Ref</span> <span class=\"value\">{{fundRequestObj.referenceId}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Depositors Name</span> <span class=\"value\">{{fundRequestObj.depositorName}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Amount</span> <span class=\"value\">{{fundRequestObj.amount | currency : 'NGN' : 'symbol-narrow' | moneyFormatter}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Payment Date</span> <span class=\"value\">{{fundRequestObj.paymentDate}}</span></div>\r\n              </div>\r\n              <button mat-raised-button type=\"button\" class=\"mr-2\" color=\"warn\" (click)=\"goToPage()\" [disabled]=\"isRequesting\"> Back </button>\r\n\r\n              <button mat-raised-button type=\"button\" [disabled]=\"isRequesting\" (click)=\"confirmRequest()\"  color=\"accent\">{{!isRequesting?'Confirm':'Please wait'}}\r\n<!--                <i *ngIf=\"isRecharging\" class=\"fa fa-spinner fa-spin\"></i>-->\r\n              </button>\r\n\r\n            </div>\r\n            <!--verify block-->\r\n\r\n            <!--successful block-->\r\n            <div class=\"widget-content-block success\" *ngIf=\"switchState === 'success'\" [class.visible]=\"switchState === 'success'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-check-circle fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">Fund Request is Successful</h5>\r\n\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\" style=\"height: 200px; width:auto;\"><img style=\" height: 150px;max-width: 100%;\" [src]=\"successfulFundRequest.proofOfPayment\" alt=\"proof of payment\" /></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Payment Mode</span> <span class=\"value\">{{successfulFundRequest.paymentMode}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Teller no / Ref</span> <span class=\"value\">{{successfulFundRequest.referenceId}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Depositors Name</span> <span class=\"value\">{{successfulFundRequest.depositorName}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">{{successfulFundRequest.amount | currency : 'NGN' : 'symbol-narrow' | moneyFormatter}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Payment Date</span> <span class=\"value\">{{successfulFundRequest.paymentDate}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New Request</button>\r\n\r\n            </div>\r\n            <!--successful block-->\r\n\r\n            <!--failed block-->\r\n            <div class=\"widget-content-block failed\"  [class.visible]=\"switchState === 'failed'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-times-circle fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">Recharge Failed</h5>\r\n\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Phone number</span> <span class=\"value\">11111</span></div>\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">343434343</span></div>\r\n                <div class=\"block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{30000 | currency | moneyFormatter}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"newRecharge()\"  color=\"accent\"> New Request<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </div>\r\n            <!--failed block-->\r\n\r\n            <!--failed block-->\r\n            <div class=\"widget-content-block\"  [class.visible]=\"switchState === 'error'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-times-circle fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">OOPs something went wrong</h5>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New recharge<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </div>\r\n            <!--failed block-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AnonymousService} from '../../../../../../core/services/anonymous-service';\r\nimport {SharedService} from '../../../../../../core/services/shared-service/shared.service';\r\nimport {UserService} from '../../../../../../core/services/users-service/user-service';\r\nimport {ErrorService} from '../../../../../../core/services/error_service/error.service';\r\nimport {ToastService} from '../../../../../../shared/services/toast-service/toast.service';\r\nimport {Router} from '@angular/router';\r\nimport {Constants} from '../../../../../../shared/Constants';\r\nimport {FormBuilder, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\r\nimport {MobileNetworks} from '../../../../../../shared/mobile-networks';\r\nimport {TransactionsResponse} from '../../../../../../core/mocks/transactionsResponse.model';\r\nimport {AuthService} from '../../../../../../core/authentication/auth-service.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n\r\ndeclare var window: any;\r\n\r\n@Component({\r\n  selector: 'app-sell-data',\r\n  templateUrl: './sell-data.component.html',\r\n  styleUrls: ['./sell-data.component.scss']\r\n})\r\nexport class SellDataComponent implements OnInit {\r\n\r\n  public dataForm: FormGroup;\r\n\r\n  mobnumPattern = '^((\\\\+91-?)|0)?[0-9]{7,14}$';\r\n  @ViewChild(FormGroupDirective) dataFormVC;\r\n\r\n  public networksDataWithId = [];\r\n  public networkDataPackages = [];\r\n  public networksLogoPath: any = [];\r\n  public setId = null;\r\n  public isVerifyDetails: boolean;\r\n  public networks: any;\r\n  public isloading: boolean;\r\n  public isLoadingNetworks: boolean;\r\n  public errorResponse: any;\r\n  public userType: string;\r\n  public isRecharging: boolean;\r\n  public switchState: string;\r\n\r\n  public isCommissionWallet = false;\r\n  public dataResponse: any;\r\n\r\n  public selectedNetwork: string;\r\n  public amount: number;\r\n  public mobile: number;\r\n  public network: any;\r\n\r\n  getpaidSetup: any;\r\n  ravePay: any;\r\n  transactionID: string;\r\n\r\n  public productDetails: any;\r\n  public productName: string;\r\n  public product: any;\r\n\r\n  public wallet: any = {\r\n    walletBalance : 0,\r\n    walletCommissionBalance : 0,\r\n    actualWalletBalance : 0\r\n  };\r\n\r\n\r\n  public dataObj: any = {\r\n    fromWallet: '',\r\n    networkId: 0,\r\n    productId: 0,\r\n    receiverMsisdn: ''\r\n  };\r\n\r\n  constructor( public sharedService: SharedService, public anonymousService: AnonymousService,\r\n               public snackBar: MatSnackBar,\r\n               public error: ErrorService,\r\n               public agent: UserService,\r\n               public authService: AuthService, public fb: FormBuilder, public errorService: ErrorService,\r\n               public toast: ToastService, public router: Router) {\r\n    this.isLoadingNetworks = false;\r\n    this.isVerifyDetails = false;\r\n\r\n    this.switchState = 'data';\r\n\r\n    this.networks = [];\r\n    this.networksLogoPath = MobileNetworks.networksLogoPath;\r\n    this.isloading = false;\r\n    this.createForm();\r\n\r\n    sharedService.walletAccountsEmitted$.subscribe(\r\n      obj => {\r\n        console.log(obj);\r\n        console.log('obj.walletAccounts.walletBalance', obj.walletAccounts.walletBalance);\r\n        this.wallet.walletBalance = obj.walletAccounts.walletBalance;\r\n        this.wallet.walletCommissionBalance = obj.walletAccounts.walletCommissionBalance;\r\n      });\r\n\r\n  }\r\n\r\n  createForm(): void {\r\n    this.dataForm = this.fb.group({\r\n      mobile: ['', [Validators.required, Validators.pattern(this.mobnumPattern)]],\r\n      networkId: ['', [Validators.required]],\r\n      product: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  //// Sort data ////////////////////\r\n  getNetworksDataWithId(): void {\r\n    this.networksDataWithId = [];\r\n\r\n    this.networks.sort ( (a, b) => {\r\n      return - ( a.id - b.id  ||  a.networkName.localeCompare(b.networkName) );\r\n    });\r\n\r\n    for (let i = 0; i < this.networks.length; i++ ) {\r\n      const sortedNetworks: any = {id: 0, logoPath: '', data: {}};\r\n      sortedNetworks.id = i + 1;\r\n      sortedNetworks.logoPath = this.networksLogoPath[this.networks[i].networkCodeName];\r\n      sortedNetworks.data = this.networks[i];\r\n      this.networksDataWithId.push(sortedNetworks);\r\n    }\r\n    console.log('************ Networks with id ****************');\r\n    console.log(this.networksDataWithId);\r\n    localStorage.setItem('networks', JSON.stringify(this.networksDataWithId));\r\n  }\r\n\r\n  //\r\n  setNetwork(networkId: any): void{\r\n    const productObj = this.networksDataWithId.filter((network) =>  network.data.id === networkId);\r\n    const networkName = productObj[0].data.networkName;\r\n    this.amount = null;\r\n    console.log('product name', networkName);\r\n\r\n    console.log('product object', productObj);\r\n\r\n    console.log(' product', productObj[0].data.products);\r\n\r\n    this.selectedNetwork = networkName;\r\n    // console.log('selectedNetwork', this.selectedNetwork);\r\n    this.networkDataPackages = productObj[0].data.products;\r\n    // console.log(networkName);\r\n  }\r\n\r\n  setPackage(packageId: any): void {\r\n    this.productDetails = this.networkDataPackages.filter((packageData) =>  packageData.id === packageId)[0];\r\n    console.log(this.productDetails);\r\n    this.amount = this.productDetails.amount;\r\n    this.productName = this.productDetails.name;\r\n  }\r\n\r\n  getNetworkName(id: any): void{\r\n    return this.networksDataWithId.filter((network) =>  network.data.id === id)[0].data.networkName;\r\n  }\r\n\r\n\r\n  // ////////////////// get all networks info ////////////////////////////////////////////////////\r\n  private getAllDataNetworks = () => {\r\n    this.isLoadingNetworks = true;\r\n    this.anonymousService.getDataNetworks().subscribe(\r\n      response => {\r\n        console.log('************ Data Network list ****************');\r\n        console.log(response.data);\r\n        this.networks = response.data.filter((res) => res.isDataActive);\r\n\r\n        this.isLoadingNetworks = false;\r\n        this.getNetworksDataWithId();\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getAllDataNetworks, err);\r\n        this.isLoadingNetworks = false;\r\n        console.log(this.errorResponse);\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  confirmData = () => {\r\n    this.isRecharging = true;\r\n    this.dataObj.fromWallet = this.isCommissionWallet ? Constants.COMMISSION_WALLET : Constants.MAIN_WALLET;\r\n    console.log(this.dataObj);\r\n\r\n    this.agent.dataRecharge(this.dataObj).subscribe(\r\n      response => {\r\n        this.resetForm(true);\r\n        console.log(response);\r\n        console.log('response data');\r\n        this.sharedService.emitWalletAccounts();\r\n        // this.resetForm();\r\n\r\n        this.dataResponse = new TransactionsResponse(response.data[0]);\r\n        console.log(this.dataResponse);\r\n        if (this.dataResponse.status === 1){\r\n          this.goToPage('data-success');\r\n        }\r\n        else if (this.dataResponse.status === 0){\r\n          console.log('failed');\r\n          this.goToPage('data-failed');\r\n        }\r\n        else if (this.dataResponse.status === -1){\r\n          this.goToPage('data-pending');\r\n        }\r\n\r\n        this.isRecharging = false;\r\n\r\n      },\r\n      err => {\r\n        console.log('error is here');\r\n        console.log(err);\r\n        const errorMessage = this.error.errorHandlerWithText(this.confirmData, err).message;\r\n        this.toast.showError(errorMessage, 'Error');\r\n        this.isRecharging = false;\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  checkNum(): void {\r\n    if (this.dataForm.value.mobile &&   this.dataForm.value.mobile.length  !==  11) {\r\n      this.dataForm.controls.mobile.setErrors({numberValid: true});\r\n    }\r\n  }\r\n\r\n  resetForm(external = false): boolean{\r\n    if (external){\r\n      this.network = null;\r\n      this.mobile = null;\r\n      this.amount = null;\r\n      return false;\r\n    }\r\n    this.dataFormVC.resetForm();\r\n    this.dataFormVC.form.markAsPristine();\r\n    this.dataFormVC.form.markAsUntouched();\r\n    this.dataFormVC.form.updateValueAndValidity();\r\n  }\r\n\r\n\r\n  //\r\n  backToStart(): void{\r\n    this.isVerifyDetails = false;\r\n  }\r\n  //\r\n\r\n  // Submit data form\r\n  onSubmit(): void {\r\n    this.isloading = true;\r\n    this.dataObj.networkId = this.network;\r\n    this.dataObj.productId = this.product;\r\n    this.dataObj.receiverMsisdn = this.mobile;\r\n    this.dataObj.amount = this.productDetails.amount;\r\n    this.dataObj.networkName = this.getNetworkName(this.network);\r\n\r\n\r\n    // this.generateTransactionId();\r\n    this.switchState = 'data-verify';\r\n    console.log('data Request', this.dataFormVC.value);\r\n    console.log('data dataObj', this.dataObj);\r\n  }\r\n\r\n  toggleWallet(): void {\r\n    this.isCommissionWallet = !this.isCommissionWallet;\r\n    console.log(this.isCommissionWallet);\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.getAllDataNetworks();\r\n    this.sharedService.emitWalletAccounts();\r\n  }\r\n\r\n  goToPage(page: string = 'data'): void {\r\n    this.switchState = page;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"package-card\">\r\n  <div class=\"loader\" *ngIf=\"false\"><span class=\"fa fa-spinner icon-loader\"></span></div>\r\n  <header style=\"font-weight:700;\">\r\n    <a *ngIf=\"switchState !== 'data'\" (click)=\"goToPage('data')\" class=\"back-btn\"><i class=\"fa fa-arrow-left\"></i><span>back</span></a>\r\n    Sell Data\r\n  </header>\r\n  <div>\r\n    <mat-progress-bar *ngIf=\"false\" mode=\"indeterminate\"></mat-progress-bar>\r\n  </div>\r\n  <div class=\"content-area\">\r\n    <div class=\"container\">\r\n      <div class=\"row mt-5 mb-5\">\r\n        <div class=\"col-xl-2\">\r\n\r\n        </div>\r\n        <div class=\"col-xl-8\">\r\n          <div class=\"widget-content\">\r\n\r\n            <!--recharge block -->\r\n            <div class=\"widget-content-block recharge\"  [class.visible]=\"switchState === 'data'\" *ngIf=\"switchState === 'data'\">\r\n              <form [formGroup]=\"dataForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n                <div class=\"mb-5\">\r\n                  <span *ngIf=\"isLoadingNetworks\" style=\"color:#777;\"><i class=\"fa fa-spinner fa-spin\"></i> Loading Network Providers  . . .</span>\r\n                  <mat-select *ngIf=\"!isLoadingNetworks\"  placeholder=\"Choose a network providers\" required formControlName=\"networkId\" [(ngModel)]=\"network\" (change)=\"setNetwork(network)\"  style=\"width:100%;\">\r\n                    <mat-option [value]=\"network.data.id\"   *ngFor=\"let network of networksDataWithId\">\r\n                      <img width=\"20\" height=\"20\" [src]=\"network.logoPath\" />  {{network.data.networkName}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"dataForm.get('networkId').invalid && (dataForm.get('networkId').dirty || dataForm.get('networkId').touched)\">\r\n                    <div class=\"errorText\" >\r\n                      Network Provider is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-5\">\r\n                  <mat-select *ngIf=\"selectedNetwork\"  placeholder=\"Select a data bundle\" required formControlName=\"product\" [(ngModel)]=\"product\" (change)=\"setPackage(product)\"  style=\"width:100%;\">\r\n                    <mat-option [value]=\"product.id\"   *ngFor=\"let product of networkDataPackages\">\r\n                      {{product.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"dataForm.get('product').invalid && (dataForm.get('product').dirty || dataForm.get('product').touched)\">\r\n                    <div class=\"errorText\" >\r\n                      Data bundle is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <mat-form-field class=\"mb-5\">\r\n                  <label class=\"sr-only\" for=\"phone\">Mobile phone</label>\r\n                  <input matInput type=\"tel\" required id=\"phone\" (keyup)=\"checkNum()\" (blur)=\"checkNum()\" formControlName=\"mobile\" placeholder=\"Mobile Phone\" [(ngModel)]=\"mobile\">\r\n                  <div *ngIf=\"dataForm.get('mobile').invalid && (dataForm.get('mobile').dirty || dataForm.get('mobile').touched)\">\r\n                    <div *ngIf=\"dataForm.get('mobile').errors.required\" class=\"errorText\" >\r\n                      Phone number is required\r\n                    </div>\r\n\r\n                    <div *ngIf=\"dataForm.get('mobile').errors.pattern && !(dataForm.get('mobile').errors.required)\" class=\"errorText\" >\r\n                      Enter a valid phone number\r\n                    </div>\r\n\r\n                    <div *ngIf=\"dataForm.get('mobile').errors.numberValid\" class=\"errorText\" >\r\n                      Number length must be 11 digits\r\n                    </div>\r\n                  </div>\r\n                </mat-form-field>\r\n\r\n                <div class=\"mb-5\" style=\"background-color: #ededed; color:#777; border:#444; padding:5px;\">\r\n                  <strong>Amount : </strong>{{amount}}\r\n                </div>\r\n\r\n                <a md-raised-button color=\"\" (click)=\"resetForm()\"> Reset </a>\r\n\r\n                <button md-raised-button type=\"submit\" color=\"accent\" [disabled]=\"!dataForm.valid || !amount\">Proceed </button>\r\n\r\n              </form>\r\n            </div>\r\n            <!--data block-->\r\n\r\n            <!--data verify block-->\r\n            <div class=\"widget-content-block verify-recharge\"  *ngIf=\"switchState === 'data-verify'\"  [class.visible]=\"switchState === 'data-verify'\" >\r\n              <h4 style=\"margin:0;\">Verify Details</h4>\r\n              <p>Please confirm details to proceed</p>\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Product name</span> <span class=\"value\">{{productName | checkNull}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Phone number</span> <span class=\"value\">{{dataObj.receiverMsisdn | checkNull}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{dataObj.networkName | checkNull}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{dataObj.amount | currency | moneyFormatter | checkNull}}</span></div>\r\n              </div>\r\n\r\n              <div class=\"inner-content-area-bottom\">\r\n                <small>You have <strong [ngClass]=\"{'text-success': wallet.walletCommissionBalance >= amount, 'text-danger': wallet.walletCommissionBalance < amount}\">NGN {{wallet.walletCommissionBalance | currency | moneyFormatter}}</strong> in your commission wallet</small>\r\n                <div class=\"toggle-btn\">\r\n                  <mat-slide-toggle [labelPosition]=\"'before'\" [checked]=\"isCommissionWallet\" (change)=\"toggleWallet()\" [disabled]=\"wallet.walletCommissionBalance <= amount\" style=\"font-weight:700;\">Use commission wallet</mat-slide-toggle>\r\n                </div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" color=\"\" (click)=\"goToPage()\" [disabled]=\"isRecharging\"> Back </button>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"confirmData()\" [disabled]=\"isRecharging\"  color=\"accent\">{{!isRecharging?'Pay':'Please wait'}}\r\n                <i *ngIf=\"isRecharging\" class=\"fa fa-spinner fa-spin\"></i>\r\n              </button>\r\n\r\n            </div>\r\n            <!--data verify block-->\r\n\r\n            <!--recharge successful block-->\r\n            <div class=\"widget-content-block success-recharge\" *ngIf=\"switchState === 'data-success'\"  [class.visible]=\"switchState === 'data-success'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-check-circle fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">Recharge Successful</h5>\r\n\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">MSISDN</span> <span class=\"value\">{{dataResponse?.toMsisdn}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{getNetworkName(dataResponse.network)}}</span></div>\r\n                <div class=\"block\"><span class=\"title\">Transaction ID</span> <span class=\"value\">{{dataResponse?.transactionId}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Date / Time</span> <span class=\"value\">{{dataResponse?.createdDate | date}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{dataResponse?.amount | currency | moneyFormatter}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Commission</span> <span class=\"value\">NGN {{dataResponse?.commission | currency | moneyFormatter}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New data<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </div>\r\n            <!--data successful block-->\r\n\r\n            <!--data failed block-->\r\n            <div class=\"widget-content-block failed-recharge\" *ngIf=\"switchState === 'data-failed'\"  [class.visible]=\"switchState === 'data-failed'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-times-circle fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">Recharge Failed</h5>\r\n\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{getNetworkName(dataResponse.network)}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Transaction ID</span> <span class=\"value\">{{dataResponse?.transactionId}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Date / Time</span><span class=\"value\">{{dataResponse?.createdDate| date}}, {{dataResponse.createdDate | date : 'shortTime'}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{dataResponse?.amount | currency | moneyFormatter}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Commission</span> <span class=\"value\">NGN {{dataResponse?.commission | currency | moneyFormatter}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New data<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </div>\r\n            <!--data failed block-->\r\n\r\n            <!--data pending block-->\r\n            <div class=\"widget-content-block pending-recharge\" *ngIf=\"switchState === 'data-pending'\"  [class.visible]=\"switchState === 'data-pending'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-hourglass-half fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">Recharge Pending</h5>\r\n              <p> Kindly contact the administrator</p>\r\n\r\n              <div class=\"inner-content-area\">\r\n                <div class=\"block\"><span class=\"title\">Network</span> <span class=\"value\">{{getNetworkName(dataResponse.network)}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Transaction ID</span> <span class=\"value\">{{dataResponse.transactionId}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Date / Time</span><span class=\"value\">{{dataResponse.createdDate| date}}, {{dataResponse.createdDate | date : 'shortTime'}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Amount</span> <span class=\"value\">NGN {{dataResponse.amount | currency | moneyFormatter}}</span></div>\r\n                <div class=\"inline-block\"><span class=\"title\">Commission</span> <span class=\"value\">NGN {{dataResponse.commission | currency | moneyFormatter}}</span></div>\r\n              </div>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New data<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </div>\r\n            <!--data pending block-->\r\n\r\n            <!--failed block-->\r\n            <div class=\"widget-content-block\"  [class.visible]=\"switchState === 'error'\">\r\n              <h1 class=\"icon\"><i class=\"fa fa-times-circle fa-2x\"></i></h1>\r\n              <h5 style=\"margin:0;\">OOPs something went wrong</h5>\r\n\r\n              <button md-raised-button type=\"button\" (click)=\"goToPage()\"  color=\"accent\"> New data<mat-spinner *ngIf=\"false\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n            </div>\r\n            <!--failed block-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewContainerRef} from '@angular/core';\r\nimport {AuthService} from '../../../../../core/authentication/auth-service.service';\r\nimport {Router} from '@angular/router';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\nimport {ToastService} from '../../../../../shared/services/toast-service/toast.service';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-agent-change-password',\r\n  templateUrl: './agent-change-password.component.html',\r\n  styleUrls: ['./agent-change-password.component.scss']\r\n})\r\nexport class AgentChangePasswordComponent implements OnInit {\r\n\r\n  changePasswordForm: FormGroup;\r\n  confirmPassword: string;\r\n  public changePasswordStatus: boolean;\r\n  password: string;\r\n  pageTitle = 'Change Password';\r\n\r\n  constructor( public authService: AuthService, public router: Router, public fb: FormBuilder,\r\n               public error: ErrorService, public toast: ToastService, public sharedService : SharedService) {\r\n    console.log('agent change password');\r\n    this.sharedService.emitChange(this.pageTitle);\r\n    this.changePasswordStatus = false;\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createForm(): void {\r\n    this.changePasswordForm = this.fb.group({\r\n        oldPassword: ['', [Validators.required]],\r\n        password: ['', [Validators.required]],\r\n        confirmPassword: ['', [Validators.required]]\r\n      },\r\n      {\r\n        validator: PasswordValidation.MatchPassword // your validation method\r\n      });\r\n  }\r\n\r\n\r\n\r\n  onSubmit(): void {\r\n    this.changePassword();\r\n    this.changePasswordStatus = true;\r\n  }\r\n\r\n\r\n\r\n  changePassword() {\r\n    this.authService.changePassword(this.changePasswordForm.value).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        if (data.status === 200) {\r\n          this.toast.showSuccess(data.message, '');\r\n          setTimeout(()=>{\r\n            this.authService.logout();\r\n          },2000)\r\n\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.changePasswordStatus = false;\r\n        const msg = this.error.errorHandlerWithText(this.changePassword, err);\r\n        this.toast.showError(msg.message, 'Error');\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport class PasswordValidation {\r\n\r\n  static MatchPassword(AC: AbstractControl) {\r\n    const password = AC.get('password').value; // to get value in input tag\r\n    const confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\r\n    if (password  !==  confirmPassword) {\r\n      AC.get('confirmPassword').setErrors({MatchPassword: true})\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"container col-lg-11\">\r\n\r\n    <div class=\"mat-card\">\r\n\r\n      <div style=\"margin-top: -35px; position: relative;\">\r\n\r\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"changePasswordForm\" class=\"card viewInfo text-center\">\r\n          <div class=\"md-container\">\r\n            <!--<h4 class=\"text-center\">Change Password</h4>-->\r\n            <mat-form-field class=\"md-inline col-md-8\">\r\n              <label class=\"sr-only\" for=\"oPassword\">Old Password</label>\r\n              <input matInput type=\"password\" id=\"oPassword\" formControlName=\"oldPassword\" name=\"oldPassword\" placeholder=\"Old Password\" value=\"\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"md-inline col-md-8\">\r\n              <label class=\"sr-only\" for=\"nPassword1\">New Password</label>\r\n              <input matInput type=\"password\" id=\"nPassword1\" formControlName= \"password\" name=\"password\" placeholder=\"Enter New Password\" value=\"\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"md-inline col-md-8\">\r\n              <label class=\"sr-only\" for=\"nPassword2\">New Password</label>\r\n              <input matInput type=\"password\" id=\"nPassword2\" formControlName=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" value=\"\">\r\n            </mat-form-field>\r\n\r\n          </div>\r\n          <button md-raised-button type=\"submit\" color=\"accent\" [disabled]=\"changePasswordForm.invalid || changePasswordStatus\"> Change Password <mat-spinner *ngIf=\"changePasswordStatus\" style=\"width: 35px; height: 35px; position: absolute; right: 20px; top: 7px;\"></mat-spinner></button>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {Constants} from \"../../../../../shared/Constants\";\r\n\r\n@Component({\r\n  selector: 'app-agent-support',\r\n  templateUrl: './agent-support.component.html',\r\n  styleUrls: ['./agent-support.component.scss']\r\n})\r\nexport class AgentSupportComponent implements OnInit {\r\n\r\n  pageTitle: string;\r\n  supportEmail = Constants.SUPPORT_EMAIL;\r\n  constructor(public sharedService: SharedService) {\r\n    this.pageTitle = 'Support';\r\n    this.sharedService.emitChange(this.pageTitle);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-card\">\r\n  <div class=\"content-area\">\r\n    <div class=\"container\">\r\n      <div class=\"row mt-5 mb-5\">\r\n        <div class=\"col-xl-2\">\r\n\r\n        </div>\r\n        <div class=\"col-xl-8\">\r\n          <div class=\"widget-content\">\r\n            <div class=\"widget-content-block\">\r\n              <h1><i class=\"fa fa-support\"></i></h1>\r\n              <h2>Support</h2>\r\n              <p>Kindly contact support on <strong><a href=\"mailto:support@lillynaija.com\">{{supportEmail}}</a></strong></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SharedService} from '../../../../../core/services/shared-service/shared.service';\r\nimport {UserService} from '../../../../../core/services/users-service/user-service';\r\nimport {ErrorService} from '../../../../../core/services/error_service/error.service';\r\nimport {Constants} from '../../../../../shared/Constants';\r\n\r\n@Component({\r\n  selector: 'app-agent-fund-request-history',\r\n  templateUrl: './agent-fund-request-history.component.html',\r\n  styleUrls: ['./agent-fund-request-history.component.scss']\r\n})\r\nexport class AgentFundRequestHistoryComponent implements OnInit {\r\n\r\n  errorResponse: any;\r\n  pageTitle = 'Fund History';\r\n  public admins: any;\r\n  public fundTransactions: any;\r\n  public isTransactionsLoaded: boolean;\r\n  public transactionsWithId: any;\r\n  range: any;\r\n  p = 0;\r\n  private useRange: boolean;\r\n  private rangeFromValue: number;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  private rangeToValue: number;\r\n  private arg: any;\r\n  private recentTransaction = [];\r\n  private filteredRequests = [];\r\n\r\n  public checkboxArgs: any;\r\n\r\n  public isSuccessTicked: boolean;\r\n  // public isPendingTicked : boolean;\r\n  public isFailedTicked: boolean;\r\n\r\n  constructor(public sharedService: SharedService, public agent: UserService, public error: ErrorService) {\r\n    this.sharedService.emitChange(this.pageTitle);\r\n    this.range = 'all'; // default range is today\r\n    this.isTransactionsLoaded = true;\r\n    this.transactionsWithId = [];\r\n    this.checkboxArgs = [];\r\n    this.isSuccessTicked = true;\r\n    // this.isPendingTicked = true;\r\n    this.isFailedTicked = true;\r\n\r\n  }\r\n\r\n  // Re-Sort data ////////////////////\r\n  getFundRequestsWithId(): void {\r\n    this.transactionsWithId = [];\r\n\r\n\r\n\r\n    // this.filteredRequests = this.fundTransactions.filter(transaction => {\r\n    //   return transaction.status !== 0;\r\n    // })\r\n\r\n    this.filteredRequests = this.fundTransactions.sort((a, b) => {\r\n      return  a.id - b.id;\r\n    });\r\n\r\n    console.log('this filteredRequests external', this.filteredRequests);\r\n\r\n\r\n\r\n    for (let i = 0; i < this.filteredRequests.length; i++ ) {\r\n      const sortedTranx: any = {id: 0, data: {}};\r\n      sortedTranx.id = i + 1;\r\n      sortedTranx.data = this.filteredRequests[i];\r\n      this.transactionsWithId.push(sortedTranx);\r\n      this.isTransactionsLoaded = false;\r\n    }\r\n  }\r\n\r\n\r\n  // get all airtime transactions or by range\r\n  getFundRequestHistory = () => {\r\n    this.fundTransactions = [];\r\n    this.isTransactionsLoaded = true;\r\n    const agentId = JSON.parse(localStorage.getItem(Constants.PROFILE)).id;\r\n    this.agent.getAgentFundRequestHistory(agentId, this.arg, this.useRange).subscribe(\r\n      (response: any) => {\r\n        this.fundTransactions = response;\r\n        console.log('this.fundTransactions', this.fundTransactions);\r\n        this.getFundRequestsWithId();\r\n        console.log('***** Fund Requests Transactions with id ****');\r\n        console.log(this.transactionsWithId);\r\n\r\n        this.isTransactionsLoaded = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.errorResponse = this.error.errorHandlerWithText(this.getFundRequestHistory, err);\r\n        console.log(this.errorResponse);\r\n        this.isTransactionsLoaded = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  // get transactions by range\r\n  getRangeTransaction(): void {\r\n    this.rangeFromValue = new Date(this.fromDate).getTime();\r\n    this.rangeToValue = new Date(this.toDate).getTime();\r\n    this.arg = '?startDate=' + this.rangeFromValue + '&' + 'endDate=' + this.rangeToValue;\r\n    this.recentTransaction = [];\r\n    this.getFundRequestHistory();\r\n  }\r\n\r\n  getRange = () => {\r\n    if ( this.range  !==  'other') {\r\n      this.useRange = false;\r\n      this.arg = this.range;\r\n      this.recentTransaction = [];\r\n      this.getFundRequestHistory();\r\n    } else {\r\n      this.useRange = true;\r\n    }\r\n    console.log(this.useRange);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getRange();\r\n    this.getFundRequestHistory();\r\n  }\r\n\r\n}\r\n","<div class=\"row\" style=\"margin:20px 5px 10px;\">\r\n  <div class=\"col-lg-12 filter-container\">\r\n\r\n    <div class=\"custom-card\" style=\"margin:0; padding-bottom:20px;\">\r\n      <header>Fund Request History</header>\r\n\r\n      <div class=\"filter-section\">\r\n        <div class=\"filter-block\">\r\n          <div style=\"display: inline-block;\">\r\n            <mat-select [(ngModel)]=\"range\" (change)=\"getRange()\" style=\"width:100px;\"  >\r\n              <mat-option value=\"all\">All</mat-option>\r\n              <mat-option value=\"other\">Range</mat-option>\r\n            </mat-select>\r\n          </div>\r\n          <div class=\"filter-form\" [style.display]=\"range=='other' ? 'block' : 'none'\" style=\"font-size:12px;\">\r\n            <label for=\"fromDate\">From: </label>\r\n            <input type=\"date\" [(ngModel)]=\"fromDate\" id=\"fromDate\" placeholder=\"from date\" style=\"width:120px;\"/>\r\n            <label for=\"toDate\">To: </label>\r\n            <input type=\"date\" [(ngModel)]=\"toDate\" id=\"toDate\" placeholder=\"to date\"  style=\"width:120px;\"/>\r\n            <input type=\"submit\" class=\"filter-btn\" value=\"Search\" (click)=\"getRangeTransaction()\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"filter-block\">\r\n          <!--<ul class=\"list-group list-unstyled list-items\" style=\"float:left; margin-left:5px; font-size:12px;\">-->\r\n            <!--<li class=\"filter-title\">Filter by : </li>-->\r\n            <!--<li class=\"list-group-item select-all\" style=\"color:#5cb85c\">  <mat-checkbox [(ngModel)]=\"isSuccessTicked\">Approved</mat-checkbox></li>-->\r\n            <!--<li class=\"list-group-item\" style=\"color:#d9534f\"> <mat-checkbox [(ngModel)]=\"isFailedTicked\">Declined</mat-checkbox> </li>-->\r\n            <!--&lt;!&ndash;<li class=\"list-group-item\"> <mat-checkbox [checked]=\"vAgents\" #viewAgents (click)=\"selectAgents()\" >Agent</mat-checkbox> </li>&ndash;&gt;-->\r\n          <!--</ul>-->\r\n        </div>\r\n        <!--<div class=\"search-range filter-block\">-->\r\n          <!--<div style=\"display: inline-block; margin-right:0px;\" class=\"row\">-->\r\n            <!--<input class=\"form-control\" style=\"display: inline-block; width:200px;\" type=\"text\" placeholder=\"Filter by name, email or phone\" [(ngModel)]=\"searchText\" name=\"search\" id=\"searchText\">-->\r\n          <!--</div>-->\r\n        <!--</div>-->\r\n      </div>\r\n      <div style=\"min-height:200px;\">\r\n        <table class=\"table table-dark mobile-table\"  *ngIf=\"transactionsWithId.length > 0\">\r\n          <thead>\r\n          <tr>\r\n            <!--make table stable-->\r\n            <th></th>\r\n            <!---->\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Depositor's Name</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Requested Amount</th>\r\n            <th scope=\"col\">Date/Time</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody *ngFor=\"let tranx of transactionsWithId | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\">\r\n          <tr [style.backgroundColor] = \"i%2 === 0 ? '#ecf0f5' : 'white'\">\r\n<!--            <mat-progress-bar *ngIf=\"isloading && agent.data.id === setId\" mode=\"indeterminate\" style=\"position: absolute; width: 95%; margin-top: 45px; margin-bottom: 0\"></mat-progress-bar>-->\r\n            <!--make table stable-->\r\n            <mat-progress-bar mode=\"indeterminate\" style=\"visibility: hidden\"></mat-progress-bar>\r\n\r\n            <td scope=\"row\">{{tranx.id}}</td>\r\n            <td scope=\"row\">{{tranx.data.depositorName}}</td>\r\n            <td scope=\"row\">{{tranx.data.mobileNo}}</td>\r\n            <td scope=\"row\">{{tranx.data.amount | currency | moneyFormatter}}</td>\r\n            <td scope=\"row\">{{tranx.data.createdDate | date}}, {{tranx.data.createdDate | date : 'shortTime'}}\r\n\r\n              <span *ngIf=\"tranx.data.status === 0\" class=\"status\" [style.background-color]=\"'#df9808'\" class=\"status desktopOnly\"></span> <!--failed-->\r\n              <span *ngIf=\"tranx.data.status === -1\" class=\"status\" [style.background-color]=\"'#d9534f'\" class=\"status desktopOnly\"></span> <!--failed-->\r\n              <span *ngIf=\"tranx.data.status === 1\" class=\"status\" [style.background-color]=\"'#5cb85c'\" class=\"status desktopOnly\"></span> <!--successful-->\r\n            </td>\r\n            <td *ngIf=\"tranx.data.status === 0\" class=\"mobileOnly\"><span [style.background-color]=\"'#dfac2d'\" class=\"status-badge\">Awaiting Approval</span></td>\r\n            <td *ngIf=\"tranx.data.status === 1\" class=\"mobileOnly\"><span [style.background-color]=\"'#5cb85c'\" class=\"status-badge\">Approved</span></td>\r\n\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <div *ngIf=\"transactionsWithId.length === 0 && !isTransactionsLoaded\"  style=\"text-align:center; border-top:1px solid #ccc; padding:20px 0px;\">\r\n          <span style=\"color:#ccc; font-size:2rem;\">No Transactions Data</span>\r\n        </div>\r\n        <pagination-controls *ngIf=\"transactionsWithId.length > 0\" style=\"text-align: right\" (pageChange)=\"p = $event\"></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}